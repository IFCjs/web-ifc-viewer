{"version":3,"file":"IFC.js","sources":["../src/utils/global-constants.ts","../src/utils/ifc-types.ts","../src/ifc-parser/parser/parser-map.ts","../src/utils/ifc-data-types.ts","../src/ifc-parser/ifc-models/building-elements.ts","../src/ifc-parser/ifc-models/classification.ts","../src/ifc-parser/ifc-models/context.ts","../src/ifc-parser/ifc-models/geometry.ts","../src/ifc-parser/ifc-models/identities.ts","../src/ifc-parser/ifc-models/materials.ts","../src/ifc-parser/ifc-models/presentation.ts","../src/ifc-parser/ifc-models/properties.ts","../src/ifc-parser/ifc-models/project.ts","../src/ifc-parser/ifc-models/relationships.ts","../src/ifc-parser/ifc-models/quantities.ts","../src/ifc-parser/ifc-models/systems.ts","../src/ifc-parser/ifc-models/spatial-structure.ts","../src/ifc-parser/ifc-models/units.ts","../src/ifc-parser/lexer/lexer.ts","../src/ifc-parser/parser/parser-primitives.ts","../src/ifc-parser/parser/parser-factory.ts","../src/ifc-parser/parser/parser.ts","../src/ifc-parser/semantic/format.ts","../src/ifc-parser/semantic/semantic-primitives.ts","../src/ifc-parser/semantic/semantic-factory.ts","../src/ifc-parser/semantic/semantic.ts","../src/ifc-parser/parser/parse-process.ts","../src/ifc-parser/ifc-services/ifc-items-reader.ts","../src/ifc-parser/ifc-services/ifc-items-referencer.ts","../src/dev/functions-for-development.ts","../src/ifc-parser/ifc-services/ifc-processor.ts","../src/ifc-project-builder/items-finder.ts","../src/ifc-project-builder/ifc-elements-binder.ts","../src/ifc-to-three.js/scene/mainObject.ts","../src/ifc-project-builder/ifc-structure-builder.ts","../src/ifc-to-three.js/geometry-transformer/local-transform-tracker.ts","../src/ifc-to-three.js/geometry-transformer/local-transform-applier.ts","../src/ifc-to-three.js/geometry-transformer/transformation.ts","../src/ifc-to-three.js/geometry-generator/three-geometry/three-line.ts","../src/ifc-to-three.js/geometry-generator/curves/curve.ts","../src/ifc-to-three.js/geometry-generator/three-geometry/three-extrusion.ts","../src/ifc-to-three.js/geometry-generator/extrusions/rectangle-profile-extrusion.ts","../src/ifc-to-three.js/geometry-generator/extrusions/arbitrary-profile-extrusion.ts","../src/ifc-to-three.js/geometry-generator/extrusions/circle-profile-extrusion.ts","../src/ifc-to-three.js/geometry-generator/ifc-geometry/ifc-swept-solid.ts","../src/ifc-to-three.js/geometry-generator/ifc-geometry/ifc-mapped-representation.ts","../src/ifc-to-three.js/geometry-generator/three-geometry/three-brep.ts","../src/ifc-to-three.js/geometry-generator/ifc-geometry/ifc-brep.ts","../src/ifc-to-three.js/geometry-generator/ifc-geometry/ifc-geometric-set.ts","../src/ifc-to-three.js/geometry-generator/three-geometry/three-clipping.ts","../libs/CSGMesh.js","../src/ifc-to-three.js/geometry-operator/boolean-difference.ts","../src/ifc-to-three.js/geometry-generator/ifc-geometry/ifc-clipping.ts","../src/ifc-to-three.js/geometry-generator/ifc-geometry/ifc-bounding-box.ts","../src/ifc-to-three.js/geometry-generator/ifc-geometry/ifc-annotation.ts","../src/ifc-to-three.js/geometry-generator/geometry-map.ts","../src/ifc-to-three.js/geometry-operator/openings-subtractor.ts","../src/ifc-to-three.js/scene/materials-map.ts","../src/ifc-to-three.js/scene/materials.ts","../src/ifc-to-three.js/scene/edges.ts","../src/ifc-to-three.js/geometry-transformer/units-applier.ts","../src/ifc-to-three.js/converter.ts","../src/IFC.ts"],"sourcesContent":["const namedProps = {\r\n  agreementFlag: \"AgreementFlag\",\r\n  axis: \"Axis\",\r\n  axis1: \"Axis1\",\r\n  axis2: \"Axis2\",\r\n  axis3: \"Axis3\",\r\n  baseSurface: \"BaseSurface\",\r\n  basisCurve: \"BasisCurve\",\r\n  bound: \"Bound\",\r\n  bounds: \"Bounds\",\r\n  cfsFaces: \"CfsFaces\",\r\n  coordinates: \"Coordinates\",\r\n  corner: \"Corner\",\r\n  depth: \"Depth\",\r\n  dirRatios: \"DirectionRatios\",\r\n  elements: \"Elements\",\r\n  extDirection: \"ExtrudedDirection\",\r\n  expressId: \"_ExpressId\",\r\n  fbsmFaces: \"FbsmFaces\",\r\n  firstOperand: \"FirstOperand\",\r\n  geometry: \"_Geometry\",\r\n  geomRepresentations: \"_GeometryRepresentations\",\r\n  hasBuildingElements: \"_HasBuildingElements\",\r\n  hasFillings: \"_HasFillings\",\r\n  hasOpenings: \"_HasOpenings\",\r\n  hasSpatial: \"_HasSpatialStructures\",\r\n  hasType: \"_HasType\",\r\n  ifcClass: \"_IfcClass\",\r\n  innerCurves: \"InnerCurves\",\r\n  isBrep: \"_IsBrep\",\r\n  items: \"Items\",\r\n  location: \"Location\",\r\n  localOrigin: \"LocalOrigin\",\r\n  mappingOrigin: \"MappingOrigin:\",\r\n  mappedRepresentation: \"MappedRepresentation:\",\r\n  mappingSource: \"MappingSource\",\r\n  mappingTarget: \"MappingTarget\",\r\n  objectPlacement: \"ObjectPlacement\",\r\n  operator: \"Operator\",\r\n  orientation: \"Orientation\",\r\n  outer: \"Outer\",\r\n  outerCurve: \"OuterCurve\",\r\n  parentCurve: \"ParentCurve\",\r\n  pivots: \"Pivots\",\r\n  placementRelTo: \"PlacementRelTo\",\r\n  points: \"Points\",\r\n  polygon: \"Polygon\",\r\n  polygonalBoundary: \"PolygonalBoundary\",\r\n  position: \"Position\",\r\n  prefix: \"Prefix\",\r\n  profile: \"Profile\",\r\n  radius: \"Radius\",\r\n  refDirection: \"RefDirection\",\r\n  relatedBuildingElement: \"RelatedBuildingElement\",\r\n  relatedElements: \"RelatedElements\",\r\n  relatedObjects: \"RelatedObjects\",\r\n  relatedOpeningElement: \"RelatedOpeningElement\",\r\n  relatingBuildingElement: \"RelatingBuildingElement\",\r\n  relatingObject: \"RelatingObject\",\r\n  relatingOpeningElement: \"RelatingOpeningElement\",\r\n  relatingStructure: \"RelatingStructure\",\r\n  relatingType: \"RelatingType\",\r\n  relativePlacement: \"RelativePlacement\",\r\n  representation: \"Representation\",\r\n  representations: \"Representations\",\r\n  representationType: \"RepresentationType\",\r\n  scale: \"Scale\",\r\n  secondOperand: \"SecondOperand\",\r\n  segments: \"Segments\",\r\n  senseAgreement: \"SenseAgreement\",\r\n  semiAxis1: \"SemiAxis1\",\r\n  semiAxis2: \"SemiAxis2\",\r\n  sweptArea: \"SweptArea\",\r\n  transform: \"_Transformation\",\r\n  trim1: \"Trim1\",\r\n  trim2: \"Trim2\",\r\n  trueGeometry: \"_trueGeometry\",\r\n  undefined: \"undefined\",\r\n  units: \"Units\",\r\n  unitType: \"UnitType\",\r\n  wallThickness: \"WallThickness\",\r\n  xDim: \"XDim\",\r\n  yDim: \"YDim\",\r\n  zDim: \"ZDim\",\r\n};\r\n\r\nconst itemsReaderValues = {\r\n  expressId: \"expressId\",\r\n  type: \"type\",\r\n  properties: \"properties\",\r\n};\r\n\r\nconst typeValue = {\r\n  type: \"type\",\r\n  value: \"value\",\r\n};\r\n\r\nconst ifcUnitsValue = {\r\n  value: \"Value\",\r\n  unit: \"IfcUnit\"\r\n}\r\n\r\nconst ifcValueType = {\r\n  number: \"Number\",\r\n  text: \"Text\",\r\n  enum: \"Enum\",\r\n  bool: \"Boolean\",\r\n  singleNumber: \"SingleNumber\",\r\n};\r\n\r\nconst geometryTypes = {\r\n  annotation2D: \"Annotation2D\",\r\n  curve2D: \"Curve2D\",\r\n  sweptSolid: \"SweptSolid\",\r\n  mappedRepresentation: \"MappedRepresentation\",\r\n  brep: \"Brep\",\r\n  geometricSet: \"GeometricSet\",\r\n  clipping: \"Clipping\",\r\n  extrudedAreaSolid: \"IfcExtrudedAreaSolid\",\r\n  surfaceModel: \"SurfaceModel\",\r\n  boundingBox: \"BoundingBox\",\r\n};\r\n\r\nconst ifcBoolValues = {\r\n  trueValue: \".T.\",\r\n  falseValue: \".F.\",\r\n};\r\n\r\nconst structuredData = {\r\n  ifcProject: \"IfcProject\",\r\n  products: \"Products\",\r\n  spaces: \"Spaces\",\r\n  units: \"Units\",\r\n  mainObject: \"MainObject\",\r\n};\r\n\r\nconst pivots = {\r\n  pivots: \"Pivots\",\r\n  locat: \"Locations\",\r\n  xAxis: \"xRotation\",\r\n  yAxis: \"yRotation\",\r\n  zAxis: \"zRotation\",\r\n};\r\n\r\nconst defaultValue = \"$\";\r\n\r\nexport {\r\n  pivots,\r\n  geometryTypes,\r\n  namedProps,\r\n  typeValue,\r\n  ifcValueType,\r\n  ifcBoolValues,\r\n  structuredData,\r\n  defaultValue,\r\n  itemsReaderValues,\r\n  ifcUnitsValue\r\n};\r\n","const ifcTypes = {\r\n  //Building elements\r\n  IfcBuildingElementProxy: \"IFCBUILDINGELEMENTPROXY\",\r\n  IfcBeam: \"IFCBEAM\",\r\n  IfcColumn: \"IFCCOLUMN\",\r\n  IfcCovering: \"IFCCOVERING\",\r\n  IfcCurtainWall: \"IFCCURTAINWALL\",\r\n  IfcDoor: \"IFCDOOR\",\r\n  IfcEquipmentElement: \"IFCEQUIPMENTELEMENT\",\r\n  IfcFlowTerminal: \"IFCFLOWTERMINAL\",\r\n  IfcFooting: \"IFCFOOTING\",\r\n  IfcFurnishingElement: \"IFCFURNISHINGELEMENT\",\r\n  IfcMappedItem: \"IFCMAPPEDITEM\",\r\n  IfcMember: \"IFCMEMBER\",\r\n  IfcPlate: \"IFCPLATE\",\r\n  IfcRailing: \"IFCRAILING\",\r\n  IfcSlab: \"IFCSLAB\",\r\n  IfcOpeningElement: \"IFCOPENINGELEMENT\",\r\n  IfcRoof: \"IFCROOF\",\r\n  IfcStairFlight: \"IFCSTAIRFLIGHT\",\r\n  IfcStair: \"IFCSTAIR\",\r\n  IfcWallStandardCase: \"IFCWALLSTANDARDCASE\",\r\n  IfcWall: \"IFCWALL\",\r\n  IfcWindow: \"IFCWINDOW\",\r\n  //Classification\r\n  IfcClassification: \"IFCCLASSIFICATION\",\r\n  IfcClassificationReference: \"IFCCLASSIFICATIONREFERENCE\",\r\n  //Contexts\r\n  IfcGeometricRepresentationContext: \"IFCGEOMETRICREPRESENTATIONCONTEXT\",\r\n  IfcGeometricRepresentationSubContext: \"IFCGEOMETRICREPRESENTATIONSUBCONTEXT\",\r\n  IfcGridPlacement: \"IFCGRIDPLACEMENT\",\r\n  IfcLinearPlacement: \"IFCLINEARPLACEMENT\",\r\n  IfcLocalPlacement: \"IFCLOCALPLACEMENT\",\r\n  //Geometry\r\n  IfcArbitraryClosedProfileDef: \"IFCARBITRARYCLOSEDPROFILEDEF\",\r\n  IfcArbitraryProfileDefWithVoids: \"IFCARBITRARYPROFILEDEFWITHVOIDS\",\r\n  IfcAxis2Placement2D: \"IFCAXIS2PLACEMENT2D\",\r\n  IfcAxis2Placement3D: \"IFCAXIS2PLACEMENT3D\",\r\n  IfcBooleanClippingResult: \"IFCBOOLEANCLIPPINGRESULT\",\r\n  IfcBoundingBox: \"IFCBOUNDINGBOX\",\r\n  IfcCartesianPoint: \"IFCCARTESIANPOINT\",\r\n  IfcCartesianTransformationOperator3D: \"IFCCARTESIANTRANSFORMATIONOPERATOR3D\",\r\n  IfcCircle: \"IFCCIRCLE\",\r\n  IfcCircleHollowProfileDef: \"IFCCIRCLEHOLLOWPROFILEDEF\",\r\n  IfcClosedShell: \"IFCCLOSEDSHELL\",\r\n  IfcCircleProfileDef: \"IFCCIRCLEPROFILEDEF\",\r\n  IfcCompositeCurve: \"IFCCOMPOSITECURVE\",\r\n  IfcCompositeCurveSegment: \"IFCCOMPOSITECURVESEGMENT\",\r\n  IfcConnectedFaceSet: \"IFCCONNECTEDFACESET\",\r\n  IfcConnectionSurfaceGeometry: \"IFCCONNECTIONSURFACEGEOMETRY\",\r\n  IfcCurveBoundedPlane: \"IFCCURVEBOUNDEDPLANE\",\r\n  IfcDirection: \"IFCDIRECTION\",\r\n  IfcEllipse: \"IFCELLIPSE\",\r\n  IfcExtrudedAreaSolid: \"IFCEXTRUDEDAREASOLID\",\r\n  IfcFaceBound: \"IFCFACEBOUND\",\r\n  IfcFace: \"IFCFACE\",\r\n  IfcFaceBasedSurfaceModel: \"IFCFACEBASEDSURFACEMODEL\",\r\n  IfcFaceOuterBound: \"IFCFACEOUTERBOUND\",\r\n  IfcFacetedBrep: \"IFCFACETEDBREP\",\r\n  IfcGeometricCurveSet: \"IFCGEOMETRICCURVESET\",\r\n  IfcGeometricSet: \"IFCGEOMETRICSET\",\r\n  IfcHalfSpaceSolid: \"IFCHALFSPACESOLID\",\r\n  IfcIShapeProfileDef: \"IFCISHAPEPROFILEDEF\",\r\n  IfcPlanarExtent: \"IFCPLANAREXTENT\",\r\n  IfcPlane: \"IFCPLANE\",\r\n  IfcPolygonalBoundedHalfSpace: \"IFCPOLYGONALBOUNDEDHALFSPACE\",\r\n  IfcPolyline: \"IFCPOLYLINE\",\r\n  IfcPolyLoop: \"IFCPOLYLOOP\",\r\n  IfcProductDefinitionShape: \"IFCPRODUCTDEFINITIONSHAPE\",\r\n  IfcRectangleProfileDef: \"IFCRECTANGLEPROFILEDEF\",\r\n  IfcShapeRepresentation: \"IFCSHAPEREPRESENTATION\",\r\n  IfcTrimmedCurve: \"IFCTRIMMEDCURVE\",\r\n  IfcArbitraryOpenProfileDef: \"IFCARBITRARYOPENPROFILEDEF\",\r\n  IfcSurfaceOfLinearExtrusion: \"IFCSURFACEOFLINEAREXTRUSION\",\r\n  //Identities\r\n  IfcApplication: \"IFCAPPLICATION\",\r\n  IfcOrganization: \"IFCORGANIZATION\",\r\n  IfcOwnerHistory: \"IFCOWNERHISTORY\",\r\n  IfcPerson: \"IFCPERSON\",\r\n  IfcPersonAndOrganization: \"IFCPERSONANDORGANIZATION\",\r\n  IfcPostalAddress: \"IFCPOSTALADDRESS\",\r\n  //Materials\r\n  IfcMaterial: \"IFCMATERIAL\",\r\n  IfcMaterialLayer: \"IFCMATERIALLAYER\",\r\n  IfcMaterialLayerSet: \"IFCMATERIALLAYERSET\",\r\n  IfcMaterialLayerSetUsage: \"IFCMATERIALLAYERSETUSAGE\",\r\n  IfcMaterialList: \"IFCMATERIALLIST\",\r\n  //Presentation\r\n  IfcAnnotation: \"IFCANNOTATION\",\r\n  IfcAnnotationFillArea: \"IFCANNOTATIONFILLAREA\",\r\n  IfcColourRgb: \"IFCCOLOURRGB\",\r\n  IfcCurveStyle: \"IFCCURVESTYLE\",\r\n  IfcCurveStyleFont: \"IFCCURVESTYLEFONT\",\r\n  IfcCurveStyleFontPattern: \"IFCCURVESTYLEFONTPATTERN\",\r\n  IfcDraughtingPreDefinedCurveFont: \"IFCDRAUGHTINGPREDEFINEDCURVEFONT\",\r\n  IfcFillAreaStyle: \"IFCFILLAREASTYLE\",\r\n  IfcFillAreaStyleHatching: \"IFCFILLAREASTYLEHATCHING\",\r\n  IfcMaterialDefinitionRepresentation: \"IFCMATERIALDEFINITIONREPRESENTATION\",\r\n  IfcRepresentationMap: \"IFCREPRESENTATIONMAP\",\r\n  IfcPresentationLayerAssignment: \"IFCPRESENTATIONLAYERASSIGNMENT\",\r\n  IfcPresentationStyleAssignment: \"IFCPRESENTATIONSTYLEASSIGNMENT\",\r\n  IfcStyledItem: \"IFCSTYLEDITEM\",\r\n  IfcStyledRepresentation: \"IFCSTYLEDREPRESENTATION\",\r\n  IfcSurfaceStyle: \"IFCSURFACESTYLE\",\r\n  IfcSurfaceStyleRendering: \"IFCSURFACESTYLERENDERING\",\r\n  IfcSurfaceStyleShading: \"IFCSURFACESTYLESHADING\",\r\n  IfcTextLiteralWithExtent: \"IFCTEXTLITERALWITHEXTENT\",\r\n  IfcTextStyle: \"IFCTEXTSTYLE\",\r\n  IfcTextStyleFontModel: \"IFCTEXTSTYLEFONTMODEL\",\r\n  IfcTextStyleForDefinedFont: \"IFCTEXTSTYLEFORDEFINEDFONT\",\r\n  //Project\r\n  IfcActor: \"IFCACTOR\",\r\n  //Properties\r\n  IfcAirTerminalType: \"IFCAIRTERMINALTYPE\",\r\n  IfcBuildingElementProxyType: \"IFCBUILDINGELEMENTPROXYTYPE\",\r\n  IfcColumnType: \"IFCCOLUMNTYPE\",\r\n  IfcCoveringType: \"IFCCOVERINGTYPE\",\r\n  IfcCurtainWallType: \"IFCCURTAINWALLTYPE\",\r\n  IfcFurnitureType: \"IFCFURNITURETYPE\",\r\n  IfcDistributionElementType: \"IFCDISTRIBUTIONELEMENTTYPE\",\r\n  IfcDoorType: \"IFCDOORTYPE\",\r\n  IfcDoorLiningProperties: \"IFCDOORLININGPROPERTIES\",\r\n  IfcDoorPanelProperties: \"IFCDOORPANELPROPERTIES\",\r\n  IfcDoorStyle: \"IFCDOORSTYLE\",\r\n  IfcLightFixtureType: \"IFCLIGHTFIXTURETYPE\",\r\n  IfcMemberType: \"IFCMEMBERTYPE\",\r\n  IfcPlateType: \"IFCPLATETYPE\",\r\n  IfcPropertySet: \"IFCPROPERTYSET\",\r\n  IfcPropertySingleValue: \"IFCPROPERTYSINGLEVALUE\",\r\n  IfcSanitaryTerminalType: \"IFCSANITARYTERMINALTYPE\",\r\n  IfcSpaceType: \"IFCSPACETYPE\",\r\n  IfcStairFlightType: \"IFCSTAIRFLIGHTTYPE\",\r\n  IfcSystemFurnitureElementType: \"IFCSYSTEMFURNITUREELEMENTTYPE\",\r\n  IfcWallType: \"IFCWALLTYPE\",\r\n  IfcWindowStyle: \"IFCWINDOWSTYLE\",\r\n  IfcSlabType: \"IFCSLABTYPE\",\r\n  IfcWindowLiningProperties: \"IFCWINDOWLININGPROPERTIES\",\r\n  //Quantities\r\n  IfcElementQuantity: \"IFCELEMENTQUANTITY\",\r\n  IfcQuantityArea: \"IFCQUANTITYAREA\",\r\n  IfcQuantityLength: \"IFCQUANTITYLENGTH\",\r\n  IfcQuantityVolume: \"IFCQUANTITYVOLUME\",\r\n  // Relationships\r\n  IfcRelAggregates: \"IFCRELAGGREGATES\",\r\n  IfcRelAssignsToActor: \"IFCRELASSIGNSTOACTOR\",\r\n  IfcRelAssignsToGroup: \"IFCRELASSIGNSTOGROUP\",\r\n  IfcRelAssociatesClassification: \"IFCRELASSOCIATESCLASSIFICATION\",\r\n  IfcRelAssociatesMaterial: \"IFCRELASSOCIATESMATERIAL\",\r\n  IfcRelConnectsPathElements: \"IFCRELCONNECTSPATHELEMENTS\",\r\n  IfcRelConnectsPortToElement: \"IFCRELCONNECTSPORTTOELEMENT\",\r\n  IfcRelContainedInSpatialStructure: \"IFCRELCONTAINEDINSPATIALSTRUCTURE\",\r\n  IfcRelDefinesByProperties: \"IFCRELDEFINESBYPROPERTIES\",\r\n  IfcRelDefinesByType: \"IFCRELDEFINESBYTYPE\",\r\n  IfcRelFillsElement: \"IFCRELFILLSELEMENT\",\r\n  IfcGroup: \"IFCGROUP\",\r\n  IfcRelSpaceBoundary: \"IFCRELSPACEBOUNDARY\",\r\n  IfcRelServicesBuildings: \"IFCRELSERVICESBUILDINGS\",\r\n  IfcRelVoidsElement: \"IFCRELVOIDSELEMENT\",\r\n  //Spatial structure elements\r\n  IfcBuilding: \"IFCBUILDING\",\r\n  IfcBuildingStorey: \"IFCBUILDINGSTOREY\",\r\n  IfcProject: \"IFCPROJECT\",\r\n  IfcSite: \"IFCSITE\",\r\n  IfcSpace: \"IFCSPACE\",\r\n  //Systems\r\n  IfcDistributionPort: \"IFCDISTRIBUTIONPORT\",\r\n  IfcSystem: \"IFCSYSTEM\",\r\n  //Units\r\n  IfcConversionBasedUnit: \"IFCCONVERSIONBASEDUNIT\",\r\n  IfcDerivedUnit: \"IFCDERIVEDUNIT\",\r\n  IfcDerivedUnitElement: \"IFCDERIVEDUNITELEMENT\",\r\n  IfcDimensionalExponents: \"IFCDIMENSIONALEXPONENTS\",\r\n  IfcMeasureWithUnit: \"IFCMEASUREWITHUNIT\",\r\n  IfcSIUnit: \"IFCSIUNIT\",\r\n  IfcUnitAssignment: \"IFCUNITASSIGNMENT\",\r\n};\r\n\r\nfunction getName(ifcType: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return Object.keys(ifcTypes).find((key) => ifcTypes[key] === ifcType);\r\n}\r\n\r\nexport { ifcTypes, getName };\r\n","import { namedProps as n } from \"../../utils/global-constants.js\";\r\nimport { ifcTypes } from \"../../utils/ifc-types.js\";\r\n\r\nconst typesParserMap = {};\r\n\r\nfunction newObject(ifcObject: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  typesParserMap[ifcTypes[ifcObject[n.ifcClass]]] = ifcObject;\r\n}\r\n\r\nfunction parserByType(ifcType: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return typesParserMap[ifcType];\r\n}\r\n\r\nexport { parserByType, typesParserMap, newObject };\r\n","const ifcDataTypes = {\r\n  asterisk: \"Asterisk\",\r\n  anything: \"Anything\",\r\n  bool: \"Boolean\",\r\n  date: \"Date\",\r\n  default: \"DefaultValue\",\r\n  enum: \"Enum\",\r\n  id: \"ExpressId\",\r\n  idSet: \"ExpressIdSet\",\r\n  value: \"IfcValue\",\r\n  number: \"Number\",\r\n  numSet: \"NumberSet\",\r\n  valueSet: \"ValueSet\",\r\n  text: \"Text\",\r\n  textSet: \"TextSet\",\r\n};\r\n\r\nfunction isDataTypeValid(dataType: any) {\r\n  if (Object.values(ifcDataTypes).indexOf(dataType) > -1) return true;\r\n  return false;\r\n}\r\n\r\nfunction getAllDataTypes() {\r\n  return Object.values(ifcDataTypes);\r\n}\r\n\r\nexport { ifcDataTypes, isDataTypeValid, getAllDataTypes };\r\n","import { newObject } from '../parser/parser-map.js';\r\nimport { namedProps as n } from '../../utils/global-constants.js';\r\nimport { ifcDataTypes as d } from '../../utils/ifc-data-types.js';\r\nimport { getName, ifcTypes as t } from '../../utils/ifc-types.js';\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcMappedItem),\r\n  [n.mappingSource]: d.id,\r\n  [n.mappingTarget]: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcWall),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcBeam),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcFooting),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text,\r\n  PredefinedType: d.enum\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcWallStandardCase),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCurtainWall),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcDoor),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text,\r\n  OverallHeight: d.number,\r\n  OverallWidth: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRailing),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text,\r\n  PredefinedType: d.enum\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPlate),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcMember),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSlab),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text,\r\n  PredefinedType: d.enum\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcOpeningElement),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcWindow),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text,\r\n  OverallHeight: d.number,\r\n  OverallWidth: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcStair),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text,\r\n  ShapeType: d.enum\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRoof),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text,\r\n  ShapeType: d.enum\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcColumn),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcStairFlight),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text,\r\n  NumberOfRiser: d.number,\r\n  NumberOfThreads: d.number,\r\n  RiserHeight: d.number,\r\n  TreadLength: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcFlowTerminal),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcFurnishingElement),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCovering),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text,\r\n  PredefinedType: d.enum\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcBuildingElementProxy),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text,\r\n  CompositionType: d.enum\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcEquipmentElement),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  Tag: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcAnnotation),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n});","import { newObject } from \"../parser/parser-map.js\";\r\nimport { namedProps as p } from \"../../utils/global-constants.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\nimport { getName, ifcTypes as t } from \"../../utils/ifc-types.js\";\r\n\r\nnewObject({\r\n  [p.ifcClass]: getName(t.IfcClassification),\r\n  Source: d.text,\r\n  Edition: d.text,\r\n  EditionDate: d.id,\r\n  Name: d.text,\r\n});\r\n\r\nnewObject({\r\n  [p.ifcClass]: getName(t.IfcClassificationReference),\r\n  Location: d.text,\r\n  ItemReference: d.text,\r\n  Name: d.text,\r\n  ReferencedSource: d.id,\r\n});\r\n","import { newObject } from \"../parser/parser-map.js\";\r\nimport { namedProps as n } from \"../../utils/global-constants.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\nimport { getName, ifcTypes as t } from \"../../utils/ifc-types.js\";\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcGeometricRepresentationContext),\r\n  ContextIdentifier: d.text,\r\n  ContextType: d.text,\r\n  CoordinateSpaceDimension: d.number,\r\n  Precision: d.number,\r\n  WorldCoordinateSystem: d.id,\r\n  TrueNorth: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcGeometricRepresentationSubContext),\r\n  ContextIdentifier: d.text,\r\n  ContextType: d.text,\r\n  [n.undefined]: d.asterisk,\r\n  ParentContext: d.id,\r\n  TargetScale: d.value,\r\n  TargetView: d.enum,\r\n  UserDefinedTargetView: d.text,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcGridPlacement),\r\n  PlacementLocation: d.id,\r\n  PlacementRefDirection: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcLinearPlacement),\r\n  PlacementRelTo: d.id,\r\n  PlacementMeasuredAlong: d.id,\r\n  Distance: d.id,\r\n  Orientation: d.id,\r\n  CartesianPosition: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcLocalPlacement),\r\n  PlacementRelTo: d.id,\r\n  RelativePlacement: d.id,\r\n});\r\n","import { newObject } from '../parser/parser-map.js';\r\nimport { namedProps as n } from '../../utils/global-constants.js';\r\nimport { ifcDataTypes as d } from '../../utils/ifc-data-types.js';\r\nimport { getName, ifcTypes as t } from '../../utils/ifc-types.js';\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcAxis2Placement2D),\r\n  [n.location]: d.id,\r\n  [n.refDirection]: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcAxis2Placement3D),\r\n  [n.location]: d.id,\r\n  [n.axis]: d.id,\r\n  [n.refDirection]: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcBooleanClippingResult),\r\n  [n.operator]: d.enum,\r\n  [n.firstOperand]: d.id,\r\n  [n.secondOperand]: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcEllipse),\r\n  [n.position]: d.id,\r\n  [n.semiAxis1]: d.number,\r\n  [n.semiAxis2]: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcIShapeProfileDef),\r\n  ProfileType: d.enum,\r\n  ProfileName: d.text,\r\n  Position: d.id,\r\n  OverallWidth: d.number,\r\n  OverallDepth: d.number,\r\n  WebThickness: d.number,\r\n  FlangeThickness: d.number,\r\n  FilletRadius: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCartesianPoint),\r\n  [n.coordinates]: d.numSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcConnectionSurfaceGeometry),\r\n  SurfaceOnRelatingElement: d.id,\r\n  SurfaceOnRelatedElement: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCurveBoundedPlane),\r\n  BasisSurface: d.id,\r\n  OuterBoundary: d.id,\r\n  InnerBoundaries: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcDirection),\r\n  [n.dirRatios]: d.numSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcExtrudedAreaSolid),\r\n  [n.sweptArea]: d.id,\r\n  [n.position]: d.id,\r\n  [n.extDirection]: d.id,\r\n  [n.depth]: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPlane),\r\n  Position: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPolygonalBoundedHalfSpace),\r\n  [n.baseSurface]: d.id,\r\n  [n.agreementFlag]: d.bool,\r\n  [n.position]: d.id,\r\n  [n.polygonalBoundary]: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPolyline),\r\n  [n.points]: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcProductDefinitionShape),\r\n  Description: d.text,\r\n  [n.representationType]: d.text,\r\n  [n.representations]: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRectangleProfileDef),\r\n  ProfileType: d.enum,\r\n  ProfileName: d.text,\r\n  [n.position]: d.id,\r\n  [n.xDim]: d.number,\r\n  [n.yDim]: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCircleProfileDef),\r\n  ProfileType: d.enum,\r\n  ProfileName: d.text,\r\n  [n.position]: d.id,\r\n  [n.radius]: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCircleHollowProfileDef),\r\n  ProfileType: d.enum,\r\n  ProfileName: d.text,\r\n  [n.position]: d.id,\r\n  [n.radius]: d.number,\r\n  [n.wallThickness]: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcArbitraryProfileDefWithVoids),\r\n  ProfileType: d.enum,\r\n  ProfileName: d.text,\r\n  [n.outerCurve]: d.id,\r\n  [n.innerCurves]: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcArbitraryClosedProfileDef),\r\n  ProfileType: d.enum,\r\n  ProfileName: d.text,\r\n  [n.outerCurve]: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcShapeRepresentation),\r\n  ContextOfItems: d.id,\r\n  RepresentationIdentifier: d.text,\r\n  [n.representationType]: d.text,\r\n  [n.items]: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcFaceOuterBound),\r\n  [n.bound]: d.id,\r\n  [n.orientation]: d.bool\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcFaceBound),\r\n  [n.bound]: d.id,\r\n  [n.orientation]: d.bool\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcFace),\r\n  [n.bounds]: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPolyLoop),\r\n  [n.polygon]: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcClosedShell),\r\n  [n.cfsFaces]: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcFacetedBrep),\r\n  [n.outer]: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCartesianTransformationOperator3D),\r\n  [n.axis1]: d.id,\r\n  [n.axis2]: d.id,\r\n  [n.localOrigin]: d.id,\r\n  [n.scale]: d.number,\r\n  [n.axis3]: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSurfaceOfLinearExtrusion),\r\n  SweptCurve: d.id,\r\n  Position: d.id,\r\n  ExtrudedDirection: d.id,\r\n  Depth: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcArbitraryOpenProfileDef),\r\n  ProfileType: d.enum,\r\n  ProfileName: d.text,\r\n  Curve: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcGeometricSet),\r\n  Elements: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcGeometricCurveSet),\r\n  [n.elements]: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcConnectedFaceSet),\r\n  CfsFaces: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcFaceBasedSurfaceModel),\r\n  FbsmFaces: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcHalfSpaceSolid),\r\n  [n.baseSurface]: d.id,\r\n  [n.agreementFlag]: d.bool\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCompositeCurveSegment),\r\n  Transition: d.enum,\r\n  SameSense: d.bool,\r\n  [n.parentCurve]: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCircle),\r\n  Position: d.id,\r\n  Radius: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcTrimmedCurve),\r\n  [n.basisCurve]: d.id,\r\n  [n.trim1]: d.valueSet,\r\n  [n.trim2]: d.valueSet,\r\n  [n.senseAgreement]: d.bool,\r\n  MasterRepresentation: d.enum\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCompositeCurve),\r\n  [n.segments]: d.idSet,\r\n  SelfIntersect: d.bool\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcBoundingBox),\r\n  [n.corner]: d.id,\r\n  [n.xDim]: d.number,\r\n  [n.yDim]: d.number,\r\n  [n.zDim]: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPlanarExtent),\r\n  SizeInX: d.number,\r\n  SizeInY: d.number\r\n});\r\n","import { newObject } from \"../parser/parser-map.js\";\r\nimport { namedProps as n } from \"../../utils/global-constants.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\nimport { getName, ifcTypes as t } from \"../../utils/ifc-types.js\";\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcApplication),\r\n  ApplicationDeveloper: d.id,\r\n  Version: d.text,\r\n  ApplicationFullName: d.text,\r\n  ApplicationIdentifier: d.text,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcOrganization),\r\n  Identification: d.text,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  Roles: d.idSet,\r\n  Addresses: d.idSet,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcOwnerHistory),\r\n  OwningUser: d.id,\r\n  OwningApplication: d.id,\r\n  State: d.enum,\r\n  ChangeAction: d.enum,\r\n  LastModifiedDate: d.date,\r\n  LastModifyingUser: d.id,\r\n  LastModifyingApplication: d.id,\r\n  CreationDate: d.date,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPerson),\r\n  Identification: d.text,\r\n  FamilyName: d.text,\r\n  GivenName: d.text,\r\n  MiddleNames: d.textSet,\r\n  PrefixTitles: d.textSet,\r\n  SuffixTitles: d.textSet,\r\n  Roles: d.idSet,\r\n  Addresses: d.idSet,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPersonAndOrganization),\r\n  ThePerson: d.id,\r\n  TheOrganization: d.id,\r\n  Roles: d.idSet,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPostalAddress),\r\n  Purpose: d.enum,\r\n  Description: d.text,\r\n  UserDefinedPurpose: d.text,\r\n  InternalLocation: d.text,\r\n  AddressLines: d.textSet,\r\n  PostalBox: d.text,\r\n  Town: d.text,\r\n  Region: d.text,\r\n  PostalCode: d.text,\r\n  Country: d.text,\r\n});\r\n","import { newObject } from \"../parser/parser-map.js\";\r\nimport { namedProps as n } from \"../../utils/global-constants.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\nimport { getName, ifcTypes as t } from \"../../utils/ifc-types.js\";\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcMaterial),\r\n  Name: d.text,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcMaterialLayer),\r\n  Material: d.id,\r\n  LayerThickness: d.number,\r\n  IsVentilated: d.value,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcMaterialLayerSet),\r\n  MaterialLayers: d.idSet,\r\n  LayerSetName: d.text,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcMaterialLayerSetUsage),\r\n  ForLayerSet: d.id,\r\n  LayerSetDirection: d.enum,\r\n  DirectionSense: d.enum,\r\n  OffsetFromReferenceLine: d.number,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcMaterialList),\r\n  Materials: d.idSet,\r\n});\r\n","import { newObject } from '../parser/parser-map.js';\r\nimport { namedProps as n } from '../../utils/global-constants.js';\r\nimport { ifcDataTypes as d } from '../../utils/ifc-data-types.js';\r\nimport { getName, ifcTypes as t } from '../../utils/ifc-types.js';\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcColourRgb),\r\n  Name: d.text,\r\n  Red: d.number,\r\n  Green: d.number,\r\n  Blue: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCurveStyleFontPattern),\r\n  VisibleSegmentLength: d.number,\r\n  InvisibleSegmentLength: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCurveStyle),\r\n  Name: d.text,\r\n  CurveFont: d.id,\r\n  CurveWidth: d.value,\r\n  CurveColour: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcFillAreaStyle),\r\n  Name: d.text,\r\n  FillStyles: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcFillAreaStyleHatching),\r\n  HatchLineAppearance: d.id,\r\n  StartOfNextHatchLine: d.value,\r\n  PointOfReferenceHatchLine: d.id,\r\n  PatternStart: d.id,\r\n  HatchLineAngle: d.number\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCurveStyleFont),\r\n  Name: d.text,\r\n  PatternList: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcDraughtingPreDefinedCurveFont),\r\n  Name: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcMaterialDefinitionRepresentation),\r\n  Name: d.text,\r\n  Description: d.text,\r\n  [n.representations]: d.idSet,\r\n  RepresentedMaterial: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPresentationStyleAssignment),\r\n  Styles: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcStyledItem),\r\n  Item: d.id,\r\n  Styles: d.idSet,\r\n  Name: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcStyledRepresentation),\r\n  ContextOfItems: d.id,\r\n  RepresentationIdentifier: d.text,\r\n  [n.representationType]: d.text,\r\n  [n.items]: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSurfaceStyle),\r\n  Name: d.text,\r\n  Side: d.enum,\r\n  Styles: d.idSet\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSurfaceStyleRendering),\r\n  SurfaceColour: d.id,\r\n  Transparency: d.value,\r\n  DiffuseColour: d.value,\r\n  TransmissionColour: d.value,\r\n  DiffuseTransmissionColour: d.value,\r\n  ReflectionColour: d.value,\r\n  SpecularColour: d.value,\r\n  SpecularHighlight: d.value,\r\n  ReflectanceMethod: d.enum\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRepresentationMap),\r\n  [n.mappingOrigin]: d.id,\r\n  [n.mappedRepresentation]: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPresentationLayerAssignment),\r\n  Name: d.text,\r\n  Description: d.text,\r\n  AssignedItems: d.idSet,\r\n  Identifier: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSurfaceStyleShading),\r\n  SurfaceColour: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcTextStyleFontModel),\r\n  Name: d.text,\r\n  FontFamily: d.textSet,\r\n  FontStyle: d.text,\r\n  FontVariant: d.text,\r\n  FontWeight: d.number,\r\n  FontSize: d.value\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcTextStyleForDefinedFont),\r\n  Colour: d.id,\r\n  BackgroundColour: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcTextStyle),\r\n  Name: d.text,\r\n  TextCharacterAppearance: d.id,\r\n  TextStyle: d.id,\r\n  TextFontStyle: d.id\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcTextLiteralWithExtent),\r\n  Literal: d.text,\r\n  Placement: d.id,\r\n  Path: d.enum,\r\n  Extent: d.id,\r\n  BoxAlignment: d.text\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcAnnotationFillArea),\r\n  OuterBoundary: d.id,\r\n  InnerBoundaries: d.idSet,\r\n});\r\n","import { newObject } from \"../parser/parser-map.js\";\r\nimport { namedProps as n } from \"../../utils/global-constants.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\nimport { getName, ifcTypes as t } from \"../../utils/ifc-types.js\";\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPropertySet),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  HasProperties: d.idSet,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPropertySingleValue),\r\n  Name: d.text,\r\n  Description: d.text,\r\n  NominalValue: d.value,\r\n  Unit: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSpaceType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcColumnType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcPlateType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcMemberType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcWallType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcStairFlightType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCoveringType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcCurtainWallType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcFurnitureType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  AssemblyPlace: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcDoorType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n  OperationType: d.enum,\r\n  ParameterTakesPrecedence: d.bool,\r\n  UserDefinedOperationType: d.text,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSlabType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcBuildingElementProxyType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSanitaryTerminalType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcAirTerminalType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcLightFixtureType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n  PredefinedType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSystemFurnitureElementType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcDistributionElementType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ElementType: d.text,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcDoorLiningProperties),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  LiningDepth: d.number,\r\n  LiningThickness: d.number,\r\n  ThresholdDepth: d.number,\r\n  ThresholdThickness: d.number,\r\n  TransomThickness: d.number,\r\n  TransomOffset: d.number,\r\n  LiningOffset: d.number,\r\n  ThresholdOffset: d.number,\r\n  CasingThickness: d.number,\r\n  CasingDepth: d.number,\r\n  ShapeAspectStyle: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcDoorPanelProperties),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  PanelDepth: d.number,\r\n  PanelOperation: d.enum,\r\n  PanelWidth: d.value,\r\n  PanelPosition: d.enum,\r\n  ShapeAspectStyle: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcDoorStyle),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  OperationType: d.enum,\r\n  ConstructionType: d.enum,\r\n  ParameterTakesPrecedence: d.bool,\r\n  Sizeable: d.bool,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcWindowStyle),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ApplicableOccurrence: d.text,\r\n  HasPropertySets: d.idSet,\r\n  RepresentationMaps: d.idSet,\r\n  Tag: d.text,\r\n  ConstructionType: d.enum,\r\n  OperationType: d.enum,\r\n  ParameterTakesPrecedence: d.bool,\r\n  Sizeable: d.bool,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcWindowLiningProperties),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  LiningDepth: d.number,\r\n  LiningThickness: d.number,\r\n  TransomThickness: d.number,\r\n  MullionThickness: d.number,\r\n  FirstTransomOffset: d.number,\r\n  SecondTransomOffset: d.number,\r\n  FirstMullionOffset: d.number,\r\n  SecondMullionOffset: d.number,\r\n  ShapeAspectStyle: d.number,\r\n});","import { newObject } from \"../parser/parser-map.js\";\r\nimport { namedProps as n } from \"../../utils/global-constants.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\nimport { getName, ifcTypes as t } from \"../../utils/ifc-types.js\";\r\n\r\nnewObject({\r\n    [n.ifcClass]: getName(t.IfcActor),\r\n    GlobalId: d.text,\r\n    OwnerHistory: d.id,\r\n    Name: d.text,\r\n    Description: d.text,\r\n    ObjectType: d.text,\r\n    TheActor: d.id,\r\n  });","import { newObject } from \"../parser/parser-map.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\nimport { getName, ifcTypes as t } from \"../../utils/ifc-types.js\";\r\nimport { namedProps as n } from \"../../utils/global-constants.js\";\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelAggregates),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  [n.relatingObject]: d.id,\r\n  [n.relatedObjects]: d.idSet,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelContainedInSpatialStructure),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  [n.relatedElements]: d.idSet,\r\n  [n.relatingStructure]: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelDefinesByProperties),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  RelatedObjects: d.idSet,\r\n  RelatingPropertyDefinition: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelAssociatesMaterial),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  RelatedObjects: d.idSet,\r\n  RelatingMaterial: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelAssociatesClassification),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  RelatedObjects: d.idSet,\r\n  RelatingClassification: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelDefinesByType),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  [n.relatedObjects]: d.idSet,\r\n  [n.relatingType]: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelSpaceBoundary),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  RelatingSpace: d.id,\r\n  RelatedBuildingElement: d.id,\r\n  ConnectionGeometry: d.id,\r\n  PhysicalOrVirtualBoundary: d.enum,\r\n  InternalOrExternalBoundary: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelConnectsPathElements),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ConnectionGeometry: d.id,\r\n  RelatingElement: d.id,\r\n  RelatedElement: d.id,\r\n  RelatingPriorities: d.numSet,\r\n  RelatedPriorities: d.numSet,\r\n  RelatedConnectionType: d.enum,\r\n  RelatingConnectionType: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelVoidsElement),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  [n.relatingBuildingElement]: d.id,\r\n  [n.relatedOpeningElement]: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelFillsElement),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  [n.relatingOpeningElement]: d.id,\r\n  [n.relatedBuildingElement]: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelConnectsPortToElement),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  RelatingPort: d.id,\r\n  RelatedElement: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelAssignsToGroup),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  RelatedObjects: d.idSet,\r\n  RelatedObjectsType : d.enum,\r\n  RelatingGroup : d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelServicesBuildings),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  RelatingSystem : d.id,\r\n  RelatedBuildings: d.idSet,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcGroup),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcRelAssignsToActor),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  RelatedObjects : d.idSet,\r\n  RelatedObjectsType: d.enum,\r\n  RelatingActor: d.id,\r\n  ActingRole: d.id,\r\n});\r\n","import { newObject } from \"../parser/parser-map.js\";\r\nimport { namedProps as n } from \"../../utils/global-constants.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\nimport { getName, ifcTypes as t } from \"../../utils/ifc-types.js\";\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcQuantityArea),\r\n  Name: d.text,\r\n  Description: d.text,\r\n  Unit: d.id,\r\n  AreaValue: d.number,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcQuantityLength),\r\n  Name: d.text,\r\n  Description: d.text,\r\n  Unit: d.id,\r\n  LengthValue: d.number,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcQuantityVolume),\r\n  Name: d.text,\r\n  Description: d.text,\r\n  Unit: d.id,\r\n  VolumeValue: d.number,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcElementQuantity),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  MethodOfMeasurement: d.text,\r\n  Quantities: d.idSet,\r\n});","import { newObject } from '../parser/parser-map.js';\r\nimport { namedProps as n } from '../../utils/global-constants.js';\r\nimport { ifcDataTypes as d } from '../../utils/ifc-data-types.js';\r\nimport { getName, ifcTypes as t } from '../../utils/ifc-types.js';\r\n\r\n\r\nnewObject({\r\n    [n.ifcClass]: getName(t.IfcDistributionPort),\r\n    GlobalId: d.text,\r\n    OwnerHistory: d.id,\r\n    Name: d.text,\r\n    Description: d.text,\r\n    ObjectType: d.text,\r\n    [n.objectPlacement]: d.id,\r\n    [n.representation]: d.id,\r\n    FlowDirection: d.enum\r\n  });\r\n\r\n  newObject({\r\n    [n.ifcClass]: getName(t.IfcSystem),\r\n    GlobalId: d.text,\r\n    OwnerHistory: d.id,\r\n    Name: d.text,\r\n    Description: d.text,\r\n    ObjectType: d.text,\r\n  });\r\n\r\n  ","import { newObject } from \"../parser/parser-map.js\";\r\nimport { namedProps as n } from \"../../utils/global-constants.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\nimport { getName, ifcTypes as t } from \"../../utils/ifc-types.js\";\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcProject),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  LongName: d.text,\r\n  Phase: d.text,\r\n  RepresentationContexts: d.idSet,\r\n  UnitsInContext: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSite),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  LongName: d.text,\r\n  CompositionType: d.enum,\r\n  RefLatitude: d.numSet,\r\n  RefLongitude: d.numSet,\r\n  RefElevation: d.number,\r\n  LandTitleNumber: d.text,\r\n  SiteAddress: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcBuilding),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  LongName: d.text,\r\n  CompositionType: d.enum,\r\n  ElevationOfRefHeight: d.number,\r\n  ElevationOfTerrain: d.number,\r\n  BuildingAddress: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcBuildingStorey),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  LongName: d.text,\r\n  CompositionType: d.enum,\r\n  Elevation: d.number,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSpace),\r\n  GlobalId: d.text,\r\n  OwnerHistory: d.id,\r\n  Name: d.text,\r\n  Description: d.text,\r\n  ObjectType: d.text,\r\n  [n.objectPlacement]: d.id,\r\n  [n.representation]: d.id,\r\n  LongName: d.text,\r\n  CompositionType: d.enum,\r\n  InteriorOrExteriorSpace: d.enum,\r\n  ElevationWithFlooring: d.number,\r\n});\r\n","import { newObject } from \"../parser/parser-map.js\";\r\nimport { namedProps as n } from \"../../utils/global-constants.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\nimport { getName, ifcTypes as t } from \"../../utils/ifc-types.js\";\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcConversionBasedUnit),\r\n  Dimensions: d.id,\r\n  [n.unitType]: d.enum,\r\n  Name: d.text,\r\n  ConversionFactor: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcDerivedUnit),\r\n  Elements: d.idSet,\r\n  [n.unitType]: d.enum,\r\n  UserDefinedType: d.text,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcDerivedUnitElement),\r\n  Unit: d.id,\r\n  Exponent: d.number,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcDimensionalExponents),\r\n  LengthExponent: d.number,\r\n  MassExponent: d.number,\r\n  TimeExponent: d.number,\r\n  ElectricCurrentExponent: d.number,\r\n  ThermodynamicTemperatureExponent: d.number,\r\n  AmountOfSubstanceExponent: d.number,\r\n  LuminousIntensityExponent: d.number,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcMeasureWithUnit),\r\n  ValueComponent: d.value,\r\n  UnitComponent: d.id,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcSIUnit),\r\n  [n.undefined]: d.asterisk,\r\n  [n.unitType]: d.enum,\r\n  [n.prefix]: d.enum,\r\n  Name: d.enum,\r\n});\r\n\r\nnewObject({\r\n  [n.ifcClass]: getName(t.IfcUnitAssignment),\r\n  [n.units]: d.idSet,\r\n});\r\n","import { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\n// @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'chevrotain'.\r\nconst newToken = chevrotain.createToken;\r\n// @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'chevrotain'.\r\nconst Lexer = chevrotain.Lexer;\r\n\r\n//Tokens / vocabulary for constructing the parser primitives\r\n\r\nconst tokens: any = [];\r\n\r\nconst patterns = {\r\n  [d.id]: /#\\d+/,\r\n  [d.asterisk]: /\\*/,\r\n  [d.default]: /\\$/,\r\n  [d.value]: /IFC[A-Z]+?(?=\\()/,\r\n  [d.bool]: /\\.T\\.|\\.F\\./,\r\n  [d.enum]: /\\.[A-Z0-9_]+?\\./,\r\n  [d.number]: /[0-9.E-]+/,\r\n  [d.text]: /'.*?'(?=[\\)|,])/,\r\n  EqualSign: /=/,\r\n  OpenPar: /\\(/,\r\n  ClosePar: /\\)/,\r\n  Semicolon: /;/,\r\n  Comma: /\\s*,\\s*/,\r\n  [d.anything]: /.+/,\r\n};\r\n\r\nconst ingoredPatterns = {\r\n  NewLine: /[\\n\\r]+/,\r\n  WhiteSpace: /\\s+/,\r\n};\r\n\r\n(function createTokens() {\r\n  Object.keys(patterns).forEach((e) => {\r\n    tokens.push(\r\n      newToken({\r\n        name: e,\r\n        pattern: patterns[e],\r\n      })\r\n    );\r\n  });\r\n})();\r\n\r\n(function createIgnoredTokens() {\r\n  Object.keys(ingoredPatterns).forEach((e) => {\r\n    tokens.push(\r\n      newToken({\r\n        name: e,\r\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n        pattern: ingoredPatterns[e],\r\n        // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'chevrotain'.\r\n        group: chevrotain.Lexer.SKIPPED,\r\n      })\r\n    );\r\n  });\r\n})();\r\n\r\nconst lexer = new Lexer(tokens);\r\nconst vocabulary = {};\r\n// @ts-expect-error ts-migrate(7006) FIXME: Parameter 'token' implicitly has an 'any' type.\r\ntokens.forEach((token) => {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  vocabulary[token.name] = token;\r\n});\r\n\r\nexport { tokens, lexer, vocabulary };\r\n","import { vocabulary as v } from \"../lexer/lexer.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\n//Basic syntactical structures (one structure per data type)\r\nfunction addPrimitiveParsers($: any) {\r\n    const parsers: any = [];\r\n    Object.values(primitiveParsers).forEach((e) => {\r\n        if (!parsers.includes(e)) {\r\n            parsers.push(e);\r\n            $.RULE(e.name, e($));\r\n        }\r\n    });\r\n}\r\nconst primitiveParsers = {\r\n    [d.asterisk]: Asterisk_Parser,\r\n    [d.number]: Number_Parser,\r\n    [d.date]: Number_Parser,\r\n    [d.text]: IfcText_Parser,\r\n    [d.bool]: IfcBool_Parser,\r\n    [d.enum]: IfcEnum_Parser,\r\n    [d.id]: IfcExpressId_Parser,\r\n    [d.idSet]: IdSet_Parser,\r\n    [d.numSet]: NumberSet_Parser,\r\n    [d.value]: IfcValue_Parser,\r\n    [d.valueSet]: ValueSet_Parser,\r\n    [d.textSet]: TextSet_Parser,\r\n};\r\nfunction getParser(dataType: any) {\r\n    return primitiveParsers[dataType].name;\r\n}\r\nfunction Asterisk_Parser($: any) {\r\n    return () => {\r\n        $.AT_LEAST_ONE(() => {\r\n            $.OR([\r\n                {\r\n                    ALT: () => {\r\n                        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                        $.CONSUME(v[d.asterisk]);\r\n                    },\r\n                },\r\n            ]);\r\n            $.OPTION(() => {\r\n                $.CONSUME((v as any).Comma);\r\n            });\r\n        });\r\n    };\r\n}\r\nfunction IfcValue_Parser($: any) {\r\n    return () => {\r\n        $.OR([\r\n            {\r\n                ALT: () => {\r\n                    $.CONSUME((v as any).IfcValue);\r\n                    $.CONSUME((v as any).OpenPar);\r\n                    $.OR2([\r\n                        {\r\n                            ALT: () => {\r\n                                // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                                $.CONSUME(v[d.number]);\r\n                            },\r\n                        },\r\n                        {\r\n                            ALT: () => {\r\n                                // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                                $.CONSUME(v[d.text]);\r\n                            },\r\n                        },\r\n                        {\r\n                            ALT: () => {\r\n                                // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                                $.CONSUME(v[d.bool]);\r\n                            },\r\n                        },\r\n                        {\r\n                            ALT: () => {\r\n                                // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                                $.CONSUME(v[d.enum]);\r\n                            },\r\n                        },\r\n                    ]);\r\n                    $.CONSUME((v as any).ClosePar);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.id]);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME2(v[d.number]);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.default]);\r\n                },\r\n            },\r\n        ]);\r\n        $.OPTION(() => {\r\n            $.CONSUME((v as any).Comma);\r\n        });\r\n    };\r\n}\r\nfunction Number_Parser($: any) {\r\n    return () => {\r\n        $.OR([\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.default]);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.number]);\r\n                },\r\n            },\r\n        ]);\r\n        $.OPTION(() => {\r\n            $.CONSUME((v as any).Comma);\r\n        });\r\n    };\r\n}\r\nfunction NumberSet_Parser($: any) {\r\n    return () => {\r\n        $.OR([\r\n            {\r\n                ALT: () => {\r\n                    $.CONSUME((v as any).OpenPar);\r\n                    $.MANY(() => {\r\n                        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                        $.CONSUME(v[d.number]);\r\n                        $.OPTION(() => {\r\n                            $.CONSUME((v as any).Comma);\r\n                        });\r\n                    });\r\n                    $.CONSUME((v as any).ClosePar);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.default]);\r\n                },\r\n            },\r\n        ]);\r\n        $.OPTION2(() => {\r\n            $.CONSUME2((v as any).Comma);\r\n        });\r\n    };\r\n}\r\nfunction TextSet_Parser($: any) {\r\n    return () => {\r\n        $.OR([\r\n            {\r\n                ALT: () => {\r\n                    $.CONSUME((v as any).OpenPar);\r\n                    $.MANY(() => {\r\n                        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                        $.CONSUME(v[d.text]);\r\n                        $.OPTION(() => {\r\n                            $.CONSUME((v as any).Comma);\r\n                        });\r\n                    });\r\n                    $.CONSUME((v as any).ClosePar);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.default]);\r\n                },\r\n            },\r\n        ]);\r\n        $.OPTION2(() => {\r\n            $.CONSUME2((v as any).Comma);\r\n        });\r\n    };\r\n}\r\nfunction IdSet_Parser($: any) {\r\n    return () => {\r\n        $.OR([\r\n            {\r\n                ALT: () => {\r\n                    $.CONSUME((v as any).OpenPar);\r\n                    $.MANY(() => {\r\n                        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                        $.CONSUME(v[d.id]);\r\n                        $.OPTION(() => {\r\n                            $.CONSUME((v as any).Comma);\r\n                        });\r\n                    });\r\n                    $.CONSUME((v as any).ClosePar);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.default]);\r\n                },\r\n            },\r\n        ]);\r\n        $.OPTION2(() => {\r\n            $.CONSUME2((v as any).Comma);\r\n        });\r\n    };\r\n}\r\nfunction ValueSet_Parser($: any) {\r\n    return () => {\r\n        $.OR([\r\n            {\r\n                ALT: () => {\r\n                    $.CONSUME((v as any).OpenPar);\r\n                    $.MANY(() => {\r\n                        $.SUBRULE($.IfcValue_Parser);\r\n                        $.OPTION(() => {\r\n                            $.CONSUME((v as any).Comma);\r\n                        });\r\n                    });\r\n                    $.CONSUME((v as any).ClosePar);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.default]);\r\n                },\r\n            },\r\n        ]);\r\n        $.OPTION2(() => {\r\n            $.CONSUME2((v as any).Comma);\r\n        });\r\n    };\r\n}\r\nfunction IfcText_Parser($: any) {\r\n    return () => {\r\n        $.OR([\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.default]);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.text]);\r\n                },\r\n            },\r\n        ]);\r\n        $.OPTION2(() => {\r\n            $.CONSUME((v as any).Comma);\r\n        });\r\n    };\r\n}\r\nfunction IfcBool_Parser($: any) {\r\n    return () => {\r\n        $.OR([\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.bool]);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.default]);\r\n                },\r\n            },\r\n        ]);\r\n        $.OPTION2(() => {\r\n            $.CONSUME((v as any).Comma);\r\n        });\r\n    };\r\n}\r\nfunction IfcEnum_Parser($: any) {\r\n    return () => {\r\n        $.OR([\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.enum]);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.default]);\r\n                },\r\n            },\r\n        ]);\r\n        $.OPTION2(() => {\r\n            $.CONSUME((v as any).Comma);\r\n        });\r\n    };\r\n}\r\nfunction IfcExpressId_Parser($: any) {\r\n    return () => {\r\n        $.OR([\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.id]);\r\n                },\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n                    $.CONSUME(v[d.default]);\r\n                },\r\n            },\r\n        ]);\r\n        $.OPTION2(() => {\r\n            $.CONSUME((v as any).Comma);\r\n        });\r\n    };\r\n}\r\nexport { addPrimitiveParsers, primitiveParsers, getParser };\r\n","import { vocabulary as v } from \"../lexer/lexer.js\";\r\nimport { primitiveParsers } from \"./parser-primitives.js\";\r\nimport { isDataTypeValid, getAllDataTypes, } from \"../../utils/ifc-data-types.js\";\r\n//Creates a syntactical structure (RULEs) given an IFC Class\r\nfunction newParser($: any, ifcItem: any) {\r\n    resetParserFactory();\r\n    $.CONSUME((v as any).OpenPar);\r\n    createRulesForAllProperties($, ifcItem);\r\n    $.CONSUME((v as any).ClosePar);\r\n}\r\nfunction createRulesForAllProperties($: any, ifcItem: any) {\r\n    Object.values(ifcItem).forEach((dataType) => {\r\n        if (isDataTypeValid(dataType))\r\n            newRule($, dataType);\r\n    });\r\n}\r\nfunction newRule($: any, dataType: any) {\r\n    const rule = `SUBRULE${getIndex(dataType)}`;\r\n    updateCounter(dataType);\r\n    return $[rule]($[primitiveParsers[dataType].name]);\r\n}\r\n//The counter is necessary because chevrotain cannot have\r\n//multiple identical SUBRULEs. The repeated methods need to be\r\n//followed by a suffix (f.e. SUBRULE(X), SUBRULE2(X), ...)\r\nlet counter = {};\r\nfunction resetParserFactory() {\r\n    counter = {};\r\n    getAllDataTypes().forEach((e) => {\r\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n        counter[e] = 0;\r\n    });\r\n}\r\nfunction updateCounter(dataType: any) {\r\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n    counter[dataType]++;\r\n}\r\n//Chevrotain syntax: SUBRULE0(X) is expressed as SUBRULE(X)\r\nfunction getIndex(dataType: any) {\r\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n    return counter[dataType] === 0 ? \"\" : counter[dataType];\r\n}\r\nexport { newParser, resetParserFactory };\r\n","import { tokens } from \"../lexer/lexer.js\";\r\nimport { addPrimitiveParsers } from \"./parser-primitives.js\";\r\nimport { typesParserMap } from \"./parser-map.js\";\r\nimport { newParser } from \"./parser-factory.js\";\r\nimport { namedProps as n } from \"../../utils/global-constants.js\";\r\n// @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'chevrotain'.\r\nconst CstParser = chevrotain.CstParser;\r\n//Contains all the syntactical structures (RULEs)\r\nclass IfcParser extends CstParser {\r\n    performSelfAnalysis: any;\r\n    constructor() {\r\n        super(tokens);\r\n        addPrimitiveParsers(this);\r\n        addParsesForAllIfcTypes(this);\r\n        this.performSelfAnalysis();\r\n    }\r\n}\r\n//Creates the syntactical structures (RULEs) for all the IFC Classes\r\nfunction addParsesForAllIfcTypes($: any) {\r\n    Object.values(typesParserMap).forEach((e) => {\r\n        $.RULE((e as any)[n.ifcClass], () => {\r\n            newParser($, e);\r\n        });\r\n    });\r\n}\r\nconst parser = new IfcParser();\r\nexport { parser };\r\n","const r = {\r\n  unicode: /\\\\X2\\\\[0-9A-F]+?\\\\X\\d\\\\/,\r\n  getUnicode: /[0-9A-F]+(?=\\\\X\\d\\\\)/,\r\n};\r\n\r\nfunction unicode(text: any) {\r\n  while (r.unicode.test(text)) {\r\n    const encoded = text.match(r.unicode)[0].match(r.getUnicode)[0];\r\n    text = text.replace(r.unicode, String.fromCharCode(parseInt(encoded, 16)));\r\n  }\r\n  return text;\r\n}\r\n\r\nfunction formatDate(dateAsNumber: any) {\r\n  if (isNaN(dateAsNumber)) return dateAsNumber;\r\n  const formattedDate = new Date(dateAsNumber * 1000);\r\n  return formattedDate.getTime() ? formattedDate : dateAsNumber;\r\n}\r\n\r\nexport { unicode, formatDate };\r\n","import { getParser } from \"../parser/parser-primitives.js\";\r\nimport { formatDate, unicode } from \"./format.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\nimport {\r\n  ifcBoolValues,\r\n  ifcValueType as v,\r\n  ifcUnitsValue as i \r\n} from \"../../utils/global-constants.js\";\r\n\r\n//Each method retrieves information from a given parsed data type\r\n\r\nconst semanticUnits = {\r\n  [d.id]: getExpressId,\r\n  [d.idSet]: getIdSet,\r\n  [d.text]: getIfcText,\r\n  [d.textSet]: getTextSet,\r\n  [d.number]: getNumber,\r\n  [d.numSet]: getNumberSet,\r\n  [d.date]: getDate,\r\n  [d.value]: getIfcValue,\r\n  [d.bool]: getBool,\r\n  [d.enum]: getEnum,\r\n  [d.asterisk]: getAsterisk,\r\n  [d.valueSet]: getValueSet,\r\n};\r\n\r\nfunction getProperty(parsed: any, type: any) {\r\n  return semanticUnits[type](parsed);\r\n}\r\n\r\n//The counter is necessary because chevrotain generates indexed\r\n//parsed structures. F.e. if there are two enums in a IFC Class,\r\n//the first one has index=1, the second one index=2, etc\r\n\r\nlet counter = {};\r\n\r\nfunction resetSemanticFactory() {\r\n  counter = {\r\n    [d.id]: 0,\r\n    [d.text]: 0,\r\n    [d.number]: 0,\r\n    [d.enum]: 0,\r\n    [d.idSet]: 0,\r\n    [d.numSet]: 0,\r\n    [d.value]: 0,\r\n    [d.textSet]: 0,\r\n    [d.bool]: 0,\r\n    [d.valueSet]: 0,\r\n  };\r\n}\r\n\r\nfunction getBool(parsed: any) {\r\n  return getValue(parsed, d.bool, formatBool);\r\n}\r\n\r\nfunction getEnum(parsed: any) {\r\n  return getValue(parsed, d.enum, formatEnum);\r\n}\r\n\r\nfunction getNumber(parsed: any) {\r\n  return getValue(parsed, d.number, formatNumber);\r\n}\r\n\r\nfunction getDate(parsed: any) {\r\n  return formatDate(getNumber(parsed));\r\n}\r\n\r\nfunction getExpressId(parsed: any) {\r\n  return getValue(parsed, d.id, formatId);\r\n}\r\n\r\nfunction getIfcText(parsed: any) {\r\n  return getValue(parsed, d.text, formatText);\r\n}\r\n\r\nfunction getTextSet(parsed: any) {\r\n  return getSet(parsed, d.textSet, d.text, (e: any) => unicode(e.image.slice(1, -1))\r\n  );\r\n}\r\n\r\nfunction getIdSet(parsed: any) {\r\n  return getSet(parsed, d.idSet, d.id, (e: any) => Number(e.image.slice(1)));\r\n}\r\n\r\nfunction getNumberSet(parsed: any) {\r\n  return getSet(parsed, d.numSet, d.number, (e: any) => Number(e.image));\r\n}\r\n\r\nfunction getValueSet(parsed: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  const valueSet = parsed[getParser(d.valueSet)][counter[d.valueSet]++];\r\n  const values = valueSet.children[getParser(d.value)];\r\n  return values.map((ifcValue: any) => {\r\n    const valueProps = ifcValue.children;\r\n    let type = getIfcValueType(valueProps);\r\n    const value = valueProps[type][0].image;\r\n    const formattedValue = formatIfcValue(type, value);\r\n    const unit = valueProps[d.value] ? valueProps[d.value][0].image : \"\";\r\n    return { [i.value]: formattedValue, [i.unit]: unit };\r\n  });\r\n}\r\n\r\nfunction getIfcValue(parsed: any) {\r\n  if (isDefaultValue(parsed, d.value)) return getDefault(parsed, d.value);\r\n  if (isExpressId(parsed, d.value)) return getIfcValueId(parsed, d.value);\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  const data = parsed[getParser(d.value)][counter[d.value]].children;\r\n  let type = getIfcValueType(data);\r\n  const value = formatIfcValue(type, getIfcValueValue(parsed, type));\r\n  return { Value: value, IfcUnit: getIfcUnit(parsed) };\r\n}\r\n\r\nfunction getEmptySet(type: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  counter[type]++;\r\n  return [];\r\n}\r\n\r\nfunction getAsterisk() {\r\n  return \"*\";\r\n}\r\n\r\nfunction getValue(parsed: any, type: any, formatFunction: any) {\r\n  if (isDefaultValue(parsed, type)) return getDefault(parsed, type);\r\n  return formatFunction(extract(parsed, type));\r\n}\r\n\r\nfunction getSet(parsed: any, type: any, subtype: any, mapFunction: any) {\r\n  if (isDefaultValue(parsed, type)) return getDefault(parsed, type);\r\n  if (isEmptySet(parsed, type, subtype)) return getEmptySet(type);\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return parsed[getParser(type)][counter[type]++].children[subtype].map(\r\n    mapFunction\r\n  );\r\n}\r\n\r\nfunction extract(parsed: any, type: any) {\r\n  return getContent(parsed[getParser(type)], type);\r\n}\r\n\r\nfunction getContent(subParsed: any, type: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return subParsed[counter[type]++].children[type][0].image;\r\n}\r\n\r\nfunction formatId(id: any) {\r\n  return Number(id.slice(1));\r\n}\r\n\r\nfunction formatText(text: any) {\r\n  return unicode(text.slice(1, -1));\r\n}\r\n\r\nfunction formatNumber(number: any) {\r\n  return Number(number);\r\n}\r\n\r\nfunction formatBool(bool: any) {\r\n  return bool === ifcBoolValues.trueValue ? true : false;\r\n}\r\n\r\nfunction formatEnum(enumValue: any) {\r\n  return enumValue.slice(1, -1);\r\n}\r\n\r\nfunction isDefaultValue(parsed: any, type: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return parsed[getParser(type)][counter[type]].children[d.default]\r\n    ? true\r\n    : false;\r\n}\r\n\r\nfunction isEmptySet(parsed: any, type: any, subtype: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return parsed[getParser(type)][counter[type]].children[subtype]\r\n    ? false\r\n    : true;\r\n}\r\n\r\nfunction getDefault(parsed: any, type: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return parsed[getParser(type)][counter[type]++].children[d.default][0].image;\r\n}\r\n\r\nfunction isExpressId(parsed: any, type: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return parsed[getParser(type)][counter[type]].children[d.id] ? true : false;\r\n}\r\n\r\nfunction getIfcValueId(parsed: any, type: any) {\r\n  const rawId =\r\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n    parsed[getParser(type)][counter[type]++].children[d.id][0].image;\r\n  return Number(rawId.slice(1));\r\n}\r\n\r\nfunction getIfcValueValue(parsed: any, type: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return parsed[getParser(d.value)][counter[d.value]].children[type][0].image;\r\n}\r\n\r\nfunction formatIfcValue(type: any, value: any) {\r\n  if (type === v.number) return formatNumber(value);\r\n  if (type === v.text) return formatText(value);\r\n  if (type === v.bool) return formatBool(value);\r\n  if (type === v.enum) return formatEnum(value);\r\n  return value;\r\n}\r\n\r\nfunction getIfcValueType(data: any) {\r\n  if (data[d.number]) return v.number;\r\n  if (data[d.text]) return v.text;\r\n  if (data[d.bool]) return v.bool;\r\n  return v.enum;\r\n}\r\n\r\nfunction getIfcUnit(parsed: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  const ifcUnit = parsed[getParser(d.value)][counter[d.value]].children[d.value]\r\n    ? // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n      parsed[getParser(d.value)][counter[d.value]].children[d.value][0].image\r\n    : \"\";\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  counter[d.value]++;\r\n  return ifcUnit;\r\n}\r\n\r\nexport { resetSemanticFactory, getProperty };\r\n","import { isDataTypeValid } from \"../../utils/ifc-data-types.js\";\r\nimport { typeValue, namedProps as n } from \"../../utils/global-constants.js\";\r\nimport { getProperty, resetSemanticFactory } from \"./semantic-primitives.js\";\r\n\r\n//Uses semantic primitives according to the data type of each property\r\n\r\nfunction newSemantic(parsed: any, ifcItem: any) {\r\n  resetSemanticFactory();\r\n  const result = retrieveIfcObjectProperties(parsed, ifcItem);\r\n  addClassName(result, ifcItem);\r\n  cleanUndefinedProperties(result);\r\n  return result;\r\n}\r\n\r\nfunction retrieveIfcObjectProperties(parsed: any, ifcItem: any) {\r\n  const result = {};\r\n  Object.keys(ifcItem).forEach((e) => {\r\n    if (isDataTypeValid(ifcItem[e]))\r\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n      result[e] = newSemanticUnit(parsed, ifcItem[e]);\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction newSemanticUnit(parsed: any, dataType: any) {\r\n  return {\r\n    [typeValue.value]: getProperty(parsed, dataType),\r\n    [typeValue.type]: dataType,\r\n  };\r\n}\r\n\r\nfunction addClassName(result: any, ifcItem: any) {\r\n  result[n.ifcClass] = ifcItem[n.ifcClass];\r\n}\r\n\r\nfunction cleanUndefinedProperties(ifcItem: any) {\r\n  if (ifcItem.hasOwnProperty([n.undefined])) delete ifcItem[n.undefined];\r\n}\r\n\r\nexport { newSemantic };\r\n","import { parser } from '../parser/parser.js';\r\nimport { typesParserMap } from '../parser/parser-map.js';\r\nimport { newSemantic } from './semantic-factory.js';\r\nimport { ifcTypes as t } from '../../utils/ifc-types.js';\r\nimport { primitiveParsers } from '../parser/parser-primitives.js';\r\nimport { namedProps as n } from '../../utils/global-constants.js';\r\n//Chevrotain requires a method per syntactical structure of the parser\r\n//When the parser outputs a syntactical structure, the visitor\r\n//handles it with the correspondant method using visit()\r\nconst BaseVisitor = (parser as any).getBaseCstVisitorConstructor();\r\nclass IfcVisitor extends BaseVisitor {\r\n    validateVisitor: any;\r\n    constructor() {\r\n        super();\r\n        this.validateVisitor();\r\n    }\r\n}\r\n(function createPrimitiveSemantic() {\r\n    Object.keys(primitiveParsers).forEach((e) => {\r\n        IfcVisitor.prototype[primitiveParsers[e].name] = (parsed: any) => { };\r\n    });\r\n})();\r\n(function createSemantic() {\r\n    Object.values(typesParserMap).forEach((e) => {\r\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n        IfcVisitor.prototype[(e as any)[n.ifcClass]] = (parsed: any) => getSemantic(t[(e as any)[n.ifcClass]], parsed);\r\n    });\r\n})();\r\nfunction getSemantic(ifcType: any, parsed: any) {\r\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n    const ifcItem = typesParserMap[ifcType];\r\n    return newSemantic(parsed, ifcItem);\r\n}\r\nconst ifcVisitor = new IfcVisitor();\r\nexport { ifcVisitor };\r\n","import { lexer } from \"../lexer/lexer.js\";\r\nimport { parser } from \"./parser.js\";\r\nimport { ifcVisitor } from \"../semantic/semantic.js\";\r\nimport { parserByType } from \"./parser-map.js\";\r\nimport { namedProps as n } from \"../../utils/global-constants.js\";\r\nimport { ifcTypes } from \"../../utils/ifc-types.js\";\r\n//The parsing process consists of 4 steps:\r\n//1. The lexer tokenizes the input\r\n//2. The tokenized input is given to the parser\r\n//3. The parser is applied using the chosen syntactical structure\r\n//4. The visitor applies semantic rules to the output of the parser\r\nfunction parse(text: any, ifcType: any) {\r\n    const lexingResult = lexer.tokenize(text);\r\n    (parser as any).input = lexingResult.tokens;\r\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n    const cstOutput = parser[parserByType(ifcType)[n.ifcClass]]();\r\n    if ((parser as any).errors.length > 0)\r\n        showErrors(text, ifcType, parser);\r\n    return (ifcVisitor as any).visit(cstOutput);\r\n}\r\nfunction showErrors(text: any, ifcType: any, parser: any) {\r\n    console.warn(parser.errors);\r\n    console.warn(`Error while parsing item: ${text} of type ${ifcType}`);\r\n}\r\nexport { parse };\r\n","import { itemsReaderValues as i } from \"../../utils/global-constants.js\";\r\n\r\nconst regexp = {\r\n  allNewLines: /\\r?\\n|\\r/g,\r\n  headerSection: /HEADER;.+?(?=ENDSEC;)/,\r\n  dataSection: /DATA;\\s+.+(?=ENDSEC;)/,\r\n  singleIfcItems: /#\\d+\\s*=\\s*IFC.+?\\)(;\\s*(?=#\\d*)|;\\s*$)/g,\r\n  expressId: /^#\\d+/,\r\n  rawIfcType: /IFC\\w+/,\r\n  rawIfcProperties: /\\(.+?(?=;\\s*$)/,\r\n};\r\n\r\nfunction readIfcItems(loadedIfc: any) {\r\n  const { dataSection } = extractSections(loadedIfc);\r\n  return constructRawIfcItems(dataSection);\r\n}\r\n\r\nfunction extractSections(loadedIfc: any) {\r\n  const ifcPlaneText = removeAllNewLines(loadedIfc);\r\n  return {\r\n    headerSection: readHeaderSection(ifcPlaneText),\r\n    dataSection: readDataSection(ifcPlaneText),\r\n  };\r\n}\r\n\r\nfunction constructRawIfcItems(dataSection: any) {\r\n  const flatIfcItemList = separateIfcEntities(dataSection);\r\n  return flatIfcItemList.map((e: any) => {\r\n    return {\r\n      [i.expressId]: getId(e),\r\n      [i.type]: getIfcType(e),\r\n      [i.properties]: getIfcRawProperties(e),\r\n    };\r\n  });\r\n}\r\n\r\nfunction separateIfcEntities(dataSection: any) {\r\n  return dataSection.match(regexp.singleIfcItems);\r\n}\r\n\r\nfunction readHeaderSection(ifcLine: any) {\r\n  return ifcLine.match(regexp.headerSection)[0];\r\n}\r\n\r\nfunction readDataSection(ifcLine: any) {\r\n  return ifcLine.match(regexp.dataSection)[0];\r\n}\r\n\r\nfunction removeAllNewLines(ifcFile: any) {\r\n  return ifcFile.replace(regexp.allNewLines, \" \");\r\n}\r\n\r\nfunction getId(rawIfcLine: any) {\r\n  return parseInt(rawIfcLine.match(regexp.expressId).toString().slice(1));\r\n}\r\n\r\nfunction getIfcType(rawIfcLine: any) {\r\n  return rawIfcLine.match(regexp.rawIfcType).toString();\r\n}\r\n\r\nfunction getIfcRawProperties(ifcLine: any) {\r\n  return ifcLine.match(regexp.rawIfcProperties).toString();\r\n}\r\n\r\nexport { readIfcItems };\r\n","import { typeValue as v } from \"../../utils/global-constants.js\";\r\nimport { ifcDataTypes as d } from \"../../utils/ifc-data-types.js\";\r\n\r\nfunction referenceEntities(items: any) {\r\n  let key;\r\n  for (key in items) {\r\n    const ifcLine = items[key];\r\n    for (key in ifcLine) {\r\n      const ifcProperty = ifcLine[key];\r\n      referenceSingleItem(ifcProperty, items);\r\n      referenceMultipleItems(ifcProperty, items);\r\n      trimExplicitTypes(ifcLine, key);\r\n    }\r\n  }\r\n}\r\n\r\nfunction referenceSingleItem(ifcProperty: any, items: any) {\r\n  if (isSingleItemValid(ifcProperty, items))\r\n    ifcProperty[v.value] = items[ifcProperty[v.value]];\r\n}\r\n\r\nfunction isSingleItemValid(ifcProperty: any, items: any) {\r\n  return (\r\n    isItemWithReference(ifcProperty) &&\r\n    items.hasOwnProperty(ifcProperty[v.value])\r\n  );\r\n}\r\n\r\nfunction referenceMultipleItems(ifcProperty: any, items: any) {\r\n  if (ifcProperty[v.type] === d.idSet) {\r\n    const property = ifcProperty;\r\n    const values = [...property[v.value]];\r\n    property[v.value] = values.map((e) => {\r\n      return items.hasOwnProperty(e) ? items[e] : e;\r\n    });\r\n  }\r\n}\r\n\r\nfunction isItemWithReference(item: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  if (item[v.value] === d[v.value] && !isNaN(item[v.value])) return true;\r\n  if (item[v.type] === d.id) return true;\r\n  return false;\r\n}\r\n\r\nfunction trimExplicitTypes(ifcLine: any, key: any) {\r\n  const value = ifcLine[key][v.value];\r\n  if (value) ifcLine[key] = value;\r\n}\r\n\r\nexport { referenceEntities };\r\n","import { getName, ifcTypes } from '../utils/ifc-types.js';\r\nimport { itemsReaderValues as i, namedProps as n } from '../utils/global-constants.js';\r\n\r\nfunction findRemainingTypes(items: any) {\r\n  const remainingTypes: any = [];\r\n  items.forEach((element: any) => {\r\n    if (Object.values(ifcTypes).indexOf(element[i.type]) < 0) {\r\n      if (!remainingTypes.includes(element[i.type])) {\r\n        remainingTypes.push(element[i.type]);\r\n      }\r\n    }\r\n  });\r\n  if (remainingTypes.length > 0)\r\n    console.log('Error: the following classes are not implemented: ', remainingTypes);\r\n}\r\n\r\nfunction filterItems(items: any, filter: any) {\r\n  let key;\r\n  for (key in items) {\r\n    const ifcLine = items[key];\r\n    if (ifcLine && ifcLine[n.ifcClass] != getName(filter)) {\r\n      delete items[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport { findRemainingTypes, filterItems };\r\n","import \"../ifc-models/building-elements.js\";\r\nimport \"../ifc-models/classification.js\";\r\nimport \"../ifc-models/context.js\";\r\nimport \"../ifc-models/geometry.js\";\r\nimport \"../ifc-models/identities.js\";\r\nimport \"../ifc-models/materials.js\";\r\nimport \"../ifc-models/presentation.js\";\r\nimport \"../ifc-models/properties.js\";\r\nimport \"../ifc-models/project.js\";\r\nimport \"../ifc-models/relationships.js\";\r\nimport \"../ifc-models/quantities.js\";\r\nimport \"../ifc-models/systems.js\";\r\nimport \"../ifc-models/spatial-structure.js\";\r\nimport \"../ifc-models/units.js\";\r\nimport { ifcTypes as t } from \"../../utils/ifc-types.js\";\r\nimport { parse } from \"../parser/parse-process.js\";\r\nimport { readIfcItems } from \"./ifc-items-reader.js\";\r\nimport { referenceEntities } from \"./ifc-items-referencer.js\";\r\nimport { findRemainingTypes } from \"../../dev/functions-for-development.js\";\r\nimport { itemsReaderValues as i, namedProps as n } from \"../../utils/global-constants.js\";\r\n\r\nfunction loadIfcFileItems(ifcData: any) {\r\n  const ifcItems = readIfcItems(ifcData);\r\n  findRemainingTypes(ifcItems);\r\n  return loadItems(ifcItems);\r\n}\r\n\r\nfunction loadItems(ifcData: any) {\r\n  const loadedItems = {};\r\n  ifcData.map((ifcItem: any) => {\r\n    if (isTypeSupported(ifcItem))\r\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n      loadedItems[ifcItem[i.expressId]] = parseAndLoadItem(ifcItem);\r\n  });\r\n  referenceEntities(loadedItems);\r\n  return loadedItems;\r\n}\r\n\r\nfunction parseAndLoadItem(ifcItem: any) {\r\n  const parsed = parse(ifcItem[i.properties], ifcItem[i.type]);\r\n  parsed[n.expressId] = ifcItem[i.expressId];\r\n  return parsed;\r\n}\r\n\r\nfunction isTypeSupported(ifcItem: any) {\r\n  return Object.values(t).indexOf(ifcItem[i.type]) > -1;\r\n}\r\n\r\nexport { loadIfcFileItems };\r\n","import { namedProps as n } from \"../utils/global-constants.js\";\r\nimport { getName } from \"../utils/ifc-types.js\";\r\n\r\nclass IfcEntityFinder {\r\n  ifcData: any;\r\n  constructor(ifcData: any) {\r\n    this.ifcData = ifcData;\r\n  }\r\n\r\n  findByType(ifcType: any) {\r\n    const matches = {};\r\n    Object.keys(this.ifcData).forEach((e) => {\r\n      if (this.getType(e) === getName(ifcType)) {\r\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n        matches[e] = this.ifcData[e];\r\n      }\r\n    });\r\n    return matches;\r\n  }\r\n\r\n  getType(id: any) {\r\n    return this.ifcData[id][n.ifcClass];\r\n  }\r\n\r\n  findAllProducts(spatialStructureElements: any, elements = []) {\r\n    spatialStructureElements.forEach((spatial: any) => {\r\n      const buildingElementsHere = spatial[n.hasBuildingElements];\r\n      const spatialElementsHere = spatial[n.hasSpatial];\r\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'any' is not assignable to parame... Remove this comment to see the full error message\r\n      if (buildingElementsHere) elements.push(...buildingElementsHere);\r\n      if (spatialElementsHere) this.findAllProducts(spatialElementsHere, elements);\r\n    });\r\n    return elements;\r\n  }\r\n}\r\n\r\nfunction createIfcItemsFinder(loadedIfc: any) {\r\n  return new IfcEntityFinder(loadedIfc);\r\n}\r\n\r\nexport { createIfcItemsFinder };\r\n","function bindElements(finder: any, type: any, relating: any, related: any, property: any) {\r\n    const relations = finder.findByType(type);\r\n    Object.values(relations).forEach((relation) => {\r\n        return isArray((relation as any)[relating])\r\n            ? bindMultiple(relation, relating, related, property)\r\n            : bindSingle(relation, relating, related, property);\r\n    });\r\n}\r\nfunction bindSingle(relation: any, relating: any, related: any, property: any) {\r\n    if (!relation[relating][property])\r\n        relation[relating][property] = [];\r\n    bind(relation[relating][property], relation, related);\r\n}\r\nfunction bindMultiple(relation: any, relating: any, related: any, property: any) {\r\n    relation[relating].forEach((e: any) => {\r\n        if (!e[property])\r\n            e[property] = [];\r\n        bind(e[property], relation, related);\r\n    });\r\n}\r\nfunction bind(property: any, relation: any, related: any) {\r\n    return isArray(relation[related])\r\n        ? property.push(...relation[related])\r\n        : property.push(relation[related]);\r\n}\r\nfunction isArray(item: any) {\r\n    return item.constructor === Array;\r\n}\r\nexport { bindElements };\r\n","// @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\nconst mainObject = new THREE.Object3D();\r\nexport { mainObject };\r\n","import { ifcTypes as t } from \"../utils/ifc-types.js\";\r\nimport { createIfcItemsFinder } from \"./items-finder.js\";\r\nimport { bindElements } from \"./ifc-elements-binder.js\";\r\nimport {mainObject} from \"../ifc-to-three.js/scene/mainObject.js\"\r\nimport {\r\n  namedProps as n,\r\n  structuredData as s,\r\n} from \"../utils/global-constants.js\";\r\n\r\nfunction constructProject(ifcData: any) {\r\n  const finder = createIfcItemsFinder(ifcData);\r\n  bindAllElements(finder);\r\n  const ifcProjects = get(finder, t.IfcProject);\r\n  const elements = finder.findAllProducts(ifcProjects);\r\n  const spaces = get(finder, t.IfcSpace);\r\n  const units = get(finder, t.IfcUnitAssignment)[0];\r\n  return {\r\n    [s.ifcProject]: ifcProjects,\r\n    [s.products]: elements,\r\n    [s.spaces]: spaces,\r\n    [s.units]: units,\r\n    [s.mainObject]: mainObject,\r\n  };\r\n}\r\n\r\nfunction get(finder: any, type: any){\r\n  return Object.values(finder.findByType(type));\r\n}\r\n\r\nfunction bindAllElements(finder: any) {\r\n  bindSpatialToSpatial(finder);\r\n  bindElementsToSpatial(finder);\r\n  bindVoidsToElements(finder);\r\n  bindFillingsToElements(finder);\r\n  bindTypesToElements(finder);\r\n}\r\n\r\nfunction bindSpatialToSpatial(finder: any) {\r\n  bindElements(\r\n    finder,\r\n    t.IfcRelAggregates,\r\n    n.relatingObject,\r\n    n.relatedObjects,\r\n    n.hasSpatial\r\n  );\r\n}\r\n\r\nfunction bindElementsToSpatial(finder: any) {\r\n  bindElements(\r\n    finder,\r\n    t.IfcRelContainedInSpatialStructure,\r\n    n.relatingStructure,\r\n    n.relatedElements,\r\n    n.hasBuildingElements\r\n  );\r\n}\r\n\r\nfunction bindVoidsToElements(finder: any) {\r\n  bindElements(\r\n    finder,\r\n    t.IfcRelVoidsElement,\r\n    n.relatingBuildingElement,\r\n    n.relatedOpeningElement,\r\n    n.hasOpenings\r\n  );\r\n}\r\n\r\nfunction bindFillingsToElements(finder: any) {\r\n  bindElements(\r\n    finder,\r\n    t.IfcRelFillsElement,\r\n    n.relatingOpeningElement,\r\n    n.relatedBuildingElement,\r\n    n.hasFillings\r\n  );\r\n}\r\n\r\nfunction bindTypesToElements(finder: any) {\r\n  bindElements(\r\n    finder,\r\n    t.IfcRelDefinesByType,\r\n    n.relatedObjects,\r\n    n.relatingType,\r\n    n.hasType\r\n  );\r\n}\r\n\r\nexport { constructProject };\r\n","import { defaultValue as def, namedProps as n, pivots as p } from '../../utils/global-constants.js';\r\n\r\nfunction trackLocalTransform(product: any, placement: any, property: any) {\r\n  const transform = initializeTransform(product, property);\r\n  const { locat, xAxis, yAxis, zAxis } = getTransform(placement);\r\n  transform[p.locat].push(locat);\r\n  transform[p.xAxis].push(xAxis);\r\n  transform[p.yAxis].push(yAxis);\r\n  transform[p.zAxis].push(zAxis);\r\n}\r\n\r\nfunction initializeTransform(product: any, property: any) {\r\n  if (!product[property])\r\n    product[property] = {\r\n      [p.locat]: [],\r\n      [p.xAxis]: [],\r\n      [p.yAxis]: [],\r\n      [p.zAxis]: []\r\n    };\r\n  return product[property];\r\n}\r\n\r\nfunction getTransform(placement: any) {\r\n  const locat = getLocat(placement);\r\n  const xAxis = getAxisX(placement);\r\n  const zAxis = getAxisZ(placement);\r\n  const yAxis = getAxisY(zAxis, xAxis);\r\n  return { locat, xAxis, yAxis, zAxis };\r\n}\r\n\r\nfunction getTransformOfGeometry(placement: any) {\r\n  const { locat, xAxis, yAxis, zAxis } = getTransform(placement);\r\n  return { [p.locat]: [locat], [p.xAxis]: [xAxis], [p.yAxis]: [yAxis], [p.zAxis]: [zAxis] };\r\n}\r\n\r\nfunction getLocat(placement: any) {\r\n  if (isInvalid(placement[n.location])) return [0, 0, 0];\r\n  const location = placement[n.location][n.coordinates];\r\n  if (location.length === 2) location.push(0);\r\n  return location;\r\n}\r\n\r\nfunction getAxisX(placement: any) {\r\n  if (isInvalid(placement[n.refDirection])) return [1, 0, 0];\r\n  let x = placement[n.refDirection][n.dirRatios];\r\n  if (x.length === 2) x.push(0);\r\n  return x;\r\n}\r\n\r\nfunction getAxisZ(placement: any) {\r\n  if (isInvalid(placement[n.axis])) return [0, 0, 1];\r\n  const z = placement[n.axis][n.dirRatios];\r\n  if (z.length === 2) z.push(0);\r\n  return z;\r\n}\r\n\r\n//In IFC the axis Y is implicit (computed from X and Z)\r\n\r\nfunction getAxisY(X: any, Z: any) {\r\n  return [X[1] * Z[2] - X[2] * Z[1], X[2] * Z[0] - X[0] * Z[2], X[0] * Z[1] - X[1] * Z[0]];\r\n}\r\n\r\nfunction isInvalid(prop: any) {\r\n  if (!prop || prop === def) return true;\r\n  return false;\r\n}\r\n\r\nexport { trackLocalTransform, getTransformOfGeometry };\r\n","import { namedProps as n, pivots as p } from \"../../utils/global-constants.js\";\r\nimport { mainObject } from \"../scene/mainObject.js\";\r\nimport { getTransformOfGeometry } from \"./local-transform-tracker.js\";\r\n\r\nfunction applyTransforms(product: any, property: any) {\r\n  const pivots = getPivots(product[property]);\r\n  product[n.geometry].forEach((geometry: any) => applyTransform(geometry, pivots));\r\n}\r\n\r\nfunction applyTransformsTo(product: any, geometry: any, property: any) {\r\n  const pivots = getPivots(product[property]);\r\n  applyTransform(geometry, pivots);\r\n  resetTransformData(product, property);\r\n}\r\n\r\nfunction resetTransformData(product: any, property: any) {\r\n  product[property] = {\r\n    [p.locat]: [],\r\n    [p.xAxis]: [],\r\n    [p.yAxis]: [],\r\n    [p.zAxis]: [],\r\n  };\r\n}\r\n\r\nfunction applyTransformsToGeometry(geometry: any, placement: any){\r\n  const transform = getTransformOfGeometry(placement);\r\n  const pivots = getPivots(transform);\r\n  applyTransform(geometry, pivots);\r\n}\r\n\r\nfunction applyTransform(geometry: any, pivots: any) {\r\n  if (geometry) {\r\n    bindGeometryToPivots(geometry, pivots);\r\n    mainObject.add(pivots[0]);\r\n    attachGeometryToScene(geometry);\r\n    mainObject.remove(pivots[0]);\r\n  }\r\n}\r\n\r\n// @ts-expect-error ts-migrate(7023) FIXME: 'attachGeometryToScene' implicitly has return type... Remove this comment to see the full error message\r\nfunction attachGeometryToScene(geometry: any) {\r\n  if (geometry.constructor === Array)\r\n    return geometry.forEach((e) => attachGeometryToScene(e));\r\n  return mainObject.attach(geometry);\r\n}\r\n\r\n// @ts-expect-error ts-migrate(7023) FIXME: 'bindGeometryToPivots' implicitly has return type ... Remove this comment to see the full error message\r\nfunction bindGeometryToPivots(geometry: any, pivots: any) {\r\n  if (geometry.constructor === Array)\r\n    return geometry.forEach((e) => bindGeometryToPivots(e, pivots));\r\n  pivots[pivots.length - 1].add(geometry);\r\n}\r\n\r\nfunction getPivots(transform: any) {\r\n  const pivots = [];\r\n  const locations = transform[p.locat] || [];\r\n  for (let i = locations.length - 1; i >= 0; i--) {\r\n    // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n    const pivot = new THREE.Object3D();\r\n    pivot.rotation.setFromRotationMatrix(getRotMat(transform, i));\r\n    pivot.position.set(...locations[i]);\r\n    pivots.push(pivot);\r\n  }\r\n  bindPivots(pivots);\r\n  return pivots;\r\n}\r\n\r\nfunction bindPivots(pivots: any) {\r\n  for (let i = 0; i < pivots.length; i++) {\r\n    if (pivots[i + 1]) pivots[i].add(pivots[i + 1]);\r\n  }\r\n}\r\n\r\nfunction getRotMat(transform: any, index: any) {\r\n  const { x, y, z } = getTransforms(transform, index);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const directionMatrix = new THREE.Matrix4();\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const rotationMatrix = new THREE.Matrix4();\r\n  directionMatrix.set(\r\n    x[0], x[1], x[2], 0,\r\n    y[0], y[1], y[2], 0,\r\n    z[0], z[1], z[2], 0,\r\n      0,    0,    0,  1\r\n  );\r\n  rotationMatrix.getInverse(directionMatrix);\r\n  return rotationMatrix;\r\n}\r\n\r\nfunction getTransforms(transform: any, index: any) {\r\n  const x = transform[p.xAxis][index];\r\n  const y = transform[p.yAxis][index];\r\n  const z = transform[p.zAxis][index];\r\n  return { x, y, z };\r\n}\r\n\r\nexport { applyTransforms, applyTransformsTo, applyTransformsToGeometry };\r\n","import { trackLocalTransform } from './local-transform-tracker.js';\r\nimport { applyTransforms } from './local-transform-applier.js';\r\nimport {\r\n  defaultValue as def,\r\n  namedProps as n,\r\n  structuredData as s\r\n} from '../../utils/global-constants.js';\r\nfunction applyTransformations(structured: any) {\r\n  structured[s.products].forEach((product: any) => {\r\n    applyTransform(product);\r\n  });\r\n}\r\n\r\nfunction applyTransform(product: any) {\r\n  getTransforms(product, getPlacement(product));\r\n  applyTransforms(product, n.transform);\r\n  applyTransformToItems(product[n.hasOpenings]);\r\n  applyTransformToItems(product[n.hasSpatial]);\r\n}\r\n\r\nfunction applyTransformToItems(items: any) {\r\n  if (items)\r\n    items.forEach((item: any) => {\r\n      getTransforms(item, getPlacement(item));\r\n      applyTransforms(item, n.transform);\r\n    });\r\n}\r\n\r\n//Gets all the transforms (local origins) recursively\r\nfunction getTransforms(product: any, objPlacement: any) {\r\n  try {\r\n    const placement = objPlacement[n.relativePlacement];\r\n    trackLocalTransform(product, placement, n.transform);\r\n    if (objPlacement[n.placementRelTo] != def)\r\n      getTransforms(product, objPlacement[n.placementRelTo]);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\nfunction getPlacement(product: any) {\r\n  try {\r\n    return product[n.objectPlacement];\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\nexport { applyTransformations };\r\n","function createLine(coordinates: any) {\r\n  \r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const material = new THREE.LineBasicMaterial({\r\n    linecap: \"round\",\r\n    color: 0xff0000,\r\n  });\r\n\r\n  const points: any = [];\r\n  coordinates.forEach((e: any) => {\r\n    // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n    points.push(new THREE.Vector3(e[0], e[1]));\r\n  });\r\n\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const line = new THREE.Line(geometry, material);\r\n\r\n  return line;\r\n}\r\n\r\nexport { createLine };\r\n","import { createLine } from \"../three-geometry/three-line.js\";\r\nimport { namedProps as n } from \"../../../utils/global-constants.js\";\r\nimport { ifcTypes as t } from \"../../../utils/ifc-types.js\";\r\n\r\nfunction mapCurve2D(shape: any) {\r\n  return mapCurve(shape[n.items][0]);\r\n}\r\n\r\nfunction mapCurve(shape: any){\r\n  const ifcClass = shape[n.ifcClass].toUpperCase();\r\n  return curve2DMap[ifcClass](shape);\r\n}\r\n\r\nconst curve2DMap = {\r\n  [t.IfcPolyline]: mapPolyline,\r\n  [t.IfcTrimmedCurve]: mapTrimmedCurve,\r\n}\r\n\r\nfunction mapPolyline(shape: any){\r\n  const points: any = [];\r\n  shape[n.points].forEach((point: any) => {\r\n    points.push(point[n.coordinates]);\r\n  });\r\n  return createLine(points);\r\n}\r\n\r\nfunction mapTrimmedCurve(shape: any){\r\n  //TODO\r\n  console.log(\"TODO:\", shape);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  return new THREE.Object3D();\r\n}\r\n\r\nexport { mapCurve, mapCurve2D };","function createExtrusionsByPoints(points: any, depth: any, dir = [0, 0, 1], holes: any) {\r\n  const shapePoints: any = [];\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  points.forEach((e: any) => shapePoints.push(new THREE.Vector3(e[1], -e[0])));\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const shape = new THREE.Shape(shapePoints);\r\n  if (holes) holes.forEach((hole: any) => shape.holes.push(hole));\r\n  return createExtrusion(shape, depth, dir);\r\n}\r\n\r\nfunction createCircularExtrusion(radius: any, depth: any, dir = [0, 0, 1], thickness: any) {\r\n  const segments = 36;\r\n  const outerShape = createCircularShape(radius, segments);\r\n  if (thickness) {\r\n    const innerShape = createCircularShape(radius - thickness, segments);\r\n    outerShape.holes.push(innerShape);\r\n  }\r\n  return createExtrusion(outerShape, depth, (dir = [0, 0, 1]));\r\n}\r\n\r\nfunction createTubularExtrusion(radius: any, depth: any, dir = [0, 0, 1], thickness: any) {\r\n  return createCircularExtrusion(radius, depth, dir, thickness);\r\n}\r\n\r\nfunction createCircularShape(radius: any, segments: any) {\r\n  const coordinates = getCircleCoordinates(radius, segments);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const shape = new THREE.Shape();\r\n  shape.moveTo(...coordinates[0]);\r\n  coordinates.shift;\r\n  coordinates.forEach((point) => shape.lineTo(...point));\r\n  return shape;\r\n}\r\n\r\nfunction getCircleCoordinates(radius: any, steps: any) {\r\n  const coords = [];\r\n  for (let i = 0; i < steps; i++) {\r\n    coords.push([\r\n      radius * Math.cos(2 * Math.PI * (i / steps)),\r\n      radius * Math.sin(2 * Math.PI * (i / steps))\r\n    ]);\r\n  }\r\n  coords.push([...coords[0]]);\r\n  return coords;\r\n}\r\n\r\nfunction createExtrusion(shape: any, depth: any, dir = [0, 0, 1]) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const material = new THREE.MeshPhongMaterial({ color: 0xffffff });\r\n  const extrudeSettings = getExtrudeSettings(depth, dir);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\r\n  applyExtrusionDirection(dir, geometry);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const mesh = new THREE.Mesh(geometry, material);\r\n  mesh.updateMatrix();\r\n  return mesh;\r\n}\r\n\r\nfunction getExtrudeSettings(depth: any, dir: any) {\r\n  const path = getVerticalDirection(depth, dir);\r\n  return {\r\n    bevelEnabled: false,\r\n    steps: 1,\r\n    extrudePath: path\r\n  };\r\n}\r\n\r\n//To define the direction of the extrusion:\r\n// x and y are applied as a skew operation (transform matrix)\r\n// z is applied in the vertical direction\r\n\r\nfunction applyExtrusionDirection(dir: any, geometry: any) {\r\n  const matrix = getTransformMatrix(dir);\r\n  geometry.applyMatrix4(matrix);\r\n}\r\n\r\nfunction getTransformMatrix(dir: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const matrix = new THREE.Matrix4();\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const direction = new THREE.Vector3(dir[0], dir[1], dir[2]);\r\n  const Syx = 0,\r\n    Sxy = 0,\r\n    Sxz = 0,\r\n    Syz = 0;\r\n  const Szx = direction.y,\r\n    Szy = direction.x;\r\n    return matrix.set(   1, Syx,  Szx,  0, \r\n                       Sxy,   1,  Szy,  0, \r\n                       Sxz, Syz,    1,  0, \r\n                         0,   0,    0,  1);\r\n}\r\n\r\nfunction getVerticalDirection(depth: any, dir: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const v1 = new THREE.Vector3(0, 0, 0);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const v2 = new THREE.Vector3(0, 0, depth * dir[2]);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  return new THREE.LineCurve3(v1, v2);\r\n}\r\n\r\nexport {\r\n  createExtrusionsByPoints,\r\n  createCircularExtrusion,\r\n  createTubularExtrusion,\r\n  createExtrusion\r\n};\r\n","import { createExtrusionsByPoints } from \"../three-geometry/three-extrusion.js\";\r\nimport { namedProps as n } from \"../../../utils/global-constants.js\";\r\nimport { applyTransformsToGeometry } from \"../../geometry-transformer/local-transform-applier.js\";\r\n\r\nfunction mapRectangleProfileExtrusion(extruded: any, product: any) {\r\n  getRectProfileDimensions(extruded);\r\n  const position = extruded.profile[n.position];\r\n  const points = getRectProfilePoints(extruded);\r\n  // @ts-expect-error ts-migrate(2554) FIXME: Expected 4 arguments, but got 3.\r\n  const geometry = createExtrusionsByPoints(points, extruded.depth, extruded.direction);\r\n  applyTransformsToGeometry(geometry, position);\r\n  return geometry;\r\n}\r\n\r\nfunction getRectProfilePoints(extruded: any) {\r\n  const halfWidth = extruded[n.xDim] / 2;\r\n  const halfHeight = extruded[n.yDim] / 2;\r\n  return [\r\n    [-halfWidth, halfHeight],\r\n    [halfWidth, halfHeight],\r\n    [halfWidth, -halfHeight],\r\n    [-halfWidth, -halfHeight],\r\n  ];\r\n}\r\n\r\nfunction getRectProfileDimensions(extruded: any) {\r\n  extruded[n.xDim] = extruded.profile[n.xDim];\r\n  extruded[n.yDim] = extruded.profile[n.yDim];\r\n}\r\n\r\nexport { mapRectangleProfileExtrusion };\r\n","import { createExtrusion, createExtrusionsByPoints } from '../three-geometry/three-extrusion.js';\r\nimport { ifcTypes as t } from '../../../utils/ifc-types.js';\r\nimport { namedProps as n, ifcUnitsValue as i } from '../../../utils/global-constants.js';\r\n\r\nfunction mapArbitraryProfileExtrusion(props: any) {\r\n  return mapExtrusionByTypeOfProfile(props);\r\n}\r\n\r\nfunction mapArbitraryProfileWithVoidsExtrusion(props: any) {\r\n    props.holes = getInnerVoids(props);\r\n    return mapExtrusionByTypeOfProfile(props);\r\n}\r\n\r\nfunction getInnerVoids(props: any) {\r\n  const shapes: any = [];\r\n  const innerCurvesRep = props.profile[n.innerCurves];\r\n  innerCurvesRep.forEach((curveRep: any) => {\r\n    const typeOfProfile = curveRep[n.ifcClass].toUpperCase();\r\n    shapes.push(extrusionCurvesMap[typeOfProfile].shape(curveRep));\r\n  });\r\n  return shapes;\r\n}\r\n\r\nfunction mapExtrusionByTypeOfProfile(props: any) {\r\n  const typeOfProfile = props.profile[n.outerCurve][n.ifcClass].toUpperCase();\r\n  return extrusionCurvesMap[typeOfProfile].extrusion(props);\r\n}\r\n\r\nconst extrusionCurvesMap = {\r\n  [t.IfcPolyline]: { extrusion: mapPolylineExtrusion, shape: mapPolylineShape },\r\n  [t.IfcCompositeCurve]: { extrusion: mapCompositeCurveExtrusion, shape: mapCompositeCurveShape }\r\n};\r\n\r\nfunction mapPolylineShape(shapeRepresentation: any) {\r\n  const points = getShapePoints(shapeRepresentation[n.points]);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const shape = new THREE.Shape();\r\n  shape.moveTo(...points[0]);\r\n  points.shift();\r\n  points.forEach((point: any) => shape.lineTo(...point));\r\n  return shape;\r\n}\r\n\r\nfunction getShapePoints(pointsRepresentation: any) {\r\n  return pointsRepresentation.map((point: any) => {\r\n    const coords = point[n.coordinates];\r\n    return [-coords[1], coords[0]];\r\n  });\r\n}\r\n\r\nfunction mapPolylineExtrusion(props: any) {\r\n  const profileRepresentation = props.profile;\r\n  const pointsRepresentation = profileRepresentation[n.outerCurve][n.points];\r\n  const points = getExtrusionPoints(pointsRepresentation);\r\n  return createExtrusionsByPoints(points, props.depth, props.direction, props.holes);\r\n}\r\n\r\nfunction mapCompositeCurveShape(shapeRepresentation: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const shape = new THREE.Shape();\r\n  const segmentsRepresentation = shapeRepresentation[n.segments];\r\n  segmentsRepresentation.forEach((curve: any) => mapCompositeCurveSegment(shape, curve));\r\n  resetFirstCompositeCurve();\r\n  return shape;\r\n}\r\n\r\nfunction mapCompositeCurveExtrusion(props: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const shape = new THREE.Shape();\r\n  const segmentsRepresentation = props.profile[n.outerCurve][n.segments];\r\n  segmentsRepresentation.forEach((curve: any) => mapCompositeCurveSegment(shape, curve));\r\n  resetFirstCompositeCurve();\r\n  if (props.holes) props.holes.forEach((hole: any) => shape.holes.push(hole));\r\n  const extrusion = createExtrusion(shape, props.depth, props.direction);\r\n  extrusion.rotation.z += Math.PI / 2;\r\n  extrusion.updateMatrix();\r\n  return extrusion;\r\n}\r\n\r\nfunction mapCompositeCurveSegment(shape: any, segmentRepresentation: any) {\r\n  const curve = segmentRepresentation[n.parentCurve];\r\n  const typeOfCurve = curve[n.ifcClass].toUpperCase();\r\n  compositeCurvesMap[typeOfCurve](shape, curve);\r\n}\r\n\r\nconst compositeCurvesMap = {\r\n  [t.IfcPolyline]: mapPolylineSegment,\r\n  [t.IfcTrimmedCurve]: mapTrimmedCurveSegment\r\n};\r\n\r\nfunction mapPolylineSegment(shape: any, curve: any) {\r\n  const points = curve[n.points];\r\n  if (isFirstSegmentOfCompositeCurve) {\r\n    shape.moveTo(...points[0][n.coordinates]);\r\n    points.shift();\r\n    isFirstSegmentOfCompositeCurve = false;\r\n  }\r\n  points.forEach((point: any) => shape.lineTo(...point[n.coordinates]));\r\n}\r\n\r\nfunction mapTrimmedCurveSegment(shape: any, curve: any) {\r\n  const typeOfTrimmedCurve = curve[n.basisCurve][n.ifcClass].toUpperCase();\r\n  trimmedCurvesMap[typeOfTrimmedCurve](shape, curve);\r\n}\r\n\r\nconst trimmedCurvesMap = {\r\n  [t.IfcCircle]: mapTrimmedCircleCurve\r\n};\r\n\r\n//Three.js draw shapes continuously\r\n//(the last point of the current curve is the closest to the first point of the next curve)\r\n//But circles in IFC doesn't follow this pattern necessarily\r\n//This function computes the closest point of the next arc\r\n//To determine wether to draw the circle clockwise or counter-clockwise\r\n\r\nfunction mapTrimmedCircleCurve(shape: any, curve: any) {\r\n  const { x, y, radius, trims, ends } = getCircleInfo(curve);\r\n  const currentPoint = [shape.currentPoint.x, shape.currentPoint.y];\r\n  const distancesToNextPoints = getDistancesToNextPoints(currentPoint, ends);\r\n  distancesToNextPoints[0] < distancesToNextPoints[1]\r\n    ? shape.absarc(x, y, radius, trims[0], trims[1], false)\r\n    : shape.absarc(x, y, radius, trims[1], trims[0], true);\r\n}\r\n\r\nfunction getDistancesToNextPoints(currentPoint: any, ends: any) {\r\n  return [\r\n    getDistanceBetweenPoints(currentPoint, ends[0]),\r\n    getDistanceBetweenPoints(currentPoint, ends[1])\r\n  ];\r\n}\r\n\r\nfunction getCircleInfo(curve: any) {\r\n  const location = curve[n.basisCurve][n.position][n.location][n.coordinates];\r\n  const radius = curve[n.basisCurve][n.radius];\r\n  const x = location[0];\r\n  const y = location[1];\r\n  const trims = getTrimmedCircleTrims(curve);\r\n  const ends = getTrimmedCircleEnds(x, y, radius, trims);\r\n  return { x, y, radius, trims, ends };\r\n}\r\n\r\nfunction getTrimmedCircleTrims(curve: any) {\r\n  return [getTrimmedCircleTrim(curve, [n.trim1]), getTrimmedCircleTrim(curve, [n.trim2])];\r\n}\r\n\r\nfunction getTrimmedCircleTrim(curve: any, trim: any) {\r\n  const rotation = curve[n.basisCurve][n.position][n.refDirection][n.dirRatios];\r\n  const offsetAngle = Math.acos(rotation[0]);\r\n  return (curve[trim][0][i.value] * Math.PI) / 180 + offsetAngle;\r\n}\r\n\r\nfunction getTrimmedCircleEnds(x: any, y: any, radius: any, trims: any) {\r\n  return [getCirclePoint(x, y, radius, trims[0]), getCirclePoint(x, y, radius, trims[1])];\r\n}\r\n\r\nfunction getCirclePoint(x: any, y: any, radius: any, angle: any) {\r\n  return [Math.cos(angle) * radius + x, Math.sin(angle) * radius + y];\r\n}\r\n\r\nfunction getDistanceBetweenPoints(point1: any, point2: any) {\r\n  const a = point1[0] - point2[0];\r\n  const b = point1[1] - point2[1];\r\n  return Math.sqrt(a * a + b * b);\r\n}\r\n\r\nfunction getExtrusionPoints(pointsRepresentation: any) {\r\n  return pointsRepresentation.map((point: any) => {\r\n    const coords = point[n.coordinates];\r\n    return [-coords[0], -coords[1]];\r\n  });\r\n}\r\n\r\n//Three.js needs to know the first point of the first curve to create a shape\r\n\r\nlet isFirstSegmentOfCompositeCurve = true;\r\n\r\nfunction resetFirstCompositeCurve() {\r\n  isFirstSegmentOfCompositeCurve = true;\r\n}\r\n\r\nexport { mapArbitraryProfileExtrusion, mapArbitraryProfileWithVoidsExtrusion };\r\n","import { createCircularExtrusion, createTubularExtrusion } from '../three-geometry/three-extrusion.js';\r\nimport { namedProps as n } from '../../../utils/global-constants.js';\r\nimport { applyTransformsToGeometry } from '../../geometry-transformer/local-transform-applier.js';\r\n\r\nfunction mapCircleProfileExtrusion(extruded: any) {\r\n  const { position, radius } = getProperties(extruded);\r\n  // @ts-expect-error ts-migrate(2554) FIXME: Expected 4 arguments, but got 2.\r\n  const cylinder = createCircularExtrusion(radius, extruded.depth);\r\n  applyTransformsToGeometry(cylinder, position);\r\n  return cylinder;\r\n}\r\n\r\nfunction mapCircleHollowProfileExtrusion(extruded: any) {\r\n  const { position, radius, thickness } = getProperties(extruded);\r\n  const tube = createTubularExtrusion(radius, extruded.depth, extruded.direction, thickness);\r\n  applyTransformsToGeometry(tube, position);\r\n  return tube;\r\n}\r\n\r\nfunction getProperties(extruded: any) {\r\n  return {\r\n    position: extruded.profile[n.position],\r\n    radius: extruded.profile[n.radius],\r\n    thickness: extruded.profile[n.wallThickness]\r\n  };\r\n}\r\n\r\nexport { mapCircleProfileExtrusion, mapCircleHollowProfileExtrusion };\r\n","import { mapRectangleProfileExtrusion } from \"../extrusions/rectangle-profile-extrusion.js\";\r\nimport { ifcTypes as t } from \"../../../utils/ifc-types.js\";\r\nimport { applyTransformsToGeometry } from \"../../geometry-transformer/local-transform-applier.js\";\r\nimport { namedProps as n } from \"../../../utils/global-constants.js\";\r\nimport { mainObject } from \"../../scene/mainObject.js\";\r\nimport { mapArbitraryProfileExtrusion, mapArbitraryProfileWithVoidsExtrusion } from \"../extrusions/arbitrary-profile-extrusion.js\";\r\nimport { mapCircleHollowProfileExtrusion, mapCircleProfileExtrusion } from \"../extrusions/circle-profile-extrusion.js\";\r\n\r\nfunction mapSweptSolid(shape: any, product: any) {\r\n  const items: any = [];\r\n  shape[n.items].forEach((extruded: any) => items.push(mapExtrudedAreaSolid(extruded, product)));\r\n  return joinAllExtrusions(items);\r\n}\r\n\r\nfunction joinAllExtrusions(items: any){\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  var singleGeometry = new THREE.Geometry();\r\n  items.forEach((item: any) => {\r\n    item.updateMatrix();\r\n    singleGeometry.merge(item.geometry, item.matrix);\r\n    mainObject.remove(item);\r\n  })\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const result = new THREE.Mesh(singleGeometry);\r\n  mainObject.add(result);\r\n  return result;\r\n}\r\n\r\nfunction mapExtrudedAreaSolid(extruded: any, product: any) {\r\n  const extrudedProps = getExtrusionProps(extruded);\r\n  const solid = getExtrusionByType(extrudedProps, product);\r\n  const position = extruded[n.position];\r\n  applyTransformsToGeometry(solid, position);\r\n  return solid;\r\n}\r\n\r\nfunction getExtrusionProps(extruded: any) {\r\n  return {\r\n    profile: extruded[n.sweptArea],\r\n    ifcClass: extruded[n.sweptArea][n.ifcClass],\r\n    depth: extruded[n.depth],\r\n    direction: extruded[n.extDirection][n.dirRatios],\r\n  };\r\n}\r\n\r\nconst extrusionTypes = {\r\n  [t.IfcRectangleProfileDef]: mapRectangleProfileExtrusion,\r\n  [t.IfcCircleProfileDef]: mapCircleProfileExtrusion,\r\n  [t.IfcCircleHollowProfileDef]: mapCircleHollowProfileExtrusion,\r\n  [t.IfcArbitraryClosedProfileDef]: mapArbitraryProfileExtrusion,\r\n  [t.IfcArbitraryProfileDefWithVoids]: mapArbitraryProfileWithVoidsExtrusion,\r\n};\r\n\r\nfunction getExtrusionByType(extruded: any, product: any) {\r\n  return extrusionTypes[extruded.ifcClass.toUpperCase()](extruded, product);\r\n}\r\n\r\nexport { mapSweptSolid, mapExtrudedAreaSolid};\r\n","import { defaultValue, namedProps as n } from '../../../utils/global-constants.js';\r\nimport { applyTransformsToGeometry } from '../../geometry-transformer/local-transform-applier.js';\r\nimport { mainObject } from '../../scene/mainObject.js';\r\nimport { getMappedGeometry } from '../geometry-map.js';\r\n\r\n// @ts-expect-error ts-migrate(7023) FIXME: 'mapMappedRepresentation' implicitly has return ty... Remove this comment to see the full error message\r\nfunction mapMappedRepresentation(shape: any, product: any) {\r\n  const representation = shape[n.items][0];\r\n  const target = getMappingTarget(representation);\r\n  // @ts-expect-error ts-migrate(7022) FIXME: 'mapped' implicitly has type 'any' because it does... Remove this comment to see the full error message\r\n  const mapped = getMappingSource(product, representation);\r\n  applyTransformsToGeometry(mapped, target);\r\n  return mapped;\r\n}\r\n\r\n//The concept of mapped representation is that there are several instances\r\n//of the same geometry. Storing the geometries allows to generate them\r\n//only once and them simply create each instance copying the source geometry.\r\n\r\nconst mappingSources = {};\r\n\r\n// @ts-expect-error ts-migrate(7023) FIXME: 'getMappingSource' implicitly has return type 'any... Remove this comment to see the full error message\r\nfunction getMappingSource(product: any, representation: any) {\r\n  const source = representation[n.mappingSource];\r\n  const origin = source[n.mappingOrigin];\r\n  // @ts-expect-error ts-migrate(7022) FIXME: 'geometry' implicitly has type 'any' because it do... Remove this comment to see the full error message\r\n  const geometry = isGeometryGenerated(source)\r\n    ? getGeneratedGeometry(source)\r\n    : generateGeometry(source, product);\r\n  applyTransformsToGeometry(geometry, origin);\r\n  return geometry;\r\n}\r\n\r\n// @ts-expect-error ts-migrate(7023) FIXME: 'generateGeometry' implicitly has return type 'any... Remove this comment to see the full error message\r\nfunction generateGeometry(source: any, product: any) {\r\n  const mappedGeometry = source[n.mappedRepresentation];\r\n  // @ts-expect-error ts-migrate(7022) FIXME: 'geometry' implicitly has type 'any' because it do... Remove this comment to see the full error message\r\n  const geometry = getMappedGeometry(mappedGeometry, product);\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  mappingSources[source[n.expressId]] = geometry;\r\n  mainObject.remove(geometry);\r\n  return geometry.clone();\r\n}\r\n\r\nfunction isGeometryGenerated(source: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return mappingSources[source[n.expressId]] ? true : false;\r\n}\r\n\r\nfunction getGeneratedGeometry(source: any) {\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return mappingSources[source[n.expressId]].clone();\r\n}\r\n\r\n//The mapping target defines the transformation of the mapped items\r\n//Generally, in IFC the transformation is read from IfcAxis2Placement instances\r\n//This is an exception: data needs to be structured like an IfcAxis2Placement\r\n//to avoid poluting the transformation logic\r\n\r\nfunction getMappingTarget(representation: any) {\r\n  const target = representation[n.mappingTarget];\r\n  return {\r\n    [n.location]: { [n.coordinates]: getTargetOrigin(target) },\r\n    [n.refDirection]: { [n.dirRatios]: getAxis(target, n.axis1, [1, 0, 0]) },\r\n    [n.axis]: { [n.dirRatios]: getAxis(target, n.axis3, [0, 0, 1]) },\r\n    [n.scale]: target[n.scale]\r\n  };\r\n}\r\n\r\nfunction getTargetOrigin(target: any) {\r\n  return target[n.localOrigin][n.coordinates];\r\n}\r\n\r\nfunction getAxis(target: any, axis: any, def: any) {\r\n  const value = target[axis];\r\n  return value === defaultValue ? def : value;\r\n}\r\n\r\nexport { mapMappedRepresentation };\r\n","//Credit to the following algorithm:\r\n//https://stackoverflow.com/questions/50272399/three-js-2d-object-in-3d-space-by-vertices/50274103#50274103\r\n\r\nfunction createFace(faceDefinition: any) {\r\n  const coordinates = faceDefinition.outerBounds.bounds[0];\r\n  let outerPoints = getPoints(coordinates);\r\n  let { tempOuterPoints, quaternion } = getProjectedPointsAndQuaternion(outerPoints);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const outerShape = new THREE.Shape(tempOuterPoints);\r\n  const allPoints = [...outerPoints];\r\n  if (hasHoles(faceDefinition)) punchHoles(faceDefinition, quaternion, allPoints, outerShape);\r\n  return createGeometry(outerShape, allPoints);\r\n}\r\n\r\nfunction createGeometry(outerShape: any, allPoints: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const shapeGeom = new THREE.ShapeGeometry(outerShape, 24);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const mesh = new THREE.Mesh(shapeGeom);\r\n  mesh.geometry.vertices = allPoints;\r\n  mesh.geometry.computeVertexNormals();\r\n  mesh.geometry.computeFaceNormals();\r\n  return mesh;\r\n}\r\n\r\nfunction getPoints(coordinates: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  return coordinates.map((p: any) => new THREE.Vector3(p[0], p[1], p[2]));\r\n}\r\n\r\nfunction getTempPoints(points: any, quaternion: any) {\r\n  return points.map((p: any) => p.clone().applyQuaternion(quaternion));\r\n}\r\n\r\nfunction hasHoles(faceDefinition: any) {\r\n  return faceDefinition.innerBounds.bounds.length > 0;\r\n}\r\n\r\nfunction punchHoles(faceDefinition: any, quaternion: any, allPoints: any, outerShape: any) {\r\n  faceDefinition.innerBounds.bounds.forEach((bound: any) => {\r\n    const innerPoints = getPoints(bound);\r\n    const tempInnerPoints = getTempPoints(innerPoints, quaternion);\r\n    // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n    const innerShape = new THREE.Path(tempInnerPoints);\r\n    outerShape.holes.push(innerShape);\r\n    allPoints.push(...innerPoints);\r\n  });\r\n}\r\n\r\n//To implement this algorithm successfully (see link above)\r\n// the selected triangle of vertices needs to fulfill the following points to work:\r\n// 1. It must be a valid triangle (its vertices are not aligned)\r\n// 2. Its area should be as big as possible to increment the precission of its normal vector\r\n// 3. The generated 2d surface has its points defined clockwise\r\n\r\nfunction getProjectedPointsAndQuaternion(points: any) {\r\n  const triangles = getAllTriangles(points); //1\r\n  sortTrianglesByArea(triangles); //2\r\n  return getQuatAndPoints(triangles, points); //3\r\n}\r\n\r\nfunction getAllTriangles(points: any) {\r\n  const triangles = [];\r\n  let i = 1;\r\n  while (i + 1 < points.length) {\r\n    const { vector, triangle } = getTriangleVector(points, i);\r\n    if (isVectorValid(vector)) triangles.push({ area: triangle.getArea(), triangle });\r\n    i++;\r\n  }\r\n  return triangles;\r\n}\r\n\r\nfunction getTriangleVector(points: any, i: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const triangle = new THREE.Triangle(points[i + 1], points[i], points[0]);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const vector = new THREE.Vector3();\r\n  triangle.getNormal(vector);\r\n  return { vector, triangle };\r\n}\r\n\r\nfunction sortTrianglesByArea(triangles: any) {\r\n  triangles.sort((a: any, b: any) => (a.area > b.area ? 1 : b.area > a.area ? -1 : 0)).reverse();\r\n}\r\n\r\nfunction isVectorValid(vector: any) {\r\n  return vector.x != 0 || vector.y != 0 || vector.z != 0;\r\n}\r\n\r\nfunction getQuatAndPoints(triangles: any, points: any) {\r\n  const props = initializeProperties();\r\n  while (props.isClockWise === false) selectAnotherTriangle(props, points, triangles);\r\n  return { tempOuterPoints: props.tempOuterPoints, quaternion: props.quaternion };\r\n}\r\n\r\nfunction selectAnotherTriangle(props: any, points: any, triangles: any) {\r\n  const tri = triangles[props.selectedTriangle];\r\n  tri.triangle.getNormal(props.normal);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  props.quaternion = new THREE.Quaternion().setFromUnitVectors(props.normal, props.baseNormal);\r\n  props.tempOuterPoints = getTempPoints(points, props.quaternion);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const projected = props.tempOuterPoints.map((point: any) => new THREE.Vector2(point.x, point.y));\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  props.isClockWise = THREE.ShapeUtils.isClockWise(projected);\r\n  props.selectedTriangle++;\r\n}\r\n\r\nfunction initializeProperties() {\r\n  return {\r\n    // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n    baseNormal: new THREE.Vector3(0, 0, 1),\r\n    // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n    normal: new THREE.Vector3(),\r\n    selectedTriangle: 0,\r\n    tempOuterPoints: [],\r\n    quaternion: {},\r\n    isClockWise: false\r\n  };\r\n}\r\n\r\nexport { createFace };\r\n","import { namedProps as n } from '../../../utils/global-constants.js';\r\nimport { getName, ifcTypes as t } from '../../../utils/ifc-types.js';\r\nimport { createFace } from '../three-geometry/three-brep.js';\r\n\r\nfunction mapBrep(shape: any) {\r\n  const representations = shape[n.items];\r\n  const definitions: any = [];\r\n  representations.forEach((r: any) => definitions.push(...getGeometry(r[n.outer][n.cfsFaces])));\r\n\r\n  return createAndJoinFaces(definitions);\r\n}\r\n\r\nfunction mapSurfaceModel(shape: any) {\r\n  const faceSets = shape[n.items][0][n.fbsmFaces];\r\n  const definitions: any = [];\r\n  faceSets.forEach((faceSet: any) => definitions.push(...getGeometry(faceSet[n.cfsFaces])));\r\n\r\n  return createAndJoinFaces(definitions);\r\n}\r\n\r\nfunction createAndJoinFaces(definitions: any) {\r\n  const faces: any = [];\r\n  definitions.forEach((definition: any) => faces.push(createFace(definition)));\r\n  return joinAllFaces(faces);\r\n}\r\n\r\nfunction joinAllFaces(faces: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const joined = new THREE.Geometry();\r\n  faces.forEach((face: any) => joined.merge(face.geometry, face.matrix));\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const material = new THREE.MeshPhongMaterial({ side: 2 });\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const mesh = new THREE.Mesh(joined, material);\r\n  mesh.geometry.computeVertexNormals();\r\n  mesh.geometry.computeFaceNormals();\r\n  mesh[n.isBrep] = true;\r\n  return mesh;\r\n}\r\n\r\nfunction getGeometry(faceSet: any) {\r\n  const faces: any = [];\r\n  faceSet.forEach((face: any) => faces.push(getAllBounds(face)));\r\n  return faces;\r\n}\r\n\r\nfunction getAllBounds(face: any) {\r\n  const outerBoundsInfo = filterBounds(face, t.IfcFaceOuterBound);\r\n  const innerBoundsInfo = filterBounds(face, t.IfcFaceBound);\r\n  const outerBounds = getBounds(outerBoundsInfo);\r\n  const innerBounds = innerBoundsInfo ? getBounds(innerBoundsInfo) : {};\r\n  return { outerBounds, innerBounds };\r\n}\r\n\r\nfunction getBounds(ifcBounds: any) {\r\n  const bounds: any = [];\r\n  const orientation: any = [];\r\n  ifcBounds.forEach((bound: any) => {\r\n    bounds.push(getPoints(bound));\r\n    orientation.push(bound[n.orientation]);\r\n  });\r\n  return { orientation, bounds };\r\n}\r\n\r\nfunction getPoints(bound: any) {\r\n  const points = bound[n.bound][n.polygon];\r\n  const coordinates: any = [];\r\n  points.forEach((point: any) => {\r\n    const coord = point[n.coordinates];\r\n    if (coord) coordinates.push(coord);\r\n  });\r\n  return coordinates;\r\n}\r\n\r\nfunction filterBounds(face: any, type: any) {\r\n  return face[n.bounds].filter((e: any) => e[n.ifcClass] === getName(type));\r\n}\r\n\r\nexport { mapBrep, mapSurfaceModel };\r\n","import { namedProps as n } from \"../../../utils/global-constants.js\";\r\nimport { mapCurve } from \"../curves/curve.js\";\r\n\r\nfunction mapGeometricSet(shape: any) {\r\n  const curves = shape[n.items][0][n.elements];\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const result = new THREE.Object3D();\r\n  result.children = [...curves.map((e: any) => mapCurve(e))];\r\n  return result;\r\n}\r\n\r\nexport { mapGeometricSet };\r\n","function createClippingBox(orientation: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const geometry = new THREE.BoxBufferGeometry(100000, 100000, 100000);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const mesh = new THREE.Mesh(geometry);\r\n  const direction = orientation ? -1 : 1;\r\n  mesh.position.z += 50000 * direction;\r\n  mesh.updateMatrix();\r\n  return mesh;\r\n}\r\n\r\nexport { createClippingBox };\r\n","\"use strict\"\r\n\r\n// ## License\r\n// \r\n// Copyright (c) 2011 Evan Wallace (http://madebyevan.com/), under the MIT license.\r\n// THREE.js rework by thrax\r\n\r\n\r\n// # class CSG\r\n// Holds a binary space partition tree representing a 3D solid. Two solids can\r\n// be combined using the `union()`, `subtract()`, and `intersect()` methods.\r\n\r\nclass CSG {\r\n    constructor() {\r\n        this.polygons = [];\r\n    }\r\n    clone() {\r\n        var csg = new CSG();\r\n        csg.polygons = this.polygons.map(function(p) {\r\n            return p.clone();\r\n        });\r\n        return csg;\r\n    }\r\n\r\n    toPolygons() {\r\n        return this.polygons;\r\n    }\r\n\r\n    union(csg) {\r\n        var a = new Node(this.clone().polygons);\r\n        var b = new Node(csg.clone().polygons);\r\n        a.clipTo(b);\r\n        b.clipTo(a);\r\n        b.invert();\r\n        b.clipTo(a);\r\n        b.invert();\r\n        a.build(b.allPolygons());\r\n        return CSG.fromPolygons(a.allPolygons());\r\n    }\r\n\r\n    subtract(csg) {\r\n        var a = new Node(this.clone().polygons);\r\n        var b = new Node(csg.clone().polygons);\r\n        a.invert();\r\n        a.clipTo(b);\r\n        b.clipTo(a);\r\n        b.invert();\r\n        b.clipTo(a);\r\n        b.invert();\r\n        a.build(b.allPolygons());\r\n        a.invert();\r\n        return CSG.fromPolygons(a.allPolygons());\r\n    }\r\n\r\n    intersect(csg) {\r\n        var a = new Node(this.clone().polygons);\r\n        var b = new Node(csg.clone().polygons);\r\n        a.invert();\r\n        b.clipTo(a);\r\n        b.invert();\r\n        a.clipTo(b);\r\n        b.clipTo(a);\r\n        a.build(b.allPolygons());\r\n        a.invert();\r\n        return CSG.fromPolygons(a.allPolygons());\r\n    }\r\n\r\n    // Return a new CSG solid with solid and empty space switched. This solid is\r\n    // not modified.\r\n    inverse() {\r\n        var csg = this.clone();\r\n        csg.polygons.map(function(p) {\r\n            p.flip();\r\n        });\r\n        return csg;\r\n    }\r\n}\r\n\r\n// Construct a CSG solid from a list of `Polygon` instances.\r\nCSG.fromPolygons=function(polygons) {\r\n    var csg = new CSG();\r\n    csg.polygons = polygons;\r\n    return csg;\r\n}\r\n\r\n// # class Vector\r\n\r\n// Represents a 3D vector.\r\n// \r\n// Example usage:\r\n// \r\n//     new CSG.Vector(1, 2, 3);\r\n//     new CSG.Vector([1, 2, 3]);\r\n//     new CSG.Vector({ x: 1, y: 2, z: 3 });\r\n\r\nclass Vector extends THREE.Vector3 {\r\n    constructor(x, y, z) {\r\n        if (arguments.length == 3)\r\n            super(x, y, z)\r\n        else if (Array.isArray(x))\r\n            super(x[0], x[1], x[2])\r\n        else if (typeof x == 'object')\r\n            super().copy(x)\r\n        else\r\n            throw \"Invalid constructor to vector\"\r\n    }\r\n\r\n    clone() {\r\n        return new Vector(this)\r\n    }\r\n    negated() {\r\n        return this.clone().multiplyScalar(-1)\r\n    }\r\n    plus(a) {\r\n        return this.clone().add(a);\r\n    }\r\n    minus(a) {\r\n        return this.clone().sub(a)\r\n    }\r\n    times(a) {\r\n        return this.clone().multiplyScalar(a)\r\n    }\r\n    dividedBy(a) {\r\n        return this.clone().divideScalar(a)\r\n    }\r\n    lerp(a, t) {\r\n        return this.plus(a.minus(this).times(t))\r\n    }\r\n    unit() {\r\n        return this.dividedBy(this.length())\r\n    }\r\n    cross(a) {\r\n        return THREE.Vector3.prototype.cross.call(this.clone(), a)\r\n    }\r\n}\r\n\r\n// # class Vertex\r\n\r\n// Represents a vertex of a polygon. Use your own vertex class instead of this\r\n// one to provide additional features like texture coordinates and vertex\r\n// colors. Custom vertex classes need to provide a `pos` property and `clone()`,\r\n// `flip()`, and `interpolate()` methods that behave analogous to the ones\r\n// defined by `CSG.Vertex`. This class provides `normal` so convenience\r\n// functions like `CSG.sphere()` can return a smooth vertex normal, but `normal`\r\n// is not used anywhere else.\r\n\r\nclass Vertex {\r\n\r\n    constructor(pos, normal, uv) {\r\n        this.pos = new Vector(pos);\r\n        this.normal = new Vector(normal);\r\n        this.uv = new Vector(uv);\r\n    }\r\n\r\n    clone() {\r\n        return new Vertex(this.pos.clone(),this.normal.clone(),this.uv.clone());\r\n    }\r\n\r\n    // Invert all orientation-specific data (e.g. vertex normal). Called when the\r\n    // orientation of a polygon is flipped.\r\n    flip() {\r\n        this.normal = this.normal.negated();\r\n    }\r\n\r\n    // Create a new vertex between this vertex and `other` by linearly\r\n    // interpolating all properties using a parameter of `t`. Subclasses should\r\n    // override this to interpolate additional properties.\r\n    interpolate(other, t) {\r\n        return new Vertex(this.pos.lerp(other.pos, t),this.normal.lerp(other.normal, t),this.uv.lerp(other.uv, t))\r\n    }\r\n}\r\n;\r\n// # class Plane\r\n\r\n// Represents a plane in 3D space.\r\n\r\nclass Plane {\r\n    constructor(normal, w) {\r\n        this.normal = normal;\r\n        this.w = w;\r\n    }\r\n\r\n    clone() {\r\n        return new Plane(this.normal.clone(),this.w);\r\n    }\r\n\r\n    flip() {\r\n        this.normal = this.normal.negated();\r\n        this.w = -this.w;\r\n    }\r\n\r\n    // Split `polygon` by this plane if needed, then put the polygon or polygon\r\n    // fragments in the appropriate lists. Coplanar polygons go into either\r\n    // `coplanarFront` or `coplanarBack` depending on their orientation with\r\n    // respect to this plane. Polygons in front or in back of this plane go into\r\n    // either `front` or `back`.\r\n    splitPolygon(polygon, coplanarFront, coplanarBack, front, back) {\r\n        var COPLANAR = 0;\r\n        var FRONT = 1;\r\n        var BACK = 2;\r\n        var SPANNING = 3;\r\n\r\n        // Classify each point as well as the entire polygon into one of the above\r\n        // four classes.\r\n        var polygonType = 0;\r\n        var types = [];\r\n        for (var i = 0; i < polygon.vertices.length; i++) {\r\n            var t = this.normal.dot(polygon.vertices[i].pos) - this.w;\r\n            var type = (t < -Plane.EPSILON) ? BACK : (t > Plane.EPSILON) ? FRONT : COPLANAR;\r\n            polygonType |= type;\r\n            types.push(type);\r\n        }\r\n\r\n        // Put the polygon in the correct list, splitting it when necessary.\r\n        switch (polygonType) {\r\n        case COPLANAR:\r\n            (this.normal.dot(polygon.plane.normal) > 0 ? coplanarFront : coplanarBack).push(polygon);\r\n            break;\r\n        case FRONT:\r\n            front.push(polygon);\r\n            break;\r\n        case BACK:\r\n            back.push(polygon);\r\n            break;\r\n        case SPANNING:\r\n            var f = []\r\n              , b = [];\r\n            for (var i = 0; i < polygon.vertices.length; i++) {\r\n                var j = (i + 1) % polygon.vertices.length;\r\n                var ti = types[i]\r\n                  , tj = types[j];\r\n                var vi = polygon.vertices[i]\r\n                  , vj = polygon.vertices[j];\r\n                if (ti != BACK)\r\n                    f.push(vi);\r\n                if (ti != FRONT)\r\n                    b.push(ti != BACK ? vi.clone() : vi);\r\n                if ((ti | tj) == SPANNING) {\r\n                    var t = (this.w - this.normal.dot(vi.pos)) / this.normal.dot(vj.pos.minus(vi.pos));\r\n                    var v = vi.interpolate(vj, t);\r\n                    f.push(v);\r\n                    b.push(v.clone());\r\n                }\r\n            }\r\n            if (f.length >= 3)\r\n                front.push(new Polygon(f,polygon.shared));\r\n            if (b.length >= 3)\r\n                back.push(new Polygon(b,polygon.shared));\r\n            break;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// `Plane.EPSILON` is the tolerance used by `splitPolygon()` to decide if a\r\n// point is on the plane.\r\nPlane.EPSILON = 1e-5;\r\n\r\nPlane.fromPoints = function(a, b, c) {\r\n    var n = b.minus(a).cross(c.minus(a)).unit();\r\n    return new Plane(n,n.dot(a));\r\n}\r\n\r\n\r\n// # class Polygon\r\n\r\n// Represents a convex polygon. The vertices used to initialize a polygon must\r\n// be coplanar and form a convex loop. They do not have to be `Vertex`\r\n// instances but they must behave similarly (duck typing can be used for\r\n// customization).\r\n// \r\n// Each convex polygon has a `shared` property, which is shared between all\r\n// polygons that are clones of each other or were split from the same polygon.\r\n// This can be used to define per-polygon properties (such as surface color).\r\n\r\nclass Polygon {\r\n\r\n    constructor(vertices, shared) {\r\n        this.vertices = vertices;\r\n        this.shared = shared;\r\n        this.plane = Plane.fromPoints(vertices[0].pos, vertices[1].pos, vertices[2].pos);\r\n    }\r\n\r\n    clone() {\r\n        var vertices = this.vertices.map(function(v) {\r\n            return v.clone();\r\n        });\r\n        return new Polygon(vertices,this.shared);\r\n    }\r\n    flip() {\r\n        this.vertices.reverse().map(function(v) {\r\n            v.flip();\r\n        });\r\n        this.plane.flip();\r\n    }\r\n}\r\n\r\n// # class Node\r\n\r\n// Holds a node in a BSP tree. A BSP tree is built from a collection of polygons\r\n// by picking a polygon to split along. That polygon (and all other coplanar\r\n// polygons) are added directly to that node and the other polygons are added to\r\n// the front and/or back subtrees. This is not a leafy BSP tree since there is\r\n// no distinction between internal and leaf nodes.\r\n\r\nclass Node {\r\n    constructor(polygons) {\r\n        this.plane = null;\r\n        this.front = null;\r\n        this.back = null;\r\n        this.polygons = [];\r\n        if (polygons)\r\n            this.build(polygons);\r\n    }\r\n    clone() {\r\n        var node = new Node();\r\n        node.plane = this.plane && this.plane.clone();\r\n        node.front = this.front && this.front.clone();\r\n        node.back = this.back && this.back.clone();\r\n        node.polygons = this.polygons.map(function(p) {\r\n            return p.clone();\r\n        });\r\n        return node;\r\n    }\r\n\r\n    // Convert solid space to empty space and empty space to solid space.\r\n    invert() {\r\n        for (var i = 0; i < this.polygons.length; i++)\r\n            this.polygons[i].flip();\r\n        \r\n        this.plane.flip();\r\n        if (this.front)\r\n            this.front.invert();\r\n        if (this.back)\r\n            this.back.invert();\r\n        var temp = this.front;\r\n        this.front = this.back;\r\n        this.back = temp;\r\n    }\r\n\r\n    // Recursively remove all polygons in `polygons` that are inside this BSP\r\n    // tree.\r\n    clipPolygons(polygons) {\r\n        if (!this.plane)\r\n            return polygons.slice();\r\n        var front = []\r\n          , back = [];\r\n        for (var i = 0; i < polygons.length; i++) {\r\n            this.plane.splitPolygon(polygons[i], front, back, front, back);\r\n        }\r\n        if (this.front)\r\n            front = this.front.clipPolygons(front);\r\n        if (this.back)\r\n            back = this.back.clipPolygons(back);\r\n        else\r\n            back = [];\r\n        return front.concat(back);\r\n    }\r\n\r\n    // Remove all polygons in this BSP tree that are inside the other BSP tree\r\n    // `bsp`.\r\n    clipTo(bsp) {\r\n        this.polygons = bsp.clipPolygons(this.polygons);\r\n        if (this.front)\r\n            this.front.clipTo(bsp);\r\n        if (this.back)\r\n            this.back.clipTo(bsp);\r\n    }\r\n\r\n    // Return a list of all polygons in this BSP tree.\r\n    allPolygons() {\r\n        var polygons = this.polygons.slice();\r\n        if (this.front)\r\n            polygons = polygons.concat(this.front.allPolygons());\r\n        if (this.back)\r\n            polygons = polygons.concat(this.back.allPolygons());\r\n        return polygons;\r\n    }\r\n\r\n    // Build a BSP tree out of `polygons`. When called on an existing tree, the\r\n    // new polygons are filtered down to the bottom of the tree and become new\r\n    // nodes there. Each set of polygons is partitioned using the first polygon\r\n    // (no heuristic is used to pick a good split).\r\n    build(polygons) {\r\n        if (!polygons.length)\r\n            return;\r\n        if (!this.plane)\r\n            this.plane = polygons[0].plane.clone();\r\n        var front = []\r\n          , back = [];\r\n        for (var i = 0; i < polygons.length; i++) {\r\n            this.plane.splitPolygon(polygons[i], this.polygons, this.polygons, front, back);\r\n        }\r\n        if (front.length) {\r\n            if (!this.front)\r\n                this.front = new Node();\r\n            this.front.build(front);\r\n        }\r\n        if (back.length) {\r\n            if (!this.back)\r\n                this.back = new Node();\r\n            this.back.build(back);\r\n        }\r\n    }\r\n}\r\n\r\nCSG.fromGeometry=function(geom){\r\n    if(geom.isBufferGeometry)\r\n        geom = new THREE.Geometry().fromBufferGeometry(geom)\r\n    var fs = geom.faces;\r\n    var vs = geom.vertices;\r\n    var polys=[]\r\n    var fm=['a','b','c']\r\n    for(var i=0;i<fs.length;i++){\r\n        var f = fs[i];\r\n        var vertices=[]\r\n        for(var j=0;j<3;j++) vertices.push(new Vertex(vs[f[fm[j]]],f.vertexNormals[j],geom.faceVertexUvs[0][i][j]))\r\n        polys.push(new Polygon(vertices))\r\n    }\r\n    return CSG.fromPolygons(polys)\r\n}\r\nCSG._tmpm3 = new THREE.Matrix3();\r\nCSG.fromMesh=function(mesh){\r\n\r\n    var csg = CSG.fromGeometry(mesh.geometry)\r\n    CSG._tmpm3.getNormalMatrix(mesh.matrix);\r\n    for(var i=0;i<csg.polygons.length;i++){\r\n        var p = csg.polygons[i]\r\n        for(var j=0;j<p.vertices.length;j++){\r\n            var v=p.vertices[j]\r\n            v.pos.applyMatrix4(mesh.matrix);\r\n            v.normal.applyMatrix3(CSG._tmpm3);\r\n        }\r\n    }\r\n    return csg;\r\n}\r\n\r\nCSG.toMesh=function(csg,toMatrix){\r\n    var geom = new THREE.Geometry();\r\n    var ps = csg.polygons;\r\n    var vs = geom.vertices;\r\n    var fvuv = geom.faceVertexUvs[0]\r\n    for(var i=0;i<ps.length;i++){\r\n        var p = ps[i]\r\n        var pvs=p.vertices;\r\n        var v0=vs.length;\r\n        var pvlen=pvs.length\r\n        \r\n        for(var j=0;j<pvlen;j++)\r\n            vs.push(new THREE.Vector3().copy(pvs[j].pos))\r\n\r\n\r\n        for(var j=3;j<=pvlen;j++){\r\n            var fc = new THREE.Face3();\r\n            var fuv = []\r\n            fvuv.push(fuv)\r\n            var fnml = fc.vertexNormals;\r\n            fc.a=v0;\r\n            fc.b=v0+j-2;\r\n            fc.c=v0+j-1;\r\n\r\n            fnml.push(new THREE.Vector3().copy(pvs[0].normal))\r\n            fnml.push(new THREE.Vector3().copy(pvs[j-2].normal))\r\n            fnml.push(new THREE.Vector3().copy(pvs[j-1].normal))\r\n            fuv.push(new THREE.Vector3().copy(pvs[0].uv))\r\n            fuv.push(new THREE.Vector3().copy(pvs[j-2].uv))\r\n            fuv.push(new THREE.Vector3().copy(pvs[j-1].uv))\r\n\r\n            fc.normal = new THREE.Vector3().copy(p.plane.normal)\r\n            geom.faces.push(fc)\r\n        }\r\n    }\r\n    var inv = new THREE.Matrix4().getInverse(toMatrix);\r\n    geom.applyMatrix4(inv);\r\n    geom.verticesNeedUpdate = geom.elementsNeedUpdate = geom.normalsNeedUpdate = true;\r\n    geom.computeBoundingSphere();\r\n    geom.computeBoundingBox();\r\n    var m = new THREE.Mesh(geom);\r\n    m.matrix.copy(toMatrix);\r\n    m.matrix.decompose(m.position,m.rotation,m.scale)\r\n    m.updateMatrixWorld();\r\n    return m\r\n}\r\n\r\n\r\nCSG.ieval=function(tokens,index=0){\r\n    if(typeof tokens === 'string')\r\n        CSG.currentOp=tokens;\r\n    else if(tokens instanceof Array){\r\n        for(let i=0;i<tokens.length;i++)CSG.ieval(tokens[i],0);\r\n    }else if(typeof tokens==='object'){\r\n        var op=CSG.currentOp;\r\n        tokens.updateMatrix();\r\n        tokens.updateMatrixWorld();\r\n        if(!CSG.sourceMesh)\r\n            CSG.currentPrim =  CSG.fromMesh(CSG.sourceMesh = tokens);\r\n        else{\r\n            CSG.nextPrim = CSG.fromMesh(tokens);\r\n            CSG.currentPrim = CSG.currentPrim[op](CSG.nextPrim);\r\n        }\r\n        if(CSG.doRemove)tokens.parent.remove(tokens);\r\n    }//union,subtract,intersect,inverse\r\n}\r\n\r\nCSG.eval=function(tokens,doRemove){//[['add',mesh,mesh,mesh,mesh],['sub',mesh,mesh,mesh,mesh]]\r\n    CSG.currentOp=null;\r\n    CSG.sourceMesh=null;\r\n    CSG.doRemove=doRemove;\r\n    CSG.ieval(tokens)\r\n    var result = CSG.toMesh( CSG.currentPrim, CSG.sourceMesh.matrix );\r\n    result.material = CSG.sourceMesh.material;\r\n    result.castShadow  = result.receiveShadow = true;\r\n    return result;\r\n}\r\n\r\nexport default CSG\r\n// Return a new CSG solid representing space in either this solid or in the\r\n// solid `csg`. Neither this solid nor the solid `csg` are modified.\r\n// \r\n//     A.union(B)\r\n// \r\n//     +-------+            +-------+\r\n//     |       |            |       |\r\n//     |   A   |            |       |\r\n//     |    +--+----+   =   |       +----+\r\n//     +----+--+    |       +----+       |\r\n//          |   B   |            |       |\r\n//          |       |            |       |\r\n//          +-------+            +-------+\r\n// \r\n// Return a new CSG solid representing space in this solid but not in the\r\n// solid `csg`. Neither this solid nor the solid `csg` are modified.\r\n// \r\n//     A.subtract(B)\r\n// \r\n//     +-------+            +-------+\r\n//     |       |            |       |\r\n//     |   A   |            |       |\r\n//     |    +--+----+   =   |    +--+\r\n//     +----+--+    |       +----+\r\n//          |   B   |\r\n//          |       |\r\n//          +-------+\r\n// \r\n// Return a new CSG solid representing space both this solid and in the\r\n// solid `csg`. Neither this solid nor the solid `csg` are modified.\r\n// \r\n//     A.intersect(B)\r\n// \r\n//     +-------+\r\n//     |       |\r\n//     |   A   |\r\n//     |    +--+----+   =   +--+\r\n//     +----+--+    |       +--+\r\n//          |   B   |\r\n//          |       |\r\n//          +-------+\r\n// \r\n","// @ts-expect-error ts-migrate(7016) FIXME: Could not find a declaration file for module '../.... Remove this comment to see the full error message\r\nimport CSG from '../../../libs/CSGMesh.js';\r\n\r\nfunction applyBoolDifferences(baseMesh: any, clipMeshes: any) {\r\n  preventCoplanarSurfaces(baseMesh);\r\n  let operand1 = CSG.fromMesh(baseMesh);\r\n  for (let i = 0; i < clipMeshes.length; i++) {\r\n    const clipMesh = clipMeshes[i];\r\n    clipMesh.updateMatrix();\r\n    const operand2 = CSG.fromMesh(clipMesh);\r\n    operand1 = subtractVolume(operand1, operand2, baseMesh, clipMesh);\r\n  }\r\n  return operand1;\r\n}\r\n\r\n//Ugly, but avoids crashes of CSG operations due to face superpositions\r\nfunction preventCoplanarSurfaces(baseMesh: any) {\r\n  const factor = 0.99999;\r\n  baseMesh.scale.x *= factor;\r\n  baseMesh.scale.y *= factor;\r\n  baseMesh.scale.z *= factor;\r\n  baseMesh.updateMatrix();\r\n}\r\n\r\n//Sometimes (uncommon) the CSG library fails and swaps the functionality of subtract and intersects\r\n//This rectifies the result if it is an intersection instead of a subtraction\r\nfunction subtractVolume(operand1: any, operand2: any, baseMesh: any, clippingMesh: any) {\r\n  const result = operand1.subtract(operand2);\r\n  const resultMesh = CSG.toMesh(result, baseMesh.matrix);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const boundingBox1 = new THREE.Box3().setFromObject(resultMesh);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const boundingBox2 = new THREE.Box3().setFromObject(clippingMesh);\r\n  if (areBoundingBoxesEqual(boundingBox1, boundingBox2)) return operand1.intersect(operand2);\r\n  return result;\r\n}\r\n\r\nfunction areBoundingBoxesEqual(boundingBox1: any, boundingBox2: any) {\r\n  return (\r\n    isPointEqual(boundingBox1.max, boundingBox2.max, 2) &&\r\n    isPointEqual(boundingBox1.min, boundingBox2.min, 2)\r\n  );\r\n}\r\n\r\nfunction isPointEqual(point1: any, point2: any, precission: any) {\r\n  return (\r\n    point1.x.toFixed(precission) == point2.x.toFixed(precission) &&\r\n    point1.y.toFixed(precission) == point2.y.toFixed(precission) &&\r\n    point1.z.toFixed(precission) == point2.z.toFixed(precission)\r\n  );\r\n}\r\n\r\nexport { applyBoolDifferences };\r\n","import { applyTransformsToGeometry } from '../../geometry-transformer/local-transform-applier.js';\r\nimport { getMappedGeometry } from '../geometry-map.js';\r\nimport { createClippingBox } from '../three-geometry/three-clipping.js';\r\nimport { mainObject } from '../../scene/mainObject.js';\r\n// @ts-expect-error ts-migrate(7016) FIXME: Could not find a declaration file for module '../.... Remove this comment to see the full error message\r\nimport CSG from '../../../../libs/CSGMesh.js';\r\nimport { createExtrusionsByPoints } from '../three-geometry/three-extrusion.js';\r\nimport { ifcTypes } from '../../../utils/ifc-types.js';\r\nimport { namedProps as n, typeValue as t } from '../../../utils/global-constants.js';\r\nimport { applyBoolDifferences } from '../../geometry-operator/boolean-difference.js';\r\n\r\n// @ts-expect-error ts-migrate(7023) FIXME: 'mapClipping' implicitly has return type 'any' bec... Remove this comment to see the full error message\r\nfunction mapClipping(shape: any, product: any) {\r\n  const { clippingReps, bodyRep } = getClippingRepresentations(shape);\r\n  // @ts-expect-error ts-migrate(7022) FIXME: 'mainGeometry' implicitly has type 'any' because i... Remove this comment to see the full error message\r\n  const mainGeometry = getMappedGeometry(bodyRep, product);\r\n  const clippingGeometries = createClippingVolumes(clippingReps);\r\n  const booleanResult = applyBoolDifferences(mainGeometry, clippingGeometries);\r\n  return generateResultMesh(booleanResult, mainGeometry, clippingGeometries);\r\n}\r\n\r\nfunction generateResultMesh(booleanResult: any, mainGeometry: any, clippingGeometries: any) {\r\n  const result = CSG.toMesh(booleanResult, mainGeometry.matrix);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  result.geometry = new THREE.BufferGeometry().fromGeometry(result.geometry);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  result.material = new THREE.MeshPhongMaterial();\r\n  mainObject.remove(mainGeometry);\r\n  clippingGeometries.forEach((clippingGeo: any) => mainObject.remove(clippingGeo));\r\n  return result;\r\n}\r\n\r\nfunction getClippingRepresentations(shape: any) {\r\n  const clippingReps = [];\r\n  let bodyRep = shape[n.items][0];\r\n  while (bodyRep[n.ifcClass] == 'IfcBooleanClippingResult') {\r\n    clippingReps.push(bodyRep[n.secondOperand]);\r\n    bodyRep = bodyRep[n.firstOperand];\r\n  }\r\n  return { clippingReps, bodyRep };\r\n}\r\n\r\nfunction createClippingVolumes(clippingRepresentations: any) {\r\n  const clippingGeometries: any = [];\r\n  clippingRepresentations.forEach((clippingRep: any) => clippingGeometries.push(createClippingVolume(clippingRep))\r\n  );\r\n  return clippingGeometries;\r\n}\r\n\r\nfunction createClippingVolume(clippingRep: any) {\r\n  if (clippingRep[n.ifcClass].toUpperCase() === ifcTypes.IfcHalfSpaceSolid)\r\n    return mapIfcHalfSpaceSolid(clippingRep);\r\n  return mapIfcPolygonalBoundedHalfSpace(clippingRep);\r\n}\r\n\r\nfunction mapIfcHalfSpaceSolid(clippingRep: any) {\r\n  let orientation = clippingRep[n.agreementFlag];\r\n  if (typeof orientation != 'boolean') orientation = orientation.value;\r\n  const clippingGeom = createClippingBox(orientation);\r\n  const position = clippingRep[n.baseSurface][n.position];\r\n  applyTransformsToGeometry(clippingGeom, position);\r\n  return clippingGeom;\r\n}\r\n\r\nfunction mapIfcPolygonalBoundedHalfSpace(clippingRep: any) {\r\n  const clippingGeom = mapIfcHalfSpaceSolid(clippingRep);\r\n  const boundingGeom = getBoundingGeometry(clippingRep);\r\n  const result = applyBoundingToGeometry(clippingGeom, boundingGeom);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  result.geometry = new THREE.BufferGeometry().fromGeometry(result.geometry);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  result.material = new THREE.MeshPhongMaterial();\r\n  mainObject.remove(clippingGeom);\r\n  mainObject.remove(boundingGeom);\r\n  result.add(clippingGeom);\r\n  return result;\r\n}\r\n\r\nfunction applyBoundingToGeometry(clippingGeom: any, boundingGeom: any) {\r\n  let bspA = CSG.fromMesh(clippingGeom);\r\n  let bspB = CSG.fromMesh(boundingGeom);\r\n  let geomResult = bspA.intersect(bspB);\r\n  return CSG.toMesh(geomResult, clippingGeom.matrix);\r\n}\r\n\r\nfunction getBoundingGeometry(clippingRep: any) {\r\n  const points = getBoundingPoints(clippingRep);\r\n  // @ts-expect-error ts-migrate(2554) FIXME: Expected 4 arguments, but got 2.\r\n  const boundingGeom = createExtrusionsByPoints(points, 1000000);\r\n  const boundPosition = clippingRep[n.position];\r\n  applyTransformsToGeometry(boundingGeom, boundPosition);\r\n  boundingGeom.position.z -= 500000;\r\n  boundingGeom.updateMatrix();\r\n  return boundingGeom;\r\n}\r\n\r\nfunction getBoundingPoints(clippingRep: any) {\r\n  return clippingRep[n.polygonalBoundary][n.points].map((point: any) => {\r\n    const coords = point[n.coordinates];\r\n    return [-coords[0], -coords[1]];\r\n  });\r\n}\r\n\r\nexport { mapClipping };\r\n","import { namedProps as n } from '../../../utils/global-constants.js';\r\n\r\nfunction mapBoundingBox(shape: any) {\r\n  const representation = shape[n.items][0];\r\n  const dims = getBoundingBoxDimensions(representation);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const boundingBox = new THREE.BoxGeometry(dims.x, dims.y, dims.z);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const mesh = new THREE.Mesh(boundingBox);\r\n  setBoundingBoxPosition(mesh, representation, dims);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  return new THREE.Object3D();\r\n}\r\n\r\nfunction setBoundingBoxPosition(mesh: any, representation: any, dims: any) {\r\n  const bottomLeftCorner = representation[n.corner][n.coordinates];\r\n  mesh.position.set(bottomLeftCorner[0], bottomLeftCorner[1], bottomLeftCorner[2]);\r\n  mesh.position.x += dims.x / 2;\r\n  mesh.position.y += dims.y / 2;\r\n  mesh.position.z += dims.z / 2;\r\n}\r\n\r\nfunction getBoundingBoxDimensions(representation: any) {\r\n  return {\r\n    x: representation[n.xDim],\r\n    y: representation[n.yDim],\r\n    z: representation[n.zDim]\r\n  };\r\n}\r\n\r\nexport { mapBoundingBox };\r\n","import { namedProps as n } from '../../../utils/global-constants.js';\r\n\r\nfunction mapAnnotation(shape: any) {\r\n    //TODO\r\n  console.log(\"TODO:\", shape);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  return new THREE.Object3D();\r\n}\r\n\r\nexport { mapAnnotation };\r\n","import { namedProps as n, geometryTypes as g, structuredData as s } from '../../utils/global-constants.js';\r\nimport { mapCurve2D } from './curves/curve.js';\r\nimport { mapExtrudedAreaSolid, mapSweptSolid } from './ifc-geometry/ifc-swept-solid.js';\r\nimport { mapMappedRepresentation } from './ifc-geometry/ifc-mapped-representation.js';\r\nimport { mapBrep, mapSurfaceModel } from './ifc-geometry/ifc-brep.js';\r\nimport { mapGeometricSet } from './ifc-geometry/ifc-geometric-set.js';\r\nimport { mapClipping } from './ifc-geometry/ifc-clipping.js';\r\nimport { mapBoundingBox } from './ifc-geometry/ifc-bounding-box.js';\r\nimport { mapAnnotation } from './ifc-geometry/ifc-annotation.js';\r\n\r\nfunction constructGeometries(structured: any) {\r\n  structured[s.products].forEach((product: any) => constructGeometry(product));\r\n  structured[s.spaces].forEach((space: any) => constructGeometry(space));\r\n}\r\n\r\nfunction constructGeometry(item: any) {\r\n  try {\r\n    getRepresentations(item);\r\n    mapRepresentations(item);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\nfunction getRepresentations(product: any) {\r\n  getRepresentationValue(product);\r\n  getRepresentationOfItem(product[n.hasOpenings]);\r\n  getRepresentationOfItem(product[n.hasSpatial]);\r\n}\r\n\r\nfunction getRepresentationOfItem(items: any) {\r\n  if (items) items.forEach((item: any) => getRepresentationValue(item));\r\n}\r\n\r\nfunction getRepresentationValue(product: any) {\r\n  try {\r\n    const representations = product[n.representation][n.representations];\r\n    product[n.geomRepresentations] = representations ? representations : [];\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\nfunction mapRepresentations(product: any) {\r\n  mapProductRepresentations(product);\r\n  mapRepresentationsOfItems(product[n.hasOpenings]);\r\n  mapRepresentationsOfItems(product[n.hasSpatial]);\r\n}\r\n\r\nfunction mapRepresentationsOfItems(items: any) {\r\n  if (items) items.forEach((item: any) => mapProductRepresentations(item));\r\n}\r\n\r\nfunction mapProductRepresentations(product: any) {\r\n  product[n.geometry] = [];\r\n  product[n.geomRepresentations].forEach((representation: any) => {\r\n    const generatedGeometry = getMappedGeometry(representation, product);\r\n    generatedGeometry._Data = product;\r\n    product[n.geometry].push(generatedGeometry);\r\n  }\r\n  );\r\n}\r\n\r\n// @ts-expect-error ts-migrate(7022) FIXME: 'geometryMap' implicitly has type 'any' because it... Remove this comment to see the full error message\r\nconst geometryMap = {\r\n  [g.curve2D]: mapCurve2D,\r\n  [g.sweptSolid]: mapSweptSolid,\r\n  [g.mappedRepresentation]: mapMappedRepresentation,\r\n  [g.brep]: mapBrep,\r\n  [g.geometricSet]: mapGeometricSet,\r\n  [g.clipping]: mapClipping,\r\n  [g.extrudedAreaSolid]: mapExtrudedAreaSolid,\r\n  [g.surfaceModel]: mapSurfaceModel,\r\n  [g.boundingBox]: mapBoundingBox,\r\n  [g.annotation2D]: mapAnnotation\r\n};\r\n\r\n// @ts-expect-error ts-migrate(7023) FIXME: 'getMappedGeometry' implicitly has return type 'an... Remove this comment to see the full error message\r\nfunction getMappedGeometry(representation: any, product: any) {\r\n  const type = getType(representation);\r\n  try {\r\n    return geometryMap[type](representation, product);\r\n  } catch (e) {\r\n    console.warn(`Error with item ${product[n.ifcClass]} of type ${type}: ${e}`);\r\n  }\r\n}\r\n\r\nfunction getType(representation: any) {\r\n  const type = representation[n.representationType];\r\n  return type ? type : representation[n.ifcClass];\r\n}\r\n\r\n\r\nexport { constructGeometries, getMappedGeometry };\r\n","import { mainObject } from '../scene/mainObject.js';\r\n// @ts-expect-error ts-migrate(7016) FIXME: Could not find a declaration file for module '../.... Remove this comment to see the full error message\r\nimport CSG from '../../../libs/CSGMesh.js';\r\nimport { structuredData as s, namedProps as n } from '../../utils/global-constants.js';\r\nimport { applyBoolDifferences } from './boolean-difference.js';\r\n\r\nfunction subtractOpenings(structured: any) {\r\n  structured[s.products].forEach((product: any) => {\r\n    try {\r\n      if (product[n.hasOpenings]) applyBooleanOperation(product);\r\n    } catch (e) {\r\n      console.warn('Error with CSG operations with: ', product, e);\r\n    }\r\n  });\r\n}\r\n\r\nfunction applyBooleanOperation(product: any) {\r\n  for (let i = 0; i < product[n.geometry].length; i++) {\r\n    const geometryItem = product[n.geometry][i];\r\n    if (geometryItem.type === 'Mesh' && !geometryItem[n.isBrep])\r\n      product[n.geometry][i] = applyBooleanOperationOnMesh(product, geometryItem);\r\n  }\r\n}\r\n\r\nfunction applyBooleanOperationOnMesh(product: any, geometry: any) {\r\n  const openings = getOpenings(product);\r\n  const resultGeom = applyBoolDifferences(geometry, openings);\r\n  const result = CSG.toMesh(resultGeom, geometry.matrix);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  result.geometry = new THREE.BufferGeometry().fromGeometry(result.geometry);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  result.material = new THREE.MeshPhongMaterial();\r\n  addResultToScene(geometry, openings, result);\r\n  return result;\r\n}\r\n\r\nfunction addResultToScene(geometryItem: any, openings: any, result: any) {\r\n  result._Data = geometryItem._Data; //Reference to parsed IFC information\r\n  result.attach(...openings);\r\n  result.attach(...geometryItem.children);\r\n  mainObject.add(result);\r\n  mainObject.remove(geometryItem);\r\n}\r\n\r\nfunction getOpenings(product: any) {\r\n  const openingsReps = product[n.hasOpenings];\r\n  const openings = [];\r\n  for (let i = 0; i < openingsReps.length; i++) openings.push(openingsReps[i][n.geometry][0]);\r\n  return openings;\r\n}\r\n\r\nexport { subtractOpenings };\r\n","import { ifcTypes as t } from '../../utils/ifc-types.js';\r\nimport { getTransformOfGeometry } from '../geometry-transformer/local-transform-tracker.js';\r\n\r\nfunction getMaterial(ifcType: any) {\r\n  try {\r\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n    return materialsMap[t[ifcType]].material;\r\n  } catch (e) {\r\n    console.warn(`The type ${ifcType} doesn't have a material implemented.`);\r\n  }\r\n}\r\n\r\nfunction getLineColor(ifcType: any) {\r\n  try{\r\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n    return materialsMap[t[ifcType]].lineColor;\r\n  } catch {\r\n    return materialsMap[t.IfcWall];\r\n  }\r\n}\r\n\r\nfunction getDiffuseMat(color: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  return new THREE.MeshLambertMaterial({\r\n    ...getBaseSettings(color)\r\n  });\r\n}\r\n\r\nfunction getBasicMaterial(color: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  return new THREE.MeshBasicMaterial({\r\n    ...getBaseSettings(color)\r\n  });\r\n}\r\n\r\nfunction getTransparentMat(color: any, opacity = 0.2) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  return new THREE.MeshBasicMaterial({\r\n    ...getBaseSettings(color),\r\n    opacity: opacity,\r\n    transparent: true,\r\n    depthWrite: false\r\n  });\r\n}\r\n\r\nfunction getBaseSettings(color: any) {\r\n  return {\r\n    color: color,\r\n    side: 2,\r\n    polygonOffset: true,\r\n    polygonOffsetFactor: 1,\r\n    polygonOffsetUnits: 1\r\n  };\r\n}\r\n\r\nconst colors = {\r\n  black: 0x000000,\r\n  brown: 0xc2893a,\r\n  red: 0xff0000,\r\n  grey: 0x606060,\r\n  darkBrown: 0x5c3d1e,\r\n  darkBlue: 0x23395d,\r\n  lightBlue: 0xadd8e6,\r\n  white: 0xffffff\r\n};\r\n\r\nconst materialsMap = {\r\n  [t.IfcWall]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.grey\r\n  },\r\n  [t.IfcWallStandardCase]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.grey\r\n  },\r\n  [t.IfcSite]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.grey\r\n  },\r\n  [t.IfcSlab]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.grey\r\n  },\r\n  [t.IfcCovering]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.grey\r\n  },\r\n  [t.IfcRoof]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.grey\r\n  },\r\n  [t.IfcEquipmentElement]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.grey\r\n  },\r\n  [t.IfcFurnishingElement]: {\r\n    // @ts-expect-error ts-migrate(2554) FIXME: Expected 1 arguments, but got 2.\r\n    material: getDiffuseMat(colors.white, 0),\r\n    lineColor: colors.darkBrown\r\n  },\r\n  [t.IfcDoor]: {\r\n    material: getDiffuseMat(colors.brown),\r\n    lineColor: colors.darkBrown\r\n  },\r\n  [t.IfcRailing]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.darkBrown\r\n  },\r\n  [t.IfcColumn]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.darkBrown\r\n  },\r\n  [t.IfcStair]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.darkBrown\r\n  },\r\n  [t.IfcStairFlight]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.darkBrown\r\n  },\r\n  [t.IfcPlate]: {\r\n    material: getTransparentMat(colors.lightBlue, 0.2),\r\n    lineColor: colors.darkBlue\r\n  },\r\n  [t.IfcMember]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.darkBrown\r\n  },\r\n  [t.IfcFlowTerminal]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.grey\r\n  },\r\n  [t.IfcWindow]: {\r\n    material: getTransparentMat(colors.lightBlue, 0.2),\r\n    lineColor: colors.darkBlue\r\n  },\r\n  [t.IfcSpace]: {\r\n    material: getTransparentMat(colors.lightBlue, 0),\r\n    lineColor: colors.black\r\n  },\r\n  [t.IfcOpeningElement]: {\r\n    material: getTransparentMat(colors.lightBlue, 0),\r\n    lineColor: colors.black\r\n  },\r\n  [t.IfcBuildingElementProxy]: {\r\n    material: getDiffuseMat(colors.white),\r\n    lineColor: colors.darkBrown\r\n  },\r\n};\r\n\r\nexport { getMaterial, getLineColor };\r\n","import { getMaterial, getLineColor } from './materials-map.js';\r\nimport { namedProps as n, structuredData as s } from '../../utils/global-constants.js';\r\n\r\nfunction applyMaterials(structured: any) {\r\n  applyMaterialOnSpaces(structured);\r\n  structured[s.products].forEach((product: any) => {\r\n    applyMaterialOnMesh(product);\r\n    applyMaterialOnOpenings(product);\r\n    applyMaterialOnSubElements(product);\r\n  });\r\n}\r\n\r\nfunction applyMaterialOnSpaces(structured: any) {\r\n  structured[s.spaces].forEach((space: any) => space[n.geometry].forEach((item: any) => getMeshMaterial(item, space[n.ifcClass]))\r\n  );\r\n}\r\n\r\nfunction applyMaterialOnMesh(product: any) {\r\n  product[n.geometry].forEach((item: any) => {\r\n      getMeshMaterial(item, product[n.ifcClass]);\r\n  });\r\n}\r\n\r\nfunction applyMaterialOnOpenings(product: any) {\r\n  applyMaterialOnItem(product[n.hasOpenings]);\r\n}\r\n\r\nfunction applyMaterialOnSubElements(product: any) {\r\n  applyMaterialOnItem(product[n.hasSpatial]);\r\n}\r\n\r\nfunction getMeshMaterial(item: any, ifcType: any) {\r\n  if (item.type === 'Mesh') item.material = getMaterial(ifcType);\r\n  if (item.material && item.material.transparent === true) item.renderOrder = 1;\r\n}\r\n\r\nfunction applyMaterialOnItem(items: any) {\r\n  if (items)\r\n    items.forEach((prop: any) => {\r\n      const mesh = prop[n.geometry][0];\r\n      mesh.material = getMaterial(prop[n.ifcClass]);\r\n    });\r\n}\r\n\r\nexport { applyMaterials, getLineColor };\r\n","import { getLineColor } from './materials-map.js';\r\nimport { namedProps as n, structuredData as s } from '../../utils/global-constants.js';\r\n\r\nfunction drawEdges(structured: any) {\r\n  structured[s.products].forEach((product: any) => {\r\n    generateEdgesOnProduct(product);\r\n    generateEdgesOnItems(product[n.hasSpatial]);\r\n    generateEdgesOnItems(product[n.hasOpenings]);\r\n  });\r\n}\r\n\r\nfunction generateEdgesOnProduct(product: any) {\r\n  product[n.geometry].forEach((item: any) => {\r\n    const ifcClass = product[n.ifcClass];\r\n    if (item.type === 'Mesh' && ifcClass) createEdgesOfItem(ifcClass, item);\r\n  });\r\n}\r\n\r\nfunction generateEdgesOnItems(items: any) {\r\n  if (items)\r\n    items.forEach((item: any) => item[n.geometry].forEach((geometry: any) => createEdgesOfItem(item[n.ifcClass], geometry))\r\n    );\r\n}\r\n\r\nfunction createEdgesOfItem(ifcClass: any, item: any) {\r\n  const lineColor = getLineColor(ifcClass);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const geometry = new THREE.EdgesGeometry(item.geometry);\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const material = new THREE.LineBasicMaterial({ color: lineColor });\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const wireframe = new THREE.LineSegments(geometry, material);\r\n  item.add(wireframe);\r\n}\r\n\r\nexport { drawEdges };\r\n","import { mainObject } from '../scene/mainObject.js';\r\nimport { namedProps as n, structuredData as s } from '../../utils/global-constants.js';\r\n\r\nfunction applyScale(structured: any) {\r\n  const units = structured[s.units][n.units];\r\n  const scale = getUnitScale(units);\r\n  if (scale === 1) return;\r\n  applyScaleOnItems(scale, structured);\r\n}\r\n\r\nfunction applyScaleOnItems(scale: any, structured: any) {\r\n  // @ts-expect-error ts-migrate(2304) FIXME: Cannot find name 'THREE'.\r\n  const axis = new THREE.Object3D();\r\n  mainObject.add(axis);\r\n  const geometries = getALlGeometries(structured);\r\n  // @ts-expect-error ts-migrate(7006) FIXME: Parameter 'geometry' implicitly has an 'any' type.\r\n  geometries.forEach((geometry) => {\r\n    axis.attach(geometry);\r\n    axis.scale.set(scale, scale, scale);\r\n    mainObject.attach(geometry);\r\n    axis.scale.set(1, 1, 1);\r\n  });\r\n}\r\n\r\nfunction getALlGeometries(structured: any) {\r\n  const allGeometry: any = [];\r\n  structured[s.products].forEach((product: any) => getGeometry(product, allGeometry));\r\n  return allGeometry;\r\n}\r\n\r\nfunction getGeometry(product: any, allGeometry: any) {\r\n  allGeometry.push(...product[n.geometry]);\r\n  if (product[n.hasSpatial])\r\n    product[n.hasSpatial].forEach((spatial: any) => getGeometry(spatial, allGeometry));\r\n}\r\n\r\nfunction getUnitScale(units: any) {\r\n  const lengthUnit = units.filter((unitType: any) => {\r\n    return unitType[n.unitType] === 'LENGTHUNIT';\r\n  })[0];\r\n  const prefix = lengthUnit[n.prefix];\r\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\r\n  return unitMap[prefix];\r\n}\r\n\r\nconst unitMap = {\r\n  EXA:   100000000,\r\n  PETA:  10000000,\r\n  TERA:  1000000,\r\n  GIGA:  100000,\r\n  MEGA:  10000,\r\n  KILO:  1000,\r\n  HECTO: 100,\r\n  DECA:  10,\r\n  $:     1,\r\n  DECI:  0.1,\r\n  CENTI: 0.01,\r\n  MILLI: 0.001,\r\n  MICRO: 0.0001,\r\n  NANO:  0.00001,\r\n  PICO:  0.000001,\r\n  FEMTO: 0.0000001,\r\n  ATTO:  0.00000001\r\n};\r\n\r\nexport { applyScale };\r\n","import { applyTransformations } from './geometry-transformer/transformation.js';\r\nimport { constructGeometries } from './geometry-generator/geometry-map.js';\r\nimport { subtractOpenings } from './geometry-operator/openings-subtractor.js';\r\nimport { applyMaterials } from './scene/materials.js';\r\nimport { drawEdges } from './scene/edges.js';\r\nimport { applyScale } from './geometry-transformer/units-applier.js';\r\n\r\nfunction buildGeometry(structured: any) {\r\n  console.log(structured);\r\n  constructGeometries(structured);\r\n  applyTransformations(structured);\r\n  drawEdges(structured);\r\n  subtractOpenings(structured);\r\n  applyMaterials(structured);\r\n  applyScale(structured);\r\n  return structured;\r\n}\r\n\r\nexport { buildGeometry };\r\n","import { loadIfcFileItems } from \"./ifc-parser/ifc-services/ifc-processor.js\";\r\nimport { constructProject } from \"./ifc-project-builder/ifc-structure-builder.js\";\r\nimport { buildGeometry } from \"./ifc-to-three.js/converter.js\";\r\n\r\nfunction loadIfc(ifcData: any) {\r\n  const loaded = loadIfcFileItems(ifcData);\r\n  const structured = constructProject(loaded);\r\n  return buildGeometry(structured);\r\n}\r\n\r\nexport { loadIfc };\r\n"],"names":["n","t","d","p","v","counter","i","s","def","pivots","applyTransform","getTransforms","getPoints","g","getGeometry"],"mappings":";;;IAAA,MAAM,UAAU,GAAG;QACjB,aAAa,EAAE,eAAe;QAC9B,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,OAAO;QACd,KAAK,EAAE,OAAO;QACd,KAAK,EAAE,OAAO;QACd,WAAW,EAAE,aAAa;QAC1B,UAAU,EAAE,YAAY;QACxB,KAAK,EAAE,OAAO;QACd,MAAM,EAAE,QAAQ;QAChB,QAAQ,EAAE,UAAU;QACpB,WAAW,EAAE,aAAa;QAC1B,MAAM,EAAE,QAAQ;QAChB,KAAK,EAAE,OAAO;QACd,SAAS,EAAE,iBAAiB;QAC5B,QAAQ,EAAE,UAAU;QACpB,YAAY,EAAE,mBAAmB;QACjC,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,WAAW;QACtB,YAAY,EAAE,cAAc;QAC5B,QAAQ,EAAE,WAAW;QACrB,mBAAmB,EAAE,0BAA0B;QAC/C,mBAAmB,EAAE,sBAAsB;QAC3C,WAAW,EAAE,cAAc;QAC3B,WAAW,EAAE,cAAc;QAC3B,UAAU,EAAE,uBAAuB;QACnC,OAAO,EAAE,UAAU;QACnB,QAAQ,EAAE,WAAW;QACrB,WAAW,EAAE,aAAa;QAC1B,MAAM,EAAE,SAAS;QACjB,KAAK,EAAE,OAAO;QACd,QAAQ,EAAE,UAAU;QACpB,WAAW,EAAE,aAAa;QAC1B,aAAa,EAAE,gBAAgB;QAC/B,oBAAoB,EAAE,uBAAuB;QAC7C,aAAa,EAAE,eAAe;QAC9B,aAAa,EAAE,eAAe;QAC9B,eAAe,EAAE,iBAAiB;QAClC,QAAQ,EAAE,UAAU;QACpB,WAAW,EAAE,aAAa;QAC1B,KAAK,EAAE,OAAO;QACd,UAAU,EAAE,YAAY;QACxB,WAAW,EAAE,aAAa;QAC1B,MAAM,EAAE,QAAQ;QAChB,cAAc,EAAE,gBAAgB;QAChC,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,SAAS;QAClB,iBAAiB,EAAE,mBAAmB;QACtC,QAAQ,EAAE,UAAU;QACpB,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,SAAS;QAClB,MAAM,EAAE,QAAQ;QAChB,YAAY,EAAE,cAAc;QAC5B,sBAAsB,EAAE,wBAAwB;QAChD,eAAe,EAAE,iBAAiB;QAClC,cAAc,EAAE,gBAAgB;QAChC,qBAAqB,EAAE,uBAAuB;QAC9C,uBAAuB,EAAE,yBAAyB;QAClD,cAAc,EAAE,gBAAgB;QAChC,sBAAsB,EAAE,wBAAwB;QAChD,iBAAiB,EAAE,mBAAmB;QACtC,YAAY,EAAE,cAAc;QAC5B,iBAAiB,EAAE,mBAAmB;QACtC,cAAc,EAAE,gBAAgB;QAChC,eAAe,EAAE,iBAAiB;QAClC,kBAAkB,EAAE,oBAAoB;QACxC,KAAK,EAAE,OAAO;QACd,aAAa,EAAE,eAAe;QAC9B,QAAQ,EAAE,UAAU;QACpB,cAAc,EAAE,gBAAgB;QAChC,SAAS,EAAE,WAAW;QACtB,SAAS,EAAE,WAAW;QACtB,SAAS,EAAE,WAAW;QACtB,SAAS,EAAE,iBAAiB;QAC5B,KAAK,EAAE,OAAO;QACd,KAAK,EAAE,OAAO;QACd,YAAY,EAAE,eAAe;QAC7B,SAAS,EAAE,WAAW;QACtB,KAAK,EAAE,OAAO;QACd,QAAQ,EAAE,UAAU;QACpB,aAAa,EAAE,eAAe;QAC9B,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,MAAM;KACb,CAAC;IAEF,MAAM,iBAAiB,GAAG;QACxB,SAAS,EAAE,WAAW;QACtB,IAAI,EAAE,MAAM;QACZ,UAAU,EAAE,YAAY;KACzB,CAAC;IAEF,MAAM,SAAS,GAAG;QAChB,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,OAAO;KACf,CAAC;IAEF,MAAM,aAAa,GAAG;QACpB,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,SAAS;KAChB,CAAA;IAED,MAAM,YAAY,GAAG;QACnB,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,cAAc;KAC7B,CAAC;IAEF,MAAM,aAAa,GAAG;QACpB,YAAY,EAAE,cAAc;QAC5B,OAAO,EAAE,SAAS;QAClB,UAAU,EAAE,YAAY;QACxB,oBAAoB,EAAE,sBAAsB;QAC5C,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,cAAc;QAC5B,QAAQ,EAAE,UAAU;QACpB,iBAAiB,EAAE,sBAAsB;QACzC,YAAY,EAAE,cAAc;QAC5B,WAAW,EAAE,aAAa;KAC3B,CAAC;IAEF,MAAM,aAAa,GAAG;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,KAAK;KAClB,CAAC;IAEF,MAAM,cAAc,GAAG;QACrB,UAAU,EAAE,YAAY;QACxB,QAAQ,EAAE,UAAU;QACpB,MAAM,EAAE,QAAQ;QAChB,KAAK,EAAE,OAAO;QACd,UAAU,EAAE,YAAY;KACzB,CAAC;IAEF,MAAM,MAAM,GAAG;QACb,MAAM,EAAE,QAAQ;QAChB,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,WAAW;KACnB,CAAC;IAEF,MAAM,YAAY,GAAG,GAAG;;IChJxB,MAAM,QAAQ,GAAG;;QAEf,uBAAuB,EAAE,yBAAyB;QAClD,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,WAAW;QACtB,WAAW,EAAE,aAAa;QAC1B,cAAc,EAAE,gBAAgB;QAChC,OAAO,EAAE,SAAS;QAClB,mBAAmB,EAAE,qBAAqB;QAC1C,eAAe,EAAE,iBAAiB;QAClC,UAAU,EAAE,YAAY;QACxB,oBAAoB,EAAE,sBAAsB;QAC5C,aAAa,EAAE,eAAe;QAC9B,SAAS,EAAE,WAAW;QACtB,QAAQ,EAAE,UAAU;QACpB,UAAU,EAAE,YAAY;QACxB,OAAO,EAAE,SAAS;QAClB,iBAAiB,EAAE,mBAAmB;QACtC,OAAO,EAAE,SAAS;QAClB,cAAc,EAAE,gBAAgB;QAChC,QAAQ,EAAE,UAAU;QACpB,mBAAmB,EAAE,qBAAqB;QAC1C,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,WAAW;;QAEtB,iBAAiB,EAAE,mBAAmB;QACtC,0BAA0B,EAAE,4BAA4B;;QAExD,iCAAiC,EAAE,mCAAmC;QACtE,oCAAoC,EAAE,sCAAsC;QAC5E,gBAAgB,EAAE,kBAAkB;QACpC,kBAAkB,EAAE,oBAAoB;QACxC,iBAAiB,EAAE,mBAAmB;;QAEtC,4BAA4B,EAAE,8BAA8B;QAC5D,+BAA+B,EAAE,iCAAiC;QAClE,mBAAmB,EAAE,qBAAqB;QAC1C,mBAAmB,EAAE,qBAAqB;QAC1C,wBAAwB,EAAE,0BAA0B;QACpD,cAAc,EAAE,gBAAgB;QAChC,iBAAiB,EAAE,mBAAmB;QACtC,oCAAoC,EAAE,sCAAsC;QAC5E,SAAS,EAAE,WAAW;QACtB,yBAAyB,EAAE,2BAA2B;QACtD,cAAc,EAAE,gBAAgB;QAChC,mBAAmB,EAAE,qBAAqB;QAC1C,iBAAiB,EAAE,mBAAmB;QACtC,wBAAwB,EAAE,0BAA0B;QACpD,mBAAmB,EAAE,qBAAqB;QAC1C,4BAA4B,EAAE,8BAA8B;QAC5D,oBAAoB,EAAE,sBAAsB;QAC5C,YAAY,EAAE,cAAc;QAC5B,UAAU,EAAE,YAAY;QACxB,oBAAoB,EAAE,sBAAsB;QAC5C,YAAY,EAAE,cAAc;QAC5B,OAAO,EAAE,SAAS;QAClB,wBAAwB,EAAE,0BAA0B;QACpD,iBAAiB,EAAE,mBAAmB;QACtC,cAAc,EAAE,gBAAgB;QAChC,oBAAoB,EAAE,sBAAsB;QAC5C,eAAe,EAAE,iBAAiB;QAClC,iBAAiB,EAAE,mBAAmB;QACtC,mBAAmB,EAAE,qBAAqB;QAC1C,eAAe,EAAE,iBAAiB;QAClC,QAAQ,EAAE,UAAU;QACpB,4BAA4B,EAAE,8BAA8B;QAC5D,WAAW,EAAE,aAAa;QAC1B,WAAW,EAAE,aAAa;QAC1B,yBAAyB,EAAE,2BAA2B;QACtD,sBAAsB,EAAE,wBAAwB;QAChD,sBAAsB,EAAE,wBAAwB;QAChD,eAAe,EAAE,iBAAiB;QAClC,0BAA0B,EAAE,4BAA4B;QACxD,2BAA2B,EAAE,6BAA6B;;QAE1D,cAAc,EAAE,gBAAgB;QAChC,eAAe,EAAE,iBAAiB;QAClC,eAAe,EAAE,iBAAiB;QAClC,SAAS,EAAE,WAAW;QACtB,wBAAwB,EAAE,0BAA0B;QACpD,gBAAgB,EAAE,kBAAkB;;QAEpC,WAAW,EAAE,aAAa;QAC1B,gBAAgB,EAAE,kBAAkB;QACpC,mBAAmB,EAAE,qBAAqB;QAC1C,wBAAwB,EAAE,0BAA0B;QACpD,eAAe,EAAE,iBAAiB;;QAElC,aAAa,EAAE,eAAe;QAC9B,qBAAqB,EAAE,uBAAuB;QAC9C,YAAY,EAAE,cAAc;QAC5B,aAAa,EAAE,eAAe;QAC9B,iBAAiB,EAAE,mBAAmB;QACtC,wBAAwB,EAAE,0BAA0B;QACpD,gCAAgC,EAAE,kCAAkC;QACpE,gBAAgB,EAAE,kBAAkB;QACpC,wBAAwB,EAAE,0BAA0B;QACpD,mCAAmC,EAAE,qCAAqC;QAC1E,oBAAoB,EAAE,sBAAsB;QAC5C,8BAA8B,EAAE,gCAAgC;QAChE,8BAA8B,EAAE,gCAAgC;QAChE,aAAa,EAAE,eAAe;QAC9B,uBAAuB,EAAE,yBAAyB;QAClD,eAAe,EAAE,iBAAiB;QAClC,wBAAwB,EAAE,0BAA0B;QACpD,sBAAsB,EAAE,wBAAwB;QAChD,wBAAwB,EAAE,0BAA0B;QACpD,YAAY,EAAE,cAAc;QAC5B,qBAAqB,EAAE,uBAAuB;QAC9C,0BAA0B,EAAE,4BAA4B;;QAExD,QAAQ,EAAE,UAAU;;QAEpB,kBAAkB,EAAE,oBAAoB;QACxC,2BAA2B,EAAE,6BAA6B;QAC1D,aAAa,EAAE,eAAe;QAC9B,eAAe,EAAE,iBAAiB;QAClC,kBAAkB,EAAE,oBAAoB;QACxC,gBAAgB,EAAE,kBAAkB;QACpC,0BAA0B,EAAE,4BAA4B;QACxD,WAAW,EAAE,aAAa;QAC1B,uBAAuB,EAAE,yBAAyB;QAClD,sBAAsB,EAAE,wBAAwB;QAChD,YAAY,EAAE,cAAc;QAC5B,mBAAmB,EAAE,qBAAqB;QAC1C,aAAa,EAAE,eAAe;QAC9B,YAAY,EAAE,cAAc;QAC5B,cAAc,EAAE,gBAAgB;QAChC,sBAAsB,EAAE,wBAAwB;QAChD,uBAAuB,EAAE,yBAAyB;QAClD,YAAY,EAAE,cAAc;QAC5B,kBAAkB,EAAE,oBAAoB;QACxC,6BAA6B,EAAE,+BAA+B;QAC9D,WAAW,EAAE,aAAa;QAC1B,cAAc,EAAE,gBAAgB;QAChC,WAAW,EAAE,aAAa;QAC1B,yBAAyB,EAAE,2BAA2B;;QAEtD,kBAAkB,EAAE,oBAAoB;QACxC,eAAe,EAAE,iBAAiB;QAClC,iBAAiB,EAAE,mBAAmB;QACtC,iBAAiB,EAAE,mBAAmB;;QAEtC,gBAAgB,EAAE,kBAAkB;QACpC,oBAAoB,EAAE,sBAAsB;QAC5C,oBAAoB,EAAE,sBAAsB;QAC5C,8BAA8B,EAAE,gCAAgC;QAChE,wBAAwB,EAAE,0BAA0B;QACpD,0BAA0B,EAAE,4BAA4B;QACxD,2BAA2B,EAAE,6BAA6B;QAC1D,iCAAiC,EAAE,mCAAmC;QACtE,yBAAyB,EAAE,2BAA2B;QACtD,mBAAmB,EAAE,qBAAqB;QAC1C,kBAAkB,EAAE,oBAAoB;QACxC,QAAQ,EAAE,UAAU;QACpB,mBAAmB,EAAE,qBAAqB;QAC1C,uBAAuB,EAAE,yBAAyB;QAClD,kBAAkB,EAAE,oBAAoB;;QAExC,WAAW,EAAE,aAAa;QAC1B,iBAAiB,EAAE,mBAAmB;QACtC,UAAU,EAAE,YAAY;QACxB,OAAO,EAAE,SAAS;QAClB,QAAQ,EAAE,UAAU;;QAEpB,mBAAmB,EAAE,qBAAqB;QAC1C,SAAS,EAAE,WAAW;;QAEtB,sBAAsB,EAAE,wBAAwB;QAChD,cAAc,EAAE,gBAAgB;QAChC,qBAAqB,EAAE,uBAAuB;QAC9C,uBAAuB,EAAE,yBAAyB;QAClD,kBAAkB,EAAE,oBAAoB;QACxC,SAAS,EAAE,WAAW;QACtB,iBAAiB,EAAE,mBAAmB;KACvC,CAAC;IAEF,SAAS,OAAO,CAAC,OAAY;;QAE3B,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC,KAAK,OAAO,CAAC,CAAC;IACxE;;ICjLA,MAAM,cAAc,GAAG,EAAE,CAAC;IAE1B,SAAS,SAAS,CAAC,SAAc;;QAE/B,cAAc,CAAC,QAAQ,CAAC,SAAS,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IAC9D,CAAC;IAED,SAAS,YAAY,CAAC,OAAY;;QAEhC,OAAO,cAAc,CAAC,OAAO,CAAC,CAAC;IACjC;;ICbA,MAAM,YAAY,GAAG;QACnB,QAAQ,EAAE,UAAU;QACpB,QAAQ,EAAE,UAAU;QACpB,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,cAAc;QACvB,IAAI,EAAE,MAAM;QACZ,EAAE,EAAE,WAAW;QACf,KAAK,EAAE,cAAc;QACrB,KAAK,EAAE,UAAU;QACjB,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,WAAW;QACnB,QAAQ,EAAE,UAAU;QACpB,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,SAAS;KACnB,CAAC;IAEF,SAAS,eAAe,CAAC,QAAa;QACpC,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC;QACpE,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,eAAe;QACtB,OAAO,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IACrC;;ICnBA,SAAS,CAAC;QACR,CAACA,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,aAAa,CAAC;QACtC,CAACD,UAAC,CAAC,aAAa,GAAGE,YAAC,CAAC,EAAE;QACvB,CAACF,UAAC,CAAC,aAAa,GAAGE,YAAC,CAAC,EAAE;KACxB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,OAAO,CAAC;QAChC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,OAAO,CAAC;QAChC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,UAAU,CAAC;QACnC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,cAAc,CAAC;QACvC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,OAAO,CAAC;QAChC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,aAAa,EAAEA,YAAC,CAAC,MAAM;QACvB,YAAY,EAAEA,YAAC,CAAC,MAAM;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,UAAU,CAAC;QACnC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,QAAQ,CAAC;QACjC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,SAAS,CAAC;QAClC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,OAAO,CAAC;QAChC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iBAAiB,CAAC;QAC1C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,SAAS,CAAC;QAClC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,aAAa,EAAEA,YAAC,CAAC,MAAM;QACvB,YAAY,EAAEA,YAAC,CAAC,MAAM;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,QAAQ,CAAC;QACjC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,SAAS,EAAEA,YAAC,CAAC,IAAI;KAClB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,OAAO,CAAC;QAChC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,SAAS,EAAEA,YAAC,CAAC,IAAI;KAClB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,SAAS,CAAC;QAClC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,cAAc,CAAC;QACvC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,aAAa,EAAEA,YAAC,CAAC,MAAM;QACvB,eAAe,EAAEA,YAAC,CAAC,MAAM;QACzB,WAAW,EAAEA,YAAC,CAAC,MAAM;QACrB,WAAW,EAAEA,YAAC,CAAC,MAAM;KACtB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,eAAe,CAAC;QACxC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,oBAAoB,CAAC;QAC7C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,WAAW,CAAC;QACpC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,uBAAuB,CAAC;QAChD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,eAAe,EAAEA,YAAC,CAAC,IAAI;KACxB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,GAAG,EAAEA,YAAC,CAAC,IAAI;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,aAAa,CAAC;QACtC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;KACzB,CAAC;;IC1RF,SAAS,CAAC;QACR,CAACC,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACF,QAAC,CAAC,iBAAiB,CAAC;QAC1C,MAAM,EAAEC,YAAC,CAAC,IAAI;QACd,OAAO,EAAEA,YAAC,CAAC,IAAI;QACf,WAAW,EAAEA,YAAC,CAAC,EAAE;QACjB,IAAI,EAAEA,YAAC,CAAC,IAAI;KACb,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACC,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACF,QAAC,CAAC,0BAA0B,CAAC;QACnD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,aAAa,EAAEA,YAAC,CAAC,IAAI;QACrB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,gBAAgB,EAAEA,YAAC,CAAC,EAAE;KACvB,CAAC;;ICdF,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iCAAiC,CAAC;QAC1D,iBAAiB,EAAEC,YAAC,CAAC,IAAI;QACzB,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,wBAAwB,EAAEA,YAAC,CAAC,MAAM;QAClC,SAAS,EAAEA,YAAC,CAAC,MAAM;QACnB,qBAAqB,EAAEA,YAAC,CAAC,EAAE;QAC3B,SAAS,EAAEA,YAAC,CAAC,EAAE;KAChB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,oCAAoC,CAAC;QAC7D,iBAAiB,EAAEC,YAAC,CAAC,IAAI;QACzB,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,SAAS,GAAGE,YAAC,CAAC,QAAQ;QACzB,aAAa,EAAEA,YAAC,CAAC,EAAE;QACnB,WAAW,EAAEA,YAAC,CAAC,KAAK;QACpB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,qBAAqB,EAAEA,YAAC,CAAC,IAAI;KAC9B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,gBAAgB,CAAC;QACzC,iBAAiB,EAAEC,YAAC,CAAC,EAAE;QACvB,qBAAqB,EAAEA,YAAC,CAAC,EAAE;KAC5B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,kBAAkB,CAAC;QAC3C,cAAc,EAAEC,YAAC,CAAC,EAAE;QACpB,sBAAsB,EAAEA,YAAC,CAAC,EAAE;QAC5B,QAAQ,EAAEA,YAAC,CAAC,EAAE;QACd,WAAW,EAAEA,YAAC,CAAC,EAAE;QACjB,iBAAiB,EAAEA,YAAC,CAAC,EAAE;KACxB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iBAAiB,CAAC;QAC1C,cAAc,EAAEC,YAAC,CAAC,EAAE;QACpB,iBAAiB,EAAEA,YAAC,CAAC,EAAE;KACxB,CAAC;;ICxCF,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,CAACD,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,EAAE;QAClB,CAACF,UAAC,CAAC,YAAY,GAAGE,YAAC,CAAC,EAAE;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,CAACD,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,EAAE;QAClB,CAACF,UAAC,CAAC,IAAI,GAAGE,YAAC,CAAC,EAAE;QACd,CAACF,UAAC,CAAC,YAAY,GAAGE,YAAC,CAAC,EAAE;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,wBAAwB,CAAC;QACjD,CAACD,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,IAAI;QACpB,CAACF,UAAC,CAAC,YAAY,GAAGE,YAAC,CAAC,EAAE;QACtB,CAACF,UAAC,CAAC,aAAa,GAAGE,YAAC,CAAC,EAAE;KACxB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,UAAU,CAAC;QACnC,CAACD,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,EAAE;QAClB,CAACF,UAAC,CAAC,SAAS,GAAGE,YAAC,CAAC,MAAM;QACvB,CAACF,UAAC,CAAC,SAAS,GAAGE,YAAC,CAAC,MAAM;KACxB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,WAAW,EAAEC,YAAC,CAAC,IAAI;QACnB,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,QAAQ,EAAEA,YAAC,CAAC,EAAE;QACd,YAAY,EAAEA,YAAC,CAAC,MAAM;QACtB,YAAY,EAAEA,YAAC,CAAC,MAAM;QACtB,YAAY,EAAEA,YAAC,CAAC,MAAM;QACtB,eAAe,EAAEA,YAAC,CAAC,MAAM;QACzB,YAAY,EAAEA,YAAC,CAAC,MAAM;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iBAAiB,CAAC;QAC1C,CAACD,UAAC,CAAC,WAAW,GAAGE,YAAC,CAAC,MAAM;KAC1B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,4BAA4B,CAAC;QACrD,wBAAwB,EAAEC,YAAC,CAAC,EAAE;QAC9B,uBAAuB,EAAEA,YAAC,CAAC,EAAE;KAC9B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,oBAAoB,CAAC;QAC7C,YAAY,EAAEC,YAAC,CAAC,EAAE;QAClB,aAAa,EAAEA,YAAC,CAAC,EAAE;QACnB,eAAe,EAAEA,YAAC,CAAC,KAAK;KACzB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,YAAY,CAAC;QACrC,CAACD,UAAC,CAAC,SAAS,GAAGE,YAAC,CAAC,MAAM;KACxB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,oBAAoB,CAAC;QAC7C,CAACD,UAAC,CAAC,SAAS,GAAGE,YAAC,CAAC,EAAE;QACnB,CAACF,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,EAAE;QAClB,CAACF,UAAC,CAAC,YAAY,GAAGE,YAAC,CAAC,EAAE;QACtB,CAACF,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,MAAM;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,QAAQ,CAAC;QACjC,QAAQ,EAAEC,YAAC,CAAC,EAAE;KACf,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,4BAA4B,CAAC;QACrD,CAACD,UAAC,CAAC,WAAW,GAAGE,YAAC,CAAC,EAAE;QACrB,CAACF,UAAC,CAAC,aAAa,GAAGE,YAAC,CAAC,IAAI;QACzB,CAACF,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,EAAE;QAClB,CAACF,UAAC,CAAC,iBAAiB,GAAGE,YAAC,CAAC,EAAE;KAC5B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,WAAW,CAAC;QACpC,CAACD,UAAC,CAAC,MAAM,GAAGE,YAAC,CAAC,KAAK;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,yBAAyB,CAAC;QAClD,WAAW,EAAEC,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,kBAAkB,GAAGE,YAAC,CAAC,IAAI;QAC9B,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,KAAK;KAC7B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,sBAAsB,CAAC;QAC/C,WAAW,EAAEC,YAAC,CAAC,IAAI;QACnB,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,EAAE;QAClB,CAACF,UAAC,CAAC,IAAI,GAAGE,YAAC,CAAC,MAAM;QAClB,CAACF,UAAC,CAAC,IAAI,GAAGE,YAAC,CAAC,MAAM;KACnB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,WAAW,EAAEC,YAAC,CAAC,IAAI;QACnB,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,EAAE;QAClB,CAACF,UAAC,CAAC,MAAM,GAAGE,YAAC,CAAC,MAAM;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,yBAAyB,CAAC;QAClD,WAAW,EAAEC,YAAC,CAAC,IAAI;QACnB,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,EAAE;QAClB,CAACF,UAAC,CAAC,MAAM,GAAGE,YAAC,CAAC,MAAM;QACpB,CAACF,UAAC,CAAC,aAAa,GAAGE,YAAC,CAAC,MAAM;KAC5B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,+BAA+B,CAAC;QACxD,WAAW,EAAEC,YAAC,CAAC,IAAI;QACnB,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,UAAU,GAAGE,YAAC,CAAC,EAAE;QACpB,CAACF,UAAC,CAAC,WAAW,GAAGE,YAAC,CAAC,KAAK;KACzB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,4BAA4B,CAAC;QACrD,WAAW,EAAEC,YAAC,CAAC,IAAI;QACnB,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,UAAU,GAAGE,YAAC,CAAC,EAAE;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,sBAAsB,CAAC;QAC/C,cAAc,EAAEC,YAAC,CAAC,EAAE;QACpB,wBAAwB,EAAEA,YAAC,CAAC,IAAI;QAChC,CAACF,UAAC,CAAC,kBAAkB,GAAGE,YAAC,CAAC,IAAI;QAC9B,CAACF,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,KAAK;KACnB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iBAAiB,CAAC;QAC1C,CAACD,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,EAAE;QACf,CAACF,UAAC,CAAC,WAAW,GAAGE,YAAC,CAAC,IAAI;KACxB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,YAAY,CAAC;QACrC,CAACD,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,EAAE;QACf,CAACF,UAAC,CAAC,WAAW,GAAGE,YAAC,CAAC,IAAI;KACxB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,OAAO,CAAC;QAChC,CAACD,UAAC,CAAC,MAAM,GAAGE,YAAC,CAAC,KAAK;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,WAAW,CAAC;QACpC,CAACD,UAAC,CAAC,OAAO,GAAGE,YAAC,CAAC,KAAK;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,cAAc,CAAC;QACvC,CAACD,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,KAAK;KACtB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,cAAc,CAAC;QACvC,CAACD,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,EAAE;KAChB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,oCAAoC,CAAC;QAC7D,CAACD,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,EAAE;QACf,CAACF,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,EAAE;QACf,CAACF,UAAC,CAAC,WAAW,GAAGE,YAAC,CAAC,EAAE;QACrB,CAACF,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,MAAM;QACnB,CAACF,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,EAAE;KAChB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,2BAA2B,CAAC;QACpD,UAAU,EAAEC,YAAC,CAAC,EAAE;QAChB,QAAQ,EAAEA,YAAC,CAAC,EAAE;QACd,iBAAiB,EAAEA,YAAC,CAAC,EAAE;QACvB,KAAK,EAAEA,YAAC,CAAC,MAAM;KAChB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,0BAA0B,CAAC;QACnD,WAAW,EAAEC,YAAC,CAAC,IAAI;QACnB,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,KAAK,EAAEA,YAAC,CAAC,EAAE;KACZ,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,eAAe,CAAC;QACxC,QAAQ,EAAEC,YAAC,CAAC,KAAK;KAClB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,oBAAoB,CAAC;QAC7C,CAACD,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,KAAK;KACtB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,QAAQ,EAAEC,YAAC,CAAC,KAAK;KAClB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,wBAAwB,CAAC;QACjD,SAAS,EAAEC,YAAC,CAAC,KAAK;KACnB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iBAAiB,CAAC;QAC1C,CAACD,UAAC,CAAC,WAAW,GAAGE,YAAC,CAAC,EAAE;QACrB,CAACF,UAAC,CAAC,aAAa,GAAGE,YAAC,CAAC,IAAI;KAC1B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,wBAAwB,CAAC;QACjD,UAAU,EAAEC,YAAC,CAAC,IAAI;QAClB,SAAS,EAAEA,YAAC,CAAC,IAAI;QACjB,CAACF,UAAC,CAAC,WAAW,GAAGE,YAAC,CAAC,EAAE;KACtB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,SAAS,CAAC;QAClC,QAAQ,EAAEC,YAAC,CAAC,EAAE;QACd,MAAM,EAAEA,YAAC,CAAC,MAAM;KACjB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,eAAe,CAAC;QACxC,CAACD,UAAC,CAAC,UAAU,GAAGE,YAAC,CAAC,EAAE;QACpB,CAACF,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,QAAQ;QACrB,CAACF,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,QAAQ;QACrB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,IAAI;QAC1B,oBAAoB,EAAEA,YAAC,CAAC,IAAI;KAC7B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iBAAiB,CAAC;QAC1C,CAACD,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,KAAK;QACrB,aAAa,EAAEA,YAAC,CAAC,IAAI;KACtB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,cAAc,CAAC;QACvC,CAACD,UAAC,CAAC,MAAM,GAAGE,YAAC,CAAC,EAAE;QAChB,CAACF,UAAC,CAAC,IAAI,GAAGE,YAAC,CAAC,MAAM;QAClB,CAACF,UAAC,CAAC,IAAI,GAAGE,YAAC,CAAC,MAAM;QAClB,CAACF,UAAC,CAAC,IAAI,GAAGE,YAAC,CAAC,MAAM;KACnB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,eAAe,CAAC;QACxC,OAAO,EAAEC,YAAC,CAAC,MAAM;QACjB,OAAO,EAAEA,YAAC,CAAC,MAAM;KAClB,CAAC;;IC1QF,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,cAAc,CAAC;QACvC,oBAAoB,EAAEC,YAAC,CAAC,EAAE;QAC1B,OAAO,EAAEA,YAAC,CAAC,IAAI;QACf,mBAAmB,EAAEA,YAAC,CAAC,IAAI;QAC3B,qBAAqB,EAAEA,YAAC,CAAC,IAAI;KAC9B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,eAAe,CAAC;QACxC,cAAc,EAAEC,YAAC,CAAC,IAAI;QACtB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,KAAK,EAAEA,YAAC,CAAC,KAAK;QACd,SAAS,EAAEA,YAAC,CAAC,KAAK;KACnB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,eAAe,CAAC;QACxC,UAAU,EAAEC,YAAC,CAAC,EAAE;QAChB,iBAAiB,EAAEA,YAAC,CAAC,EAAE;QACvB,KAAK,EAAEA,YAAC,CAAC,IAAI;QACb,YAAY,EAAEA,YAAC,CAAC,IAAI;QACpB,gBAAgB,EAAEA,YAAC,CAAC,IAAI;QACxB,iBAAiB,EAAEA,YAAC,CAAC,EAAE;QACvB,wBAAwB,EAAEA,YAAC,CAAC,EAAE;QAC9B,YAAY,EAAEA,YAAC,CAAC,IAAI;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,SAAS,CAAC;QAClC,cAAc,EAAEC,YAAC,CAAC,IAAI;QACtB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,SAAS,EAAEA,YAAC,CAAC,IAAI;QACjB,WAAW,EAAEA,YAAC,CAAC,OAAO;QACtB,YAAY,EAAEA,YAAC,CAAC,OAAO;QACvB,YAAY,EAAEA,YAAC,CAAC,OAAO;QACvB,KAAK,EAAEA,YAAC,CAAC,KAAK;QACd,SAAS,EAAEA,YAAC,CAAC,KAAK;KACnB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,wBAAwB,CAAC;QACjD,SAAS,EAAEC,YAAC,CAAC,EAAE;QACf,eAAe,EAAEA,YAAC,CAAC,EAAE;QACrB,KAAK,EAAEA,YAAC,CAAC,KAAK;KACf,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,gBAAgB,CAAC;QACzC,OAAO,EAAEC,YAAC,CAAC,IAAI;QACf,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,kBAAkB,EAAEA,YAAC,CAAC,IAAI;QAC1B,gBAAgB,EAAEA,YAAC,CAAC,IAAI;QACxB,YAAY,EAAEA,YAAC,CAAC,OAAO;QACvB,SAAS,EAAEA,YAAC,CAAC,IAAI;QACjB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,MAAM,EAAEA,YAAC,CAAC,IAAI;QACd,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,OAAO,EAAEA,YAAC,CAAC,IAAI;KAChB,CAAC;;IC5DF,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,WAAW,CAAC;QACpC,IAAI,EAAEC,YAAC,CAAC,IAAI;KACb,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,gBAAgB,CAAC;QACzC,QAAQ,EAAEC,YAAC,CAAC,EAAE;QACd,cAAc,EAAEA,YAAC,CAAC,MAAM;QACxB,YAAY,EAAEA,YAAC,CAAC,KAAK;KACtB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,cAAc,EAAEC,YAAC,CAAC,KAAK;QACvB,YAAY,EAAEA,YAAC,CAAC,IAAI;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,wBAAwB,CAAC;QACjD,WAAW,EAAEC,YAAC,CAAC,EAAE;QACjB,iBAAiB,EAAEA,YAAC,CAAC,IAAI;QACzB,cAAc,EAAEA,YAAC,CAAC,IAAI;QACtB,uBAAuB,EAAEA,YAAC,CAAC,MAAM;KAClC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,eAAe,CAAC;QACxC,SAAS,EAAEC,YAAC,CAAC,KAAK;KACnB,CAAC;;IC7BF,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,YAAY,CAAC;QACrC,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,GAAG,EAAEA,YAAC,CAAC,MAAM;QACb,KAAK,EAAEA,YAAC,CAAC,MAAM;QACf,IAAI,EAAEA,YAAC,CAAC,MAAM;KACf,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,wBAAwB,CAAC;QACjD,oBAAoB,EAAEC,YAAC,CAAC,MAAM;QAC9B,sBAAsB,EAAEA,YAAC,CAAC,MAAM;KACjC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,aAAa,CAAC;QACtC,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,SAAS,EAAEA,YAAC,CAAC,EAAE;QACf,UAAU,EAAEA,YAAC,CAAC,KAAK;QACnB,WAAW,EAAEA,YAAC,CAAC,EAAE;KAClB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,gBAAgB,CAAC;QACzC,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,UAAU,EAAEA,YAAC,CAAC,KAAK;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,wBAAwB,CAAC;QACjD,mBAAmB,EAAEC,YAAC,CAAC,EAAE;QACzB,oBAAoB,EAAEA,YAAC,CAAC,KAAK;QAC7B,yBAAyB,EAAEA,YAAC,CAAC,EAAE;QAC/B,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,cAAc,EAAEA,YAAC,CAAC,MAAM;KACzB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iBAAiB,CAAC;QAC1C,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,KAAK;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,gCAAgC,CAAC;QACzD,IAAI,EAAEC,YAAC,CAAC,IAAI;KACb,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mCAAmC,CAAC;QAC5D,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,KAAK;QAC5B,mBAAmB,EAAEA,YAAC,CAAC,EAAE;KAC1B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,8BAA8B,CAAC;QACvD,MAAM,EAAEC,YAAC,CAAC,KAAK;KAChB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,aAAa,CAAC;QACtC,IAAI,EAAEC,YAAC,CAAC,EAAE;QACV,MAAM,EAAEA,YAAC,CAAC,KAAK;QACf,IAAI,EAAEA,YAAC,CAAC,EAAE;KACX,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,uBAAuB,CAAC;QAChD,cAAc,EAAEC,YAAC,CAAC,EAAE;QACpB,wBAAwB,EAAEA,YAAC,CAAC,IAAI;QAChC,CAACF,UAAC,CAAC,kBAAkB,GAAGE,YAAC,CAAC,IAAI;QAC9B,CAACF,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,KAAK;KACnB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,eAAe,CAAC;QACxC,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,MAAM,EAAEA,YAAC,CAAC,KAAK;KAChB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,wBAAwB,CAAC;QACjD,aAAa,EAAEC,YAAC,CAAC,EAAE;QACnB,YAAY,EAAEA,YAAC,CAAC,KAAK;QACrB,aAAa,EAAEA,YAAC,CAAC,KAAK;QACtB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,yBAAyB,EAAEA,YAAC,CAAC,KAAK;QAClC,gBAAgB,EAAEA,YAAC,CAAC,KAAK;QACzB,cAAc,EAAEA,YAAC,CAAC,KAAK;QACvB,iBAAiB,EAAEA,YAAC,CAAC,KAAK;QAC1B,iBAAiB,EAAEA,YAAC,CAAC,IAAI;KAC1B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,oBAAoB,CAAC;QAC7C,CAACD,UAAC,CAAC,aAAa,GAAGE,YAAC,CAAC,EAAE;QACvB,CAACF,UAAC,CAAC,oBAAoB,GAAGE,YAAC,CAAC,EAAE;KAC/B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,8BAA8B,CAAC;QACvD,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,aAAa,EAAEA,YAAC,CAAC,KAAK;QACtB,UAAU,EAAEA,YAAC,CAAC,IAAI;KACnB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,sBAAsB,CAAC;QAC/C,aAAa,EAAEC,YAAC,CAAC,EAAE;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,qBAAqB,CAAC;QAC9C,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,UAAU,EAAEA,YAAC,CAAC,OAAO;QACrB,SAAS,EAAEA,YAAC,CAAC,IAAI;QACjB,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,MAAM;QACpB,QAAQ,EAAEA,YAAC,CAAC,KAAK;KAClB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,0BAA0B,CAAC;QACnD,MAAM,EAAEC,YAAC,CAAC,EAAE;QACZ,gBAAgB,EAAEA,YAAC,CAAC,EAAE;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,YAAY,CAAC;QACrC,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,uBAAuB,EAAEA,YAAC,CAAC,EAAE;QAC7B,SAAS,EAAEA,YAAC,CAAC,EAAE;QACf,aAAa,EAAEA,YAAC,CAAC,EAAE;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,wBAAwB,CAAC;QACjD,OAAO,EAAEC,YAAC,CAAC,IAAI;QACf,SAAS,EAAEA,YAAC,CAAC,EAAE;QACf,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,MAAM,EAAEA,YAAC,CAAC,EAAE;QACZ,YAAY,EAAEA,YAAC,CAAC,IAAI;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,qBAAqB,CAAC;QAC9C,aAAa,EAAEC,YAAC,CAAC,EAAE;QACnB,eAAe,EAAEA,YAAC,CAAC,KAAK;KACzB,CAAC;;ICxJF,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,cAAc,CAAC;QACvC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,aAAa,EAAEA,YAAC,CAAC,KAAK;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,sBAAsB,CAAC;QAC/C,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,YAAY,EAAEA,YAAC,CAAC,KAAK;QACrB,IAAI,EAAEA,YAAC,CAAC,EAAE;KACX,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,YAAY,CAAC;QACrC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,aAAa,CAAC;QACtC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,YAAY,CAAC;QACrC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,aAAa,CAAC;QACtC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,WAAW,CAAC;QACpC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,kBAAkB,CAAC;QAC3C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,eAAe,CAAC;QACxC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,kBAAkB,CAAC;QAC3C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,gBAAgB,CAAC;QACzC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,aAAa,EAAEA,YAAC,CAAC,IAAI;KACtB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,WAAW,CAAC;QACpC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;QACtB,aAAa,EAAEA,YAAC,CAAC,IAAI;QACrB,wBAAwB,EAAEA,YAAC,CAAC,IAAI;QAChC,wBAAwB,EAAEA,YAAC,CAAC,IAAI;KACjC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,WAAW,CAAC;QACpC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,2BAA2B,CAAC;QACpD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,uBAAuB,CAAC;QAChD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,kBAAkB,CAAC;QAC3C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,IAAI;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,6BAA6B,CAAC;QACtD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,0BAA0B,CAAC;QACnD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,WAAW,EAAEA,YAAC,CAAC,IAAI;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,uBAAuB,CAAC;QAChD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,WAAW,EAAEA,YAAC,CAAC,MAAM;QACrB,eAAe,EAAEA,YAAC,CAAC,MAAM;QACzB,cAAc,EAAEA,YAAC,CAAC,MAAM;QACxB,kBAAkB,EAAEA,YAAC,CAAC,MAAM;QAC5B,gBAAgB,EAAEA,YAAC,CAAC,MAAM;QAC1B,aAAa,EAAEA,YAAC,CAAC,MAAM;QACvB,YAAY,EAAEA,YAAC,CAAC,MAAM;QACtB,eAAe,EAAEA,YAAC,CAAC,MAAM;QACzB,eAAe,EAAEA,YAAC,CAAC,MAAM;QACzB,WAAW,EAAEA,YAAC,CAAC,MAAM;QACrB,gBAAgB,EAAEA,YAAC,CAAC,EAAE;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,sBAAsB,CAAC;QAC/C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,MAAM;QACpB,cAAc,EAAEA,YAAC,CAAC,IAAI;QACtB,UAAU,EAAEA,YAAC,CAAC,KAAK;QACnB,aAAa,EAAEA,YAAC,CAAC,IAAI;QACrB,gBAAgB,EAAEA,YAAC,CAAC,EAAE;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,YAAY,CAAC;QACrC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,aAAa,EAAEA,YAAC,CAAC,IAAI;QACrB,gBAAgB,EAAEA,YAAC,CAAC,IAAI;QACxB,wBAAwB,EAAEA,YAAC,CAAC,IAAI;QAChC,QAAQ,EAAEA,YAAC,CAAC,IAAI;KACjB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,cAAc,CAAC;QACvC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,oBAAoB,EAAEA,YAAC,CAAC,IAAI;QAC5B,eAAe,EAAEA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,KAAK;QAC3B,GAAG,EAAEA,YAAC,CAAC,IAAI;QACX,gBAAgB,EAAEA,YAAC,CAAC,IAAI;QACxB,aAAa,EAAEA,YAAC,CAAC,IAAI;QACrB,wBAAwB,EAAEA,YAAC,CAAC,IAAI;QAChC,QAAQ,EAAEA,YAAC,CAAC,IAAI;KACjB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,yBAAyB,CAAC;QAClD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,WAAW,EAAEA,YAAC,CAAC,MAAM;QACrB,eAAe,EAAEA,YAAC,CAAC,MAAM;QACzB,gBAAgB,EAAEA,YAAC,CAAC,MAAM;QAC1B,gBAAgB,EAAEA,YAAC,CAAC,MAAM;QAC1B,kBAAkB,EAAEA,YAAC,CAAC,MAAM;QAC5B,mBAAmB,EAAEA,YAAC,CAAC,MAAM;QAC7B,kBAAkB,EAAEA,YAAC,CAAC,MAAM;QAC5B,mBAAmB,EAAEA,YAAC,CAAC,MAAM;QAC7B,gBAAgB,EAAEA,YAAC,CAAC,MAAM;KAC3B,CAAC;;IC/UF,SAAS,CAAC;QACN,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,QAAQ,CAAC;QACjC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,QAAQ,EAAEA,YAAC,CAAC,EAAE;KACf,CAAC;;ICRJ,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,gBAAgB,CAAC;QACzC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,KAAK;KAC5B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iCAAiC,CAAC;QAC1D,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,KAAK;QAC5B,CAACF,UAAC,CAAC,iBAAiB,GAAGE,YAAC,CAAC,EAAE;KAC5B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,yBAAyB,CAAC;QAClD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,KAAK;QACvB,0BAA0B,EAAEA,YAAC,CAAC,EAAE;KACjC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,wBAAwB,CAAC;QACjD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,KAAK;QACvB,gBAAgB,EAAEA,YAAC,CAAC,EAAE;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,8BAA8B,CAAC;QACvD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,KAAK;QACvB,sBAAsB,EAAEA,YAAC,CAAC,EAAE;KAC7B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,KAAK;QAC3B,CAACF,UAAC,CAAC,YAAY,GAAGE,YAAC,CAAC,EAAE;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,aAAa,EAAEA,YAAC,CAAC,EAAE;QACnB,sBAAsB,EAAEA,YAAC,CAAC,EAAE;QAC5B,kBAAkB,EAAEA,YAAC,CAAC,EAAE;QACxB,yBAAyB,EAAEA,YAAC,CAAC,IAAI;QACjC,0BAA0B,EAAEA,YAAC,CAAC,IAAI;KACnC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,0BAA0B,CAAC;QACnD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,kBAAkB,EAAEA,YAAC,CAAC,EAAE;QACxB,eAAe,EAAEA,YAAC,CAAC,EAAE;QACrB,cAAc,EAAEA,YAAC,CAAC,EAAE;QACpB,kBAAkB,EAAEA,YAAC,CAAC,MAAM;QAC5B,iBAAiB,EAAEA,YAAC,CAAC,MAAM;QAC3B,qBAAqB,EAAEA,YAAC,CAAC,IAAI;QAC7B,sBAAsB,EAAEA,YAAC,CAAC,IAAI;KAC/B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,kBAAkB,CAAC;QAC3C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,uBAAuB,GAAGE,YAAC,CAAC,EAAE;QACjC,CAACF,UAAC,CAAC,qBAAqB,GAAGE,YAAC,CAAC,EAAE;KAChC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,kBAAkB,CAAC;QAC3C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,CAACF,UAAC,CAAC,sBAAsB,GAAGE,YAAC,CAAC,EAAE;QAChC,CAACF,UAAC,CAAC,sBAAsB,GAAGE,YAAC,CAAC,EAAE;KACjC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,2BAA2B,CAAC;QACpD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,cAAc,EAAEA,YAAC,CAAC,EAAE;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,oBAAoB,CAAC;QAC7C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAEA,YAAC,CAAC,KAAK;QACvB,kBAAkB,EAAGA,YAAC,CAAC,IAAI;QAC3B,aAAa,EAAGA,YAAC,CAAC,EAAE;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,uBAAuB,CAAC;QAChD,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAGA,YAAC,CAAC,EAAE;QACrB,gBAAgB,EAAEA,YAAC,CAAC,KAAK;KAC1B,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,QAAQ,CAAC;QACjC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;KACnB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,oBAAoB,CAAC;QAC7C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,cAAc,EAAGA,YAAC,CAAC,KAAK;QACxB,kBAAkB,EAAEA,YAAC,CAAC,IAAI;QAC1B,aAAa,EAAEA,YAAC,CAAC,EAAE;QACnB,UAAU,EAAEA,YAAC,CAAC,EAAE;KACjB,CAAC;;IC9JF,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,eAAe,CAAC;QACxC,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,IAAI,EAAEA,YAAC,CAAC,EAAE;QACV,SAAS,EAAEA,YAAC,CAAC,MAAM;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iBAAiB,CAAC;QAC1C,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,IAAI,EAAEA,YAAC,CAAC,EAAE;QACV,WAAW,EAAEA,YAAC,CAAC,MAAM;KACtB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iBAAiB,CAAC;QAC1C,IAAI,EAAEC,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,IAAI,EAAEA,YAAC,CAAC,EAAE;QACV,WAAW,EAAEA,YAAC,CAAC,MAAM;KACtB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,kBAAkB,CAAC;QAC3C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,mBAAmB,EAAEA,YAAC,CAAC,IAAI;QAC3B,UAAU,EAAEA,YAAC,CAAC,KAAK;KACpB,CAAC;;IC/BF,SAAS,CAAC;QACN,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,mBAAmB,CAAC;QAC5C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,aAAa,EAAEA,YAAC,CAAC,IAAI;KACtB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,SAAS,CAAC;QAClC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;KACnB,CAAC;;ICpBJ,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,UAAU,CAAC;QACnC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,QAAQ,EAAEA,YAAC,CAAC,IAAI;QAChB,KAAK,EAAEA,YAAC,CAAC,IAAI;QACb,sBAAsB,EAAEA,YAAC,CAAC,KAAK;QAC/B,cAAc,EAAEA,YAAC,CAAC,EAAE;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,OAAO,CAAC;QAChC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,QAAQ,EAAEA,YAAC,CAAC,IAAI;QAChB,eAAe,EAAEA,YAAC,CAAC,IAAI;QACvB,WAAW,EAAEA,YAAC,CAAC,MAAM;QACrB,YAAY,EAAEA,YAAC,CAAC,MAAM;QACtB,YAAY,EAAEA,YAAC,CAAC,MAAM;QACtB,eAAe,EAAEA,YAAC,CAAC,IAAI;QACvB,WAAW,EAAEA,YAAC,CAAC,EAAE;KAClB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,WAAW,CAAC;QACpC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,QAAQ,EAAEA,YAAC,CAAC,IAAI;QAChB,eAAe,EAAEA,YAAC,CAAC,IAAI;QACvB,oBAAoB,EAAEA,YAAC,CAAC,MAAM;QAC9B,kBAAkB,EAAEA,YAAC,CAAC,MAAM;QAC5B,eAAe,EAAEA,YAAC,CAAC,EAAE;KACtB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iBAAiB,CAAC;QAC1C,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,QAAQ,EAAEA,YAAC,CAAC,IAAI;QAChB,eAAe,EAAEA,YAAC,CAAC,IAAI;QACvB,SAAS,EAAEA,YAAC,CAAC,MAAM;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,QAAQ,CAAC;QACjC,QAAQ,EAAEC,YAAC,CAAC,IAAI;QAChB,YAAY,EAAEA,YAAC,CAAC,EAAE;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,WAAW,EAAEA,YAAC,CAAC,IAAI;QACnB,UAAU,EAAEA,YAAC,CAAC,IAAI;QAClB,CAACF,UAAC,CAAC,eAAe,GAAGE,YAAC,CAAC,EAAE;QACzB,CAACF,UAAC,CAAC,cAAc,GAAGE,YAAC,CAAC,EAAE;QACxB,QAAQ,EAAEA,YAAC,CAAC,IAAI;QAChB,eAAe,EAAEA,YAAC,CAAC,IAAI;QACvB,uBAAuB,EAAEA,YAAC,CAAC,IAAI;QAC/B,qBAAqB,EAAEA,YAAC,CAAC,MAAM;KAChC,CAAC;;IC1EF,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,sBAAsB,CAAC;QAC/C,UAAU,EAAEC,YAAC,CAAC,EAAE;QAChB,CAACF,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,IAAI;QACpB,IAAI,EAAEA,YAAC,CAAC,IAAI;QACZ,gBAAgB,EAAEA,YAAC,CAAC,EAAE;KACvB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,cAAc,CAAC;QACvC,QAAQ,EAAEC,YAAC,CAAC,KAAK;QACjB,CAACF,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,IAAI;QACpB,eAAe,EAAEA,YAAC,CAAC,IAAI;KACxB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,qBAAqB,CAAC;QAC9C,IAAI,EAAEC,YAAC,CAAC,EAAE;QACV,QAAQ,EAAEA,YAAC,CAAC,MAAM;KACnB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,uBAAuB,CAAC;QAChD,cAAc,EAAEC,YAAC,CAAC,MAAM;QACxB,YAAY,EAAEA,YAAC,CAAC,MAAM;QACtB,YAAY,EAAEA,YAAC,CAAC,MAAM;QACtB,uBAAuB,EAAEA,YAAC,CAAC,MAAM;QACjC,gCAAgC,EAAEA,YAAC,CAAC,MAAM;QAC1C,yBAAyB,EAAEA,YAAC,CAAC,MAAM;QACnC,yBAAyB,EAAEA,YAAC,CAAC,MAAM;KACpC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,kBAAkB,CAAC;QAC3C,cAAc,EAAEC,YAAC,CAAC,KAAK;QACvB,aAAa,EAAEA,YAAC,CAAC,EAAE;KACpB,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,SAAS,CAAC;QAClC,CAACD,UAAC,CAAC,SAAS,GAAGE,YAAC,CAAC,QAAQ;QACzB,CAACF,UAAC,CAAC,QAAQ,GAAGE,YAAC,CAAC,IAAI;QACpB,CAACF,UAAC,CAAC,MAAM,GAAGE,YAAC,CAAC,IAAI;QAClB,IAAI,EAAEA,YAAC,CAAC,IAAI;KACb,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,CAACF,UAAC,CAAC,QAAQ,GAAG,OAAO,CAACC,QAAC,CAAC,iBAAiB,CAAC;QAC1C,CAACD,UAAC,CAAC,KAAK,GAAGE,YAAC,CAAC,KAAK;KACnB,CAAC;;ICrDF;IACA,MAAM,QAAQ,GAAG,UAAU,CAAC,WAAW,CAAC;IACxC;IACA,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;IAE/B;IAEA,MAAM,MAAM,GAAQ,EAAE,CAAC;IAEvB,MAAM,QAAQ,GAAG;QACf,CAACA,YAAC,CAAC,EAAE,GAAG,MAAM;QACd,CAACA,YAAC,CAAC,QAAQ,GAAG,IAAI;QAClB,CAACA,YAAC,CAAC,OAAO,GAAG,IAAI;QACjB,CAACA,YAAC,CAAC,KAAK,GAAG,kBAAkB;QAC7B,CAACA,YAAC,CAAC,IAAI,GAAG,aAAa;QACvB,CAACA,YAAC,CAAC,IAAI,GAAG,iBAAiB;QAC3B,CAACA,YAAC,CAAC,MAAM,GAAG,WAAW;QACvB,CAACA,YAAC,CAAC,IAAI,GAAG,iBAAiB;QAC3B,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,SAAS,EAAE,GAAG;QACd,KAAK,EAAE,SAAS;QAChB,CAACA,YAAC,CAAC,QAAQ,GAAG,IAAI;KACnB,CAAC;IAEF,MAAM,eAAe,GAAG;QACtB,OAAO,EAAE,SAAS;QAClB,UAAU,EAAE,KAAK;KAClB,CAAC;IAEF,CAAC,SAAS,YAAY;QACpB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CACT,QAAQ,CAAC;gBACP,IAAI,EAAE,CAAC;gBACP,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;aACrB,CAAC,CACH,CAAC;SACH,CAAC,CAAC;IACL,CAAC,GAAG,CAAC;IAEL,CAAC,SAAS,mBAAmB;QAC3B,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CACT,QAAQ,CAAC;gBACP,IAAI,EAAE,CAAC;;gBAEP,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;;gBAE3B,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO;aAChC,CAAC,CACH,CAAC;SACH,CAAC,CAAC;IACL,CAAC,GAAG,CAAC;IAEL,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;IAChC,MAAM,UAAU,GAAG,EAAE,CAAC;IACtB;IACA,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK;;QAEnB,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IACjC,CAAC,CAAC;;IC7DF;IACA,SAAS,mBAAmB,CAAC,CAAM;QAC/B,MAAM,OAAO,GAAQ,EAAE,CAAC;QACxB,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBACtB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACxB;SACJ,CAAC,CAAC;IACP,CAAC;IACD,MAAM,gBAAgB,GAAG;QACrB,CAACA,YAAC,CAAC,QAAQ,GAAG,eAAe;QAC7B,CAACA,YAAC,CAAC,MAAM,GAAG,aAAa;QACzB,CAACA,YAAC,CAAC,IAAI,GAAG,aAAa;QACvB,CAACA,YAAC,CAAC,IAAI,GAAG,cAAc;QACxB,CAACA,YAAC,CAAC,IAAI,GAAG,cAAc;QACxB,CAACA,YAAC,CAAC,IAAI,GAAG,cAAc;QACxB,CAACA,YAAC,CAAC,EAAE,GAAG,mBAAmB;QAC3B,CAACA,YAAC,CAAC,KAAK,GAAG,YAAY;QACvB,CAACA,YAAC,CAAC,MAAM,GAAG,gBAAgB;QAC5B,CAACA,YAAC,CAAC,KAAK,GAAG,eAAe;QAC1B,CAACA,YAAC,CAAC,QAAQ,GAAG,eAAe;QAC7B,CAACA,YAAC,CAAC,OAAO,GAAG,cAAc;KAC9B,CAAC;IACF,SAAS,SAAS,CAAC,QAAa;QAC5B,OAAO,gBAAgB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;IAC3C,CAAC;IACD,SAAS,eAAe,CAAC,CAAM;QAC3B,OAAO;YACH,CAAC,CAAC,YAAY,CAAC;gBACX,CAAC,CAAC,EAAE,CAAC;oBACD;wBACI,GAAG,EAAE;;4BAED,CAAC,CAAC,OAAO,CAACE,UAAC,CAACF,YAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;yBAC5B;qBACJ;iBACJ,CAAC,CAAC;gBACH,CAAC,CAAC,MAAM,CAAC;oBACL,CAAC,CAAC,OAAO,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;iBAC/B,CAAC,CAAC;aACN,CAAC,CAAC;SACN,CAAC;IACN,CAAC;IACD,SAAS,eAAe,CAAC,CAAM;QAC3B,OAAO;YACH,CAAC,CAAC,EAAE,CAAC;gBACD;oBACI,GAAG,EAAE;wBACD,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,QAAQ,CAAC,CAAC;wBAC/B,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,OAAO,CAAC,CAAC;wBAC9B,CAAC,CAAC,GAAG,CAAC;4BACF;gCACI,GAAG,EAAE;;oCAED,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,MAAM,CAAC,CAAC,CAAC;iCAC1B;6BACJ;4BACD;gCACI,GAAG,EAAE;;oCAED,CAAC,CAAC,OAAO,CAACE,UAAC,CAACF,YAAC,CAAC,IAAI,CAAC,CAAC,CAAC;iCACxB;6BACJ;4BACD;gCACI,GAAG,EAAE;;oCAED,CAAC,CAAC,OAAO,CAACE,UAAC,CAACF,YAAC,CAAC,IAAI,CAAC,CAAC,CAAC;iCACxB;6BACJ;4BACD;gCACI,GAAG,EAAE;;oCAED,CAAC,CAAC,OAAO,CAACE,UAAC,CAACF,YAAC,CAAC,IAAI,CAAC,CAAC,CAAC;iCACxB;6BACJ;yBACJ,CAAC,CAAC;wBACH,CAAC,CAAC,OAAO,CAAEE,UAAS,CAAC,QAAQ,CAAC,CAAC;qBAClC;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBACtB;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,QAAQ,CAACE,UAAC,CAACF,YAAC,CAAC,MAAM,CAAC,CAAC,CAAC;qBAC3B;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACE,UAAC,CAACF,YAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3B;iBACJ;aACJ,CAAC,CAAC;YACH,CAAC,CAAC,MAAM,CAAC;gBACL,CAAC,CAAC,OAAO,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;aAC/B,CAAC,CAAC;SACN,CAAC;IACN,CAAC;IACD,SAAS,aAAa,CAAC,CAAM;QACzB,OAAO;YACH,CAAC,CAAC,EAAE,CAAC;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3B;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACE,UAAC,CAACF,YAAC,CAAC,MAAM,CAAC,CAAC,CAAC;qBAC1B;iBACJ;aACJ,CAAC,CAAC;YACH,CAAC,CAAC,MAAM,CAAC;gBACL,CAAC,CAAC,OAAO,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;aAC/B,CAAC,CAAC;SACN,CAAC;IACN,CAAC;IACD,SAAS,gBAAgB,CAAC,CAAM;QAC5B,OAAO;YACH,CAAC,CAAC,EAAE,CAAC;gBACD;oBACI,GAAG,EAAE;wBACD,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,OAAO,CAAC,CAAC;wBAC9B,CAAC,CAAC,IAAI,CAAC;;4BAEH,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACvB,CAAC,CAAC,MAAM,CAAC;gCACL,CAAC,CAAC,OAAO,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;6BAC/B,CAAC,CAAC;yBACN,CAAC,CAAC;wBACH,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,QAAQ,CAAC,CAAC;qBAClC;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3B;iBACJ;aACJ,CAAC,CAAC;YACH,CAAC,CAAC,OAAO,CAAC;gBACN,CAAC,CAAC,QAAQ,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;aAChC,CAAC,CAAC;SACN,CAAC;IACN,CAAC;IACD,SAAS,cAAc,CAAC,CAAM;QAC1B,OAAO;YACH,CAAC,CAAC,EAAE,CAAC;gBACD;oBACI,GAAG,EAAE;wBACD,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,OAAO,CAAC,CAAC;wBAC9B,CAAC,CAAC,IAAI,CAAC;;4BAEH,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,IAAI,CAAC,CAAC,CAAC;4BACrB,CAAC,CAAC,MAAM,CAAC;gCACL,CAAC,CAAC,OAAO,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;6BAC/B,CAAC,CAAC;yBACN,CAAC,CAAC;wBACH,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,QAAQ,CAAC,CAAC;qBAClC;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3B;iBACJ;aACJ,CAAC,CAAC;YACH,CAAC,CAAC,OAAO,CAAC;gBACN,CAAC,CAAC,QAAQ,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;aAChC,CAAC,CAAC;SACN,CAAC;IACN,CAAC;IACD,SAAS,YAAY,CAAC,CAAM;QACxB,OAAO;YACH,CAAC,CAAC,EAAE,CAAC;gBACD;oBACI,GAAG,EAAE;wBACD,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,OAAO,CAAC,CAAC;wBAC9B,CAAC,CAAC,IAAI,CAAC;;4BAEH,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BACnB,CAAC,CAAC,MAAM,CAAC;gCACL,CAAC,CAAC,OAAO,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;6BAC/B,CAAC,CAAC;yBACN,CAAC,CAAC;wBACH,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,QAAQ,CAAC,CAAC;qBAClC;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3B;iBACJ;aACJ,CAAC,CAAC;YACH,CAAC,CAAC,OAAO,CAAC;gBACN,CAAC,CAAC,QAAQ,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;aAChC,CAAC,CAAC;SACN,CAAC;IACN,CAAC;IACD,SAAS,eAAe,CAAC,CAAM;QAC3B,OAAO;YACH,CAAC,CAAC,EAAE,CAAC;gBACD;oBACI,GAAG,EAAE;wBACD,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,OAAO,CAAC,CAAC;wBAC9B,CAAC,CAAC,IAAI,CAAC;4BACH,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;4BAC7B,CAAC,CAAC,MAAM,CAAC;gCACL,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,KAAK,CAAC,CAAC;6BAC/B,CAAC,CAAC;yBACN,CAAC,CAAC;wBACH,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,QAAQ,CAAC,CAAC;qBAClC;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3B;iBACJ;aACJ,CAAC,CAAC;YACH,CAAC,CAAC,OAAO,CAAC;gBACN,CAAC,CAAC,QAAQ,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;aAChC,CAAC,CAAC;SACN,CAAC;IACN,CAAC;IACD,SAAS,cAAc,CAAC,CAAM;QAC1B,OAAO;YACH,CAAC,CAAC,EAAE,CAAC;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3B;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACE,UAAC,CAACF,YAAC,CAAC,IAAI,CAAC,CAAC,CAAC;qBACxB;iBACJ;aACJ,CAAC,CAAC;YACH,CAAC,CAAC,OAAO,CAAC;gBACN,CAAC,CAAC,OAAO,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;aAC/B,CAAC,CAAC;SACN,CAAC;IACN,CAAC;IACD,SAAS,cAAc,CAAC,CAAM;QAC1B,OAAO;YACH,CAAC,CAAC,EAAE,CAAC;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,IAAI,CAAC,CAAC,CAAC;qBACxB;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACE,UAAC,CAACF,YAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3B;iBACJ;aACJ,CAAC,CAAC;YACH,CAAC,CAAC,OAAO,CAAC;gBACN,CAAC,CAAC,OAAO,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;aAC/B,CAAC,CAAC;SACN,CAAC;IACN,CAAC;IACD,SAAS,cAAc,CAAC,CAAM;QAC1B,OAAO;YACH,CAAC,CAAC,EAAE,CAAC;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,IAAI,CAAC,CAAC,CAAC;qBACxB;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACE,UAAC,CAACF,YAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3B;iBACJ;aACJ,CAAC,CAAC;YACH,CAAC,CAAC,OAAO,CAAC;gBACN,CAAC,CAAC,OAAO,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;aAC/B,CAAC,CAAC;SACN,CAAC;IACN,CAAC;IACD,SAAS,mBAAmB,CAAC,CAAM;QAC/B,OAAO;YACH,CAAC,CAAC,EAAE,CAAC;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACA,UAAC,CAACF,YAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBACtB;iBACJ;gBACD;oBACI,GAAG,EAAE;;wBAED,CAAC,CAAC,OAAO,CAACE,UAAC,CAACF,YAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3B;iBACJ;aACJ,CAAC,CAAC;YACH,CAAC,CAAC,OAAO,CAAC;gBACN,CAAC,CAAC,OAAO,CAAEE,UAAS,CAAC,KAAK,CAAC,CAAC;aAC/B,CAAC,CAAC;SACN,CAAC;IACN;;IC9TA;IACA,SAAS,SAAS,CAAC,CAAM,EAAE,OAAY;QACnC,kBAAkB,EAAE,CAAC;QACrB,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,OAAO,CAAC,CAAC;QAC9B,2BAA2B,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QACxC,CAAC,CAAC,OAAO,CAAEA,UAAS,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IACD,SAAS,2BAA2B,CAAC,CAAM,EAAE,OAAY;QACrD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ;YACpC,IAAI,eAAe,CAAC,QAAQ,CAAC;gBACzB,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;SAC5B,CAAC,CAAC;IACP,CAAC;IACD,SAAS,OAAO,CAAC,CAAM,EAAE,QAAa;QAClC,MAAM,IAAI,GAAG,UAAU,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;QAC5C,aAAa,CAAC,QAAQ,CAAC,CAAC;QACxB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;IACD;IACA;IACA;IACA,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,SAAS,kBAAkB;QACvB,OAAO,GAAG,EAAE,CAAC;QACb,eAAe,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;;YAExB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAClB,CAAC,CAAC;IACP,CAAC;IACD,SAAS,aAAa,CAAC,QAAa;;QAEhC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;IACxB,CAAC;IACD;IACA,SAAS,QAAQ,CAAC,QAAa;;QAE3B,OAAO,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC5D;;ICnCA;IACA,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;IACvC;IACA,MAAM,SAAU,SAAQ,SAAS;QAE7B;YACI,KAAK,CAAC,MAAM,CAAC,CAAC;YACd,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAC1B,uBAAuB,CAAC,IAAI,CAAC,CAAC;YAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;KACJ;IACD;IACA,SAAS,uBAAuB,CAAC,CAAM;QACnC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC,IAAI,CAAE,CAAS,CAACJ,UAAC,CAAC,QAAQ,CAAC,EAAE;gBAC3B,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACnB,CAAC,CAAC;SACN,CAAC,CAAC;IACP,CAAC;IACD,MAAM,MAAM,GAAG,IAAI,SAAS,EAAE;;ICzB9B,MAAM,CAAC,GAAG;QACR,OAAO,EAAE,yBAAyB;QAClC,UAAU,EAAE,sBAAsB;KACnC,CAAC;IAEF,SAAS,OAAO,CAAC,IAAS;QACxB,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAChE,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;SAC5E;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,UAAU,CAAC,YAAiB;QACnC,IAAI,KAAK,CAAC,YAAY,CAAC;YAAE,OAAO,YAAY,CAAC;QAC7C,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;QACpD,OAAO,aAAa,CAAC,OAAO,EAAE,GAAG,aAAa,GAAG,YAAY,CAAC;IAChE;;ICRA;IAEA,MAAM,aAAa,GAAG;QACpB,CAACE,YAAC,CAAC,EAAE,GAAG,YAAY;QACpB,CAACA,YAAC,CAAC,KAAK,GAAG,QAAQ;QACnB,CAACA,YAAC,CAAC,IAAI,GAAG,UAAU;QACpB,CAACA,YAAC,CAAC,OAAO,GAAG,UAAU;QACvB,CAACA,YAAC,CAAC,MAAM,GAAG,SAAS;QACrB,CAACA,YAAC,CAAC,MAAM,GAAG,YAAY;QACxB,CAACA,YAAC,CAAC,IAAI,GAAG,OAAO;QACjB,CAACA,YAAC,CAAC,KAAK,GAAG,WAAW;QACtB,CAACA,YAAC,CAAC,IAAI,GAAG,OAAO;QACjB,CAACA,YAAC,CAAC,IAAI,GAAG,OAAO;QACjB,CAACA,YAAC,CAAC,QAAQ,GAAG,WAAW;QACzB,CAACA,YAAC,CAAC,QAAQ,GAAG,WAAW;KAC1B,CAAC;IAEF,SAAS,WAAW,CAAC,MAAW,EAAE,IAAS;QACzC,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAED;IACA;IACA;IAEA,IAAIG,SAAO,GAAG,EAAE,CAAC;IAEjB,SAAS,oBAAoB;QAC3BA,SAAO,GAAG;YACR,CAACH,YAAC,CAAC,EAAE,GAAG,CAAC;YACT,CAACA,YAAC,CAAC,IAAI,GAAG,CAAC;YACX,CAACA,YAAC,CAAC,MAAM,GAAG,CAAC;YACb,CAACA,YAAC,CAAC,IAAI,GAAG,CAAC;YACX,CAACA,YAAC,CAAC,KAAK,GAAG,CAAC;YACZ,CAACA,YAAC,CAAC,MAAM,GAAG,CAAC;YACb,CAACA,YAAC,CAAC,KAAK,GAAG,CAAC;YACZ,CAACA,YAAC,CAAC,OAAO,GAAG,CAAC;YACd,CAACA,YAAC,CAAC,IAAI,GAAG,CAAC;YACX,CAACA,YAAC,CAAC,QAAQ,GAAG,CAAC;SAChB,CAAC;IACJ,CAAC;IAED,SAAS,OAAO,CAAC,MAAW;QAC1B,OAAO,QAAQ,CAAC,MAAM,EAAEA,YAAC,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED,SAAS,OAAO,CAAC,MAAW;QAC1B,OAAO,QAAQ,CAAC,MAAM,EAAEA,YAAC,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED,SAAS,SAAS,CAAC,MAAW;QAC5B,OAAO,QAAQ,CAAC,MAAM,EAAEA,YAAC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAClD,CAAC;IAED,SAAS,OAAO,CAAC,MAAW;QAC1B,OAAO,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,SAAS,YAAY,CAAC,MAAW;QAC/B,OAAO,QAAQ,CAAC,MAAM,EAAEA,YAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAED,SAAS,UAAU,CAAC,MAAW;QAC7B,OAAO,QAAQ,CAAC,MAAM,EAAEA,YAAC,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED,SAAS,UAAU,CAAC,MAAW;QAC7B,OAAO,MAAM,CAAC,MAAM,EAAEA,YAAC,CAAC,OAAO,EAAEA,YAAC,CAAC,IAAI,EAAE,CAAC,CAAM,KAAK,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACjF,CAAC;IACJ,CAAC;IAED,SAAS,QAAQ,CAAC,MAAW;QAC3B,OAAO,MAAM,CAAC,MAAM,EAAEA,YAAC,CAAC,KAAK,EAAEA,YAAC,CAAC,EAAE,EAAE,CAAC,CAAM,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,SAAS,YAAY,CAAC,MAAW;QAC/B,OAAO,MAAM,CAAC,MAAM,EAAEA,YAAC,CAAC,MAAM,EAAEA,YAAC,CAAC,MAAM,EAAE,CAAC,CAAM,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,SAAS,WAAW,CAAC,MAAW;;QAE9B,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAACA,YAAC,CAAC,QAAQ,CAAC,CAAC,CAACG,SAAO,CAACH,YAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtE,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAACA,YAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACrD,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,QAAa;YAC9B,MAAM,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC;YACrC,IAAI,IAAI,GAAG,eAAe,CAAC,UAAU,CAAC,CAAC;YACvC,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACxC,MAAM,cAAc,GAAG,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACnD,MAAM,IAAI,GAAG,UAAU,CAACA,YAAC,CAAC,KAAK,CAAC,GAAG,UAAU,CAACA,YAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;YACrE,OAAO,EAAE,CAACI,aAAC,CAAC,KAAK,GAAG,cAAc,EAAE,CAACA,aAAC,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC;SACtD,CAAC,CAAC;IACL,CAAC;IAED,SAAS,WAAW,CAAC,MAAW;QAC9B,IAAI,cAAc,CAAC,MAAM,EAAEJ,YAAC,CAAC,KAAK,CAAC;YAAE,OAAO,UAAU,CAAC,MAAM,EAAEA,YAAC,CAAC,KAAK,CAAC,CAAC;QACxE,IAAI,WAAW,CAAC,MAAM,EAAEA,YAAC,CAAC,KAAK,CAAC;YAAE,OAAO,aAAa,CAAC,MAAM,EAAEA,YAAC,CAAC,KAAK,CAAC,CAAC;;QAExE,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAACA,YAAC,CAAC,KAAK,CAAC,CAAC,CAACG,SAAO,CAACH,YAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC;QACnE,IAAI,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;QACjC,MAAM,KAAK,GAAG,cAAc,CAAC,IAAI,EAAE,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;QACnE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;IACvD,CAAC;IAED,SAAS,WAAW,CAAC,IAAS;;QAE5BG,SAAO,CAAC,IAAI,CAAC,EAAE,CAAC;QAChB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,SAAS,WAAW;QAClB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,SAAS,QAAQ,CAAC,MAAW,EAAE,IAAS,EAAE,cAAmB;QAC3D,IAAI,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC;YAAE,OAAO,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAClE,OAAO,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,SAAS,MAAM,CAAC,MAAW,EAAE,IAAS,EAAE,OAAY,EAAE,WAAgB;QACpE,IAAI,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC;YAAE,OAAO,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAClE,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC;YAAE,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC;;QAEhE,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAACA,SAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CACnE,WAAW,CACZ,CAAC;IACJ,CAAC;IAED,SAAS,OAAO,CAAC,MAAW,EAAE,IAAS;QACrC,OAAO,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,SAAS,UAAU,CAAC,SAAc,EAAE,IAAS;;QAE3C,OAAO,SAAS,CAACA,SAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC5D,CAAC;IAED,SAAS,QAAQ,CAAC,EAAO;QACvB,OAAO,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS,UAAU,CAAC,IAAS;QAC3B,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,SAAS,YAAY,CAAC,MAAW;QAC/B,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC;IAED,SAAS,UAAU,CAAC,IAAS;QAC3B,OAAO,IAAI,KAAK,aAAa,CAAC,SAAS,GAAG,IAAI,GAAG,KAAK,CAAC;IACzD,CAAC;IAED,SAAS,UAAU,CAAC,SAAc;QAChC,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,SAAS,cAAc,CAAC,MAAW,EAAE,IAAS;;QAE5C,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAACA,SAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAACH,YAAC,CAAC,OAAO,CAAC;cAC7D,IAAI;cACJ,KAAK,CAAC;IACZ,CAAC;IAED,SAAS,UAAU,CAAC,MAAW,EAAE,IAAS,EAAE,OAAY;;QAEtD,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAACG,SAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;cAC3D,KAAK;cACL,IAAI,CAAC;IACX,CAAC;IAED,SAAS,UAAU,CAAC,MAAW,EAAE,IAAS;;QAExC,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAACA,SAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAACH,YAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/E,CAAC;IAED,SAAS,WAAW,CAAC,MAAW,EAAE,IAAS;;QAEzC,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAACG,SAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAACH,YAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;IAC9E,CAAC;IAED,SAAS,aAAa,CAAC,MAAW,EAAE,IAAS;QAC3C,MAAM,KAAK;;QAET,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAACG,SAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAACH,YAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACnE,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,SAAS,gBAAgB,CAAC,MAAW,EAAE,IAAS;;QAE9C,OAAO,MAAM,CAAC,SAAS,CAACA,YAAC,CAAC,KAAK,CAAC,CAAC,CAACG,SAAO,CAACH,YAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC9E,CAAC;IAED,SAAS,cAAc,CAAC,IAAS,EAAE,KAAU;QAC3C,IAAI,IAAI,KAAKE,YAAC,CAAC,MAAM;YAAE,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC;QAClD,IAAI,IAAI,KAAKA,YAAC,CAAC,IAAI;YAAE,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,IAAI,KAAKA,YAAC,CAAC,IAAI;YAAE,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,IAAI,KAAKA,YAAC,CAAC,IAAI;YAAE,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;QAC9C,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,eAAe,CAAC,IAAS;QAChC,IAAI,IAAI,CAACF,YAAC,CAAC,MAAM,CAAC;YAAE,OAAOE,YAAC,CAAC,MAAM,CAAC;QACpC,IAAI,IAAI,CAACF,YAAC,CAAC,IAAI,CAAC;YAAE,OAAOE,YAAC,CAAC,IAAI,CAAC;QAChC,IAAI,IAAI,CAACF,YAAC,CAAC,IAAI,CAAC;YAAE,OAAOE,YAAC,CAAC,IAAI,CAAC;QAChC,OAAOA,YAAC,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,SAAS,UAAU,CAAC,MAAW;;QAE7B,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAACF,YAAC,CAAC,KAAK,CAAC,CAAC,CAACG,SAAO,CAACH,YAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAACA,YAAC,CAAC,KAAK,CAAC;;gBAE1E,MAAM,CAAC,SAAS,CAACA,YAAC,CAAC,KAAK,CAAC,CAAC,CAACG,SAAO,CAACH,YAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAACA,YAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;cACvE,EAAE,CAAC;;QAEPG,SAAO,CAACH,YAAC,CAAC,KAAK,CAAC,EAAE,CAAC;QACnB,OAAO,OAAO,CAAC;IACjB;;IC7NA;IAEA,SAAS,WAAW,CAAC,MAAW,EAAE,OAAY;QAC5C,oBAAoB,EAAE,CAAC;QACvB,MAAM,MAAM,GAAG,2BAA2B,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5D,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC9B,wBAAwB,CAAC,MAAM,CAAC,CAAC;QACjC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,2BAA2B,CAAC,MAAW,EAAE,OAAY;QAC5D,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAC7B,IAAI,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;gBAE7B,MAAM,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SACnD,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,eAAe,CAAC,MAAW,EAAE,QAAa;QACjD,OAAO;YACL,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC;YAChD,CAAC,SAAS,CAAC,IAAI,GAAG,QAAQ;SAC3B,CAAC;IACJ,CAAC;IAED,SAAS,YAAY,CAAC,MAAW,EAAE,OAAY;QAC7C,MAAM,CAACF,UAAC,CAAC,QAAQ,CAAC,GAAG,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,SAAS,wBAAwB,CAAC,OAAY;QAC5C,IAAI,OAAO,CAAC,cAAc,CAAC,CAACA,UAAC,CAAC,SAAS,CAAC,CAAC;YAAE,OAAO,OAAO,CAACA,UAAC,CAAC,SAAS,CAAC,CAAC;IACzE;;IC/BA;IACA;IACA;IACA,MAAM,WAAW,GAAI,MAAc,CAAC,4BAA4B,EAAE,CAAC;IACnE,MAAM,UAAW,SAAQ,WAAW;QAEhC;YACI,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;KACJ;IACD,CAAC,SAAS,uBAAuB;QAC7B,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACpC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAW,QAAQ,CAAC;SACzE,CAAC,CAAC;IACP,CAAC,GAAG,CAAC;IACL,CAAC,SAAS,cAAc;QACpB,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;;YAEpC,UAAU,CAAC,SAAS,CAAE,CAAS,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAW,KAAK,WAAW,CAACC,QAAC,CAAE,CAAS,CAACD,UAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;SAClH,CAAC,CAAC;IACP,CAAC,GAAG,CAAC;IACL,SAAS,WAAW,CAAC,OAAY,EAAE,MAAW;;QAE1C,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;QACxC,OAAO,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;IACD,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE;;IC3BnC;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,IAAS,EAAE,OAAY;QAClC,MAAM,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzC,MAAc,CAAC,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC;;QAE5C,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;QAC9D,IAAK,MAAc,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;YACjC,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QACtC,OAAQ,UAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAChD,CAAC;IACD,SAAS,UAAU,CAAC,IAAS,EAAE,OAAY,EAAE,MAAW;QACpD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC5B,OAAO,CAAC,IAAI,CAAC,6BAA6B,IAAI,YAAY,OAAO,EAAE,CAAC,CAAC;IACzE;;ICrBA,MAAM,MAAM,GAAG;QACb,WAAW,EAAE,WAAW;QACxB,aAAa,EAAE,uBAAuB;QACtC,WAAW,EAAE,uBAAuB;QACpC,cAAc,EAAE,0CAA0C;QAC1D,SAAS,EAAE,OAAO;QAClB,UAAU,EAAE,QAAQ;QACpB,gBAAgB,EAAE,gBAAgB;KACnC,CAAC;IAEF,SAAS,YAAY,CAAC,SAAc;QAClC,MAAM,EAAE,WAAW,EAAE,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC;QACnD,OAAO,oBAAoB,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,SAAS,eAAe,CAAC,SAAc;QACrC,MAAM,YAAY,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAClD,OAAO;YACL,aAAa,EAAE,iBAAiB,CAAC,YAAY,CAAC;YAC9C,WAAW,EAAE,eAAe,CAAC,YAAY,CAAC;SAC3C,CAAC;IACJ,CAAC;IAED,SAAS,oBAAoB,CAAC,WAAgB;QAC5C,MAAM,eAAe,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC;QACzD,OAAO,eAAe,CAAC,GAAG,CAAC,CAAC,CAAM;YAChC,OAAO;gBACL,CAACM,iBAAC,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;gBACvB,CAACA,iBAAC,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC;gBACvB,CAACA,iBAAC,CAAC,UAAU,GAAG,mBAAmB,CAAC,CAAC,CAAC;aACvC,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,SAAS,mBAAmB,CAAC,WAAgB;QAC3C,OAAO,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IAClD,CAAC;IAED,SAAS,iBAAiB,CAAC,OAAY;QACrC,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,SAAS,eAAe,CAAC,OAAY;QACnC,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,SAAS,iBAAiB,CAAC,OAAY;QACrC,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IAClD,CAAC;IAED,SAAS,KAAK,CAAC,UAAe;QAC5B,OAAO,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,SAAS,UAAU,CAAC,UAAe;QACjC,OAAO,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC;IACxD,CAAC;IAED,SAAS,mBAAmB,CAAC,OAAY;QACvC,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC3D;;IC3DA,SAAS,iBAAiB,CAAC,KAAU;QACnC,IAAI,GAAG,CAAC;QACR,KAAK,GAAG,IAAI,KAAK,EAAE;YACjB,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3B,KAAK,GAAG,IAAI,OAAO,EAAE;gBACnB,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;gBACjC,mBAAmB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACxC,sBAAsB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBAC3C,iBAAiB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;aACjC;SACF;IACH,CAAC;IAED,SAAS,mBAAmB,CAAC,WAAgB,EAAE,KAAU;QACvD,IAAI,iBAAiB,CAAC,WAAW,EAAE,KAAK,CAAC;YACvC,WAAW,CAACF,SAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,WAAW,CAACA,SAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,SAAS,iBAAiB,CAAC,WAAgB,EAAE,KAAU;QACrD,QACE,mBAAmB,CAAC,WAAW,CAAC;YAChC,KAAK,CAAC,cAAc,CAAC,WAAW,CAACA,SAAC,CAAC,KAAK,CAAC,CAAC,EAC1C;IACJ,CAAC;IAED,SAAS,sBAAsB,CAAC,WAAgB,EAAE,KAAU;QAC1D,IAAI,WAAW,CAACA,SAAC,CAAC,IAAI,CAAC,KAAKF,YAAC,CAAC,KAAK,EAAE;YACnC,MAAM,QAAQ,GAAG,WAAW,CAAC;YAC7B,MAAM,MAAM,GAAG,CAAC,GAAG,QAAQ,CAACE,SAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACtC,QAAQ,CAACA,SAAC,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC/B,OAAO,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aAC/C,CAAC,CAAC;SACJ;IACH,CAAC;IAED,SAAS,mBAAmB,CAAC,IAAS;;QAEpC,IAAI,IAAI,CAACA,SAAC,CAAC,KAAK,CAAC,KAAKF,YAAC,CAACE,SAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAACA,SAAC,CAAC,KAAK,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC;QACvE,IAAI,IAAI,CAACA,SAAC,CAAC,IAAI,CAAC,KAAKF,YAAC,CAAC,EAAE;YAAE,OAAO,IAAI,CAAC;QACvC,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,iBAAiB,CAAC,OAAY,EAAE,GAAQ;QAC/C,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAACE,SAAC,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,KAAK;YAAE,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAClC;;IC7CA,SAAS,kBAAkB,CAAC,KAAU;QACpC,MAAM,cAAc,GAAQ,EAAE,CAAC;QAC/B,KAAK,CAAC,OAAO,CAAC,CAAC,OAAY;YACzB,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAACE,iBAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;gBACxD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAACA,iBAAC,CAAC,IAAI,CAAC,CAAC,EAAE;oBAC7C,cAAc,CAAC,IAAI,CAAC,OAAO,CAACA,iBAAC,CAAC,IAAI,CAAC,CAAC,CAAC;iBACtC;aACF;SACF,CAAC,CAAC;QACH,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,oDAAoD,EAAE,cAAc,CAAC,CAAC;IACtF;;ICOA,SAAS,gBAAgB,CAAC,OAAY;QACpC,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;QACvC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QAC7B,OAAO,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS,SAAS,CAAC,OAAY;QAC7B,MAAM,WAAW,GAAG,EAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,CAAC,OAAY;YACvB,IAAI,eAAe,CAAC,OAAO,CAAC;;gBAE1B,WAAW,CAAC,OAAO,CAACA,iBAAC,CAAC,SAAS,CAAC,CAAC,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC;SACjE,CAAC,CAAC;QACH,iBAAiB,CAAC,WAAW,CAAC,CAAC;QAC/B,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,SAAS,gBAAgB,CAAC,OAAY;QACpC,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAACA,iBAAC,CAAC,UAAU,CAAC,EAAE,OAAO,CAACA,iBAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7D,MAAM,CAACN,UAAC,CAAC,SAAS,CAAC,GAAG,OAAO,CAACM,iBAAC,CAAC,SAAS,CAAC,CAAC;QAC3C,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,eAAe,CAAC,OAAY;QACnC,OAAO,MAAM,CAAC,MAAM,CAACL,QAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAACK,iBAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACxD;;IC3CA,MAAM,eAAe;QAEnB,YAAY,OAAY;YACtB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACxB;QAED,UAAU,CAAC,OAAY;YACrB,MAAM,OAAO,GAAG,EAAE,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,OAAO,CAAC,EAAE;;oBAExC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBAC9B;aACF,CAAC,CAAC;YACH,OAAO,OAAO,CAAC;SAChB;QAED,OAAO,CAAC,EAAO;YACb,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAACN,UAAC,CAAC,QAAQ,CAAC,CAAC;SACrC;QAED,eAAe,CAAC,wBAA6B,EAAE,QAAQ,GAAG,EAAE;YAC1D,wBAAwB,CAAC,OAAO,CAAC,CAAC,OAAY;gBAC5C,MAAM,oBAAoB,GAAG,OAAO,CAACA,UAAC,CAAC,mBAAmB,CAAC,CAAC;gBAC5D,MAAM,mBAAmB,GAAG,OAAO,CAACA,UAAC,CAAC,UAAU,CAAC,CAAC;;gBAElD,IAAI,oBAAoB;oBAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,oBAAoB,CAAC,CAAC;gBACjE,IAAI,mBAAmB;oBAAE,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;aAC9E,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC;SACjB;KACF;IAED,SAAS,oBAAoB,CAAC,SAAc;QAC1C,OAAO,IAAI,eAAe,CAAC,SAAS,CAAC,CAAC;IACxC;;ICtCA,SAAS,YAAY,CAAC,MAAW,EAAE,IAAS,EAAE,QAAa,EAAE,OAAY,EAAE,QAAa;QACpF,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ;YACtC,OAAO,OAAO,CAAE,QAAgB,CAAC,QAAQ,CAAC,CAAC;kBACrC,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;kBACnD,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;SAC3D,CAAC,CAAC;IACP,CAAC;IACD,SAAS,UAAU,CAAC,QAAa,EAAE,QAAa,EAAE,OAAY,EAAE,QAAa;QACzE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC;YAC7B,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IACD,SAAS,YAAY,CAAC,QAAa,EAAE,QAAa,EAAE,OAAY,EAAE,QAAa;QAC3E,QAAQ,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAM;YAC9B,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACZ,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;SACxC,CAAC,CAAC;IACP,CAAC;IACD,SAAS,IAAI,CAAC,QAAa,EAAE,QAAa,EAAE,OAAY;QACpD,OAAO,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;cAC3B,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;cACnC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,SAAS,OAAO,CAAC,IAAS;QACtB,OAAO,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC;IACtC;;IC3BA;IACA,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE;;ICQvC,SAAS,gBAAgB,CAAC,OAAY;QACpC,MAAM,MAAM,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC;QAC7C,eAAe,CAAC,MAAM,CAAC,CAAC;QACxB,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,EAAEC,QAAC,CAAC,UAAU,CAAC,CAAC;QAC9C,MAAM,QAAQ,GAAG,MAAM,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QACrD,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,EAAEA,QAAC,CAAC,QAAQ,CAAC,CAAC;QACvC,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,EAAEA,QAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,OAAO;YACL,CAACM,cAAC,CAAC,UAAU,GAAG,WAAW;YAC3B,CAACA,cAAC,CAAC,QAAQ,GAAG,QAAQ;YACtB,CAACA,cAAC,CAAC,MAAM,GAAG,MAAM;YAClB,CAACA,cAAC,CAAC,KAAK,GAAG,KAAK;YAChB,CAACA,cAAC,CAAC,UAAU,GAAG,UAAU;SAC3B,CAAC;IACJ,CAAC;IAED,SAAS,GAAG,CAAC,MAAW,EAAE,IAAS;QACjC,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,SAAS,eAAe,CAAC,MAAW;QAClC,oBAAoB,CAAC,MAAM,CAAC,CAAC;QAC7B,qBAAqB,CAAC,MAAM,CAAC,CAAC;QAC9B,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAC5B,sBAAsB,CAAC,MAAM,CAAC,CAAC;QAC/B,mBAAmB,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,SAAS,oBAAoB,CAAC,MAAW;QACvC,YAAY,CACV,MAAM,EACNN,QAAC,CAAC,gBAAgB,EAClBD,UAAC,CAAC,cAAc,EAChBA,UAAC,CAAC,cAAc,EAChBA,UAAC,CAAC,UAAU,CACb,CAAC;IACJ,CAAC;IAED,SAAS,qBAAqB,CAAC,MAAW;QACxC,YAAY,CACV,MAAM,EACNC,QAAC,CAAC,iCAAiC,EACnCD,UAAC,CAAC,iBAAiB,EACnBA,UAAC,CAAC,eAAe,EACjBA,UAAC,CAAC,mBAAmB,CACtB,CAAC;IACJ,CAAC;IAED,SAAS,mBAAmB,CAAC,MAAW;QACtC,YAAY,CACV,MAAM,EACNC,QAAC,CAAC,kBAAkB,EACpBD,UAAC,CAAC,uBAAuB,EACzBA,UAAC,CAAC,qBAAqB,EACvBA,UAAC,CAAC,WAAW,CACd,CAAC;IACJ,CAAC;IAED,SAAS,sBAAsB,CAAC,MAAW;QACzC,YAAY,CACV,MAAM,EACNC,QAAC,CAAC,kBAAkB,EACpBD,UAAC,CAAC,sBAAsB,EACxBA,UAAC,CAAC,sBAAsB,EACxBA,UAAC,CAAC,WAAW,CACd,CAAC;IACJ,CAAC;IAED,SAAS,mBAAmB,CAAC,MAAW;QACtC,YAAY,CACV,MAAM,EACNC,QAAC,CAAC,mBAAmB,EACrBD,UAAC,CAAC,cAAc,EAChBA,UAAC,CAAC,YAAY,EACdA,UAAC,CAAC,OAAO,CACV,CAAC;IACJ;;ICnFA,SAAS,mBAAmB,CAAC,OAAY,EAAE,SAAc,EAAE,QAAa;QACtE,MAAM,SAAS,GAAG,mBAAmB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACzD,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;QAC/D,SAAS,CAACG,MAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,SAAS,CAACA,MAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,SAAS,CAACA,MAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,SAAS,CAACA,MAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,SAAS,mBAAmB,CAAC,OAAY,EAAE,QAAa;QACtD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YACpB,OAAO,CAAC,QAAQ,CAAC,GAAG;gBAClB,CAACA,MAAC,CAAC,KAAK,GAAG,EAAE;gBACb,CAACA,MAAC,CAAC,KAAK,GAAG,EAAE;gBACb,CAACA,MAAC,CAAC,KAAK,GAAG,EAAE;gBACb,CAACA,MAAC,CAAC,KAAK,GAAG,EAAE;aACd,CAAC;QACJ,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC3B,CAAC;IAED,SAAS,YAAY,CAAC,SAAc;QAClC,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;QAClC,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;QAClC,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;QAClC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACrC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;IACxC,CAAC;IAED,SAAS,sBAAsB,CAAC,SAAc;QAC5C,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;QAC/D,OAAO,EAAE,CAACA,MAAC,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE,CAACA,MAAC,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE,CAACA,MAAC,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE,CAACA,MAAC,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;IAC5F,CAAC;IAED,SAAS,QAAQ,CAAC,SAAc;QAC9B,IAAI,SAAS,CAAC,SAAS,CAACH,UAAC,CAAC,QAAQ,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvD,MAAM,QAAQ,GAAG,SAAS,CAACA,UAAC,CAAC,QAAQ,CAAC,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC;QACtD,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC;YAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,SAAS,QAAQ,CAAC,SAAc;QAC9B,IAAI,SAAS,CAAC,SAAS,CAACA,UAAC,CAAC,YAAY,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,GAAG,SAAS,CAACA,UAAC,CAAC,YAAY,CAAC,CAACA,UAAC,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC;YAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,CAAC;IACX,CAAC;IAED,SAAS,QAAQ,CAAC,SAAc;QAC9B,IAAI,SAAS,CAAC,SAAS,CAACA,UAAC,CAAC,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,GAAG,SAAS,CAACA,UAAC,CAAC,IAAI,CAAC,CAACA,UAAC,CAAC,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC;YAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,CAAC;IACX,CAAC;IAED;IAEA,SAAS,QAAQ,CAAC,CAAM,EAAE,CAAM;QAC9B,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3F,CAAC;IAED,SAAS,SAAS,CAAC,IAAS;QAC1B,IAAI,CAAC,IAAI,IAAI,IAAI,KAAKQ,YAAG;YAAE,OAAO,IAAI,CAAC;QACvC,OAAO,KAAK,CAAC;IACf;;IC7DA,SAAS,eAAe,CAAC,OAAY,EAAE,QAAa;QAClD,MAAM,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC5C,OAAO,CAACR,UAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,QAAa,KAAK,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;IACnF,CAAC;IAiBD,SAAS,yBAAyB,CAAC,QAAa,EAAE,SAAc;QAC9D,MAAM,SAAS,GAAG,sBAAsB,CAAC,SAAS,CAAC,CAAC;QACpD,MAAM,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;QACpC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,SAAS,cAAc,CAAC,QAAa,EAAE,MAAW;QAChD,IAAI,QAAQ,EAAE;YACZ,oBAAoB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YACvC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1B,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YAChC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9B;IACH,CAAC;IAED;IACA,SAAS,qBAAqB,CAAC,QAAa;QAC1C,IAAI,QAAQ,CAAC,WAAW,KAAK,KAAK;YAChC,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,OAAO,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED;IACA,SAAS,oBAAoB,CAAC,QAAa,EAAE,MAAW;QACtD,IAAI,QAAQ,CAAC,WAAW,KAAK,KAAK;YAChC,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,oBAAoB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;QAClE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAED,SAAS,SAAS,CAAC,SAAc;QAC/B,MAAMS,QAAM,GAAG,EAAE,CAAC;QAClB,MAAM,SAAS,GAAG,SAAS,CAACN,MAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAC3C,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;;YAE9C,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;YACnC,KAAK,CAAC,QAAQ,CAAC,qBAAqB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;YAC9D,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACpCM,QAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpB;QACD,UAAU,CAACA,QAAM,CAAC,CAAC;QACnB,OAAOA,QAAM,CAAC;IAChB,CAAC;IAED,SAAS,UAAU,CAAC,MAAW;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACjD;IACH,CAAC;IAED,SAAS,SAAS,CAAC,SAAc,EAAE,KAAU;QAC3C,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;;QAEpD,MAAM,eAAe,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;;QAE5C,MAAM,cAAc,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;QAC3C,eAAe,CAAC,GAAG,CACjB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EACnB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EACnB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EACjB,CAAC,EAAK,CAAC,EAAK,CAAC,EAAG,CAAC,CACpB,CAAC;QACF,cAAc,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QAC3C,OAAO,cAAc,CAAC;IACxB,CAAC;IAED,SAAS,aAAa,CAAC,SAAc,EAAE,KAAU;QAC/C,MAAM,CAAC,GAAG,SAAS,CAACN,MAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;QACpC,MAAM,CAAC,GAAG,SAAS,CAACA,MAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;QACpC,MAAM,CAAC,GAAG,SAAS,CAACA,MAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;QACpC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IACrB;;ICvFA,SAAS,oBAAoB,CAAC,UAAe;QAC3C,UAAU,CAACI,cAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,OAAY;YAC1CG,gBAAc,CAAC,OAAO,CAAC,CAAC;SACzB,CAAC,CAAC;IACL,CAAC;IAED,SAASA,gBAAc,CAAC,OAAY;QAClCC,eAAa,CAAC,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9C,eAAe,CAAC,OAAO,EAAEX,UAAC,CAAC,SAAS,CAAC,CAAC;QACtC,qBAAqB,CAAC,OAAO,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QAC9C,qBAAqB,CAAC,OAAO,CAACA,UAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,SAAS,qBAAqB,CAAC,KAAU;QACvC,IAAI,KAAK;YACP,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS;gBACtBW,eAAa,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;gBACxC,eAAe,CAAC,IAAI,EAAEX,UAAC,CAAC,SAAS,CAAC,CAAC;aACpC,CAAC,CAAC;IACP,CAAC;IAED;IACA,SAASW,eAAa,CAAC,OAAY,EAAE,YAAiB;QACpD,IAAI;YACF,MAAM,SAAS,GAAG,YAAY,CAACX,UAAC,CAAC,iBAAiB,CAAC,CAAC;YACpD,mBAAmB,CAAC,OAAO,EAAE,SAAS,EAAEA,UAAC,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,YAAY,CAACA,UAAC,CAAC,cAAc,CAAC,IAAIQ,YAAG;gBACvCG,eAAa,CAAC,OAAO,EAAE,YAAY,CAACX,UAAC,CAAC,cAAc,CAAC,CAAC,CAAC;SAC1D;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;IACH,CAAC;IAED,SAAS,YAAY,CAAC,OAAY;QAChC,IAAI;YACF,OAAO,OAAO,CAACA,UAAC,CAAC,eAAe,CAAC,CAAC;SACnC;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;IACH;;IC9CA,SAAS,UAAU,CAAC,WAAgB;;QAGlC,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC;YAC3C,OAAO,EAAE,OAAO;YAChB,KAAK,EAAE,QAAQ;SAChB,CAAC,CAAC;QAEH,MAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,WAAW,CAAC,OAAO,CAAC,CAAC,CAAM;;YAEzB,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5C,CAAC,CAAC;;QAGH,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;;QAElE,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAEhD,OAAO,IAAI,CAAC;IACd;;IChBA,SAAS,UAAU,CAAC,KAAU;QAC5B,OAAO,QAAQ,CAAC,KAAK,CAACA,UAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,SAAS,QAAQ,CAAC,KAAU;QAC1B,MAAM,QAAQ,GAAG,KAAK,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;QACjD,OAAO,UAAU,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,MAAM,UAAU,GAAG;QACjB,CAACC,QAAC,CAAC,WAAW,GAAG,WAAW;QAC5B,CAACA,QAAC,CAAC,eAAe,GAAG,eAAe;KACrC,CAAA;IAED,SAAS,WAAW,CAAC,KAAU;QAC7B,MAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,KAAK,CAACD,UAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAU;YACjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACnC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,SAAS,eAAe,CAAC,KAAU;;QAEjC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;QAE5B,OAAO,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC9B;;IC/BA,SAAS,wBAAwB,CAAC,MAAW,EAAE,KAAU,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAU;QACpF,MAAM,WAAW,GAAQ,EAAE,CAAC;;QAE5B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAM,KAAK,WAAW,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAE7E,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC3C,IAAI,KAAK;YAAE,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS,KAAK,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChE,OAAO,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC;IAED,SAAS,uBAAuB,CAAC,MAAW,EAAE,KAAU,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,SAAc;QACvF,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,MAAM,UAAU,GAAG,mBAAmB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACzD,IAAI,SAAS,EAAE;YACb,MAAM,UAAU,GAAG,mBAAmB,CAAC,MAAM,GAAG,SAAS,EAAE,QAAQ,CAAC,CAAC;YACrE,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACnC;QACD,OAAO,eAAe,CAAC,UAAU,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IAC/D,CAAC;IAED,SAAS,sBAAsB,CAAC,MAAW,EAAE,KAAU,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,SAAc;QACtF,OAAO,uBAAuB,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;IAChE,CAAC;IAED,SAAS,mBAAmB,CAAC,MAAW,EAAE,QAAa;QACrD,MAAM,WAAW,GAAG,oBAAoB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;QAE3D,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;QAChC,KAAK,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAEhC,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QACvD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,oBAAoB,CAAC,MAAW,EAAE,KAAU;QACnD,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC9B,MAAM,CAAC,IAAI,CAAC;gBACV,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;gBAC5C,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;aAC7C,CAAC,CAAC;SACJ;QACD,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5B,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,eAAe,CAAC,KAAU,EAAE,KAAU,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;QAE9D,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;QAClE,MAAM,eAAe,GAAG,kBAAkB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;QAEvD,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;QACnE,uBAAuB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;;QAEvC,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,kBAAkB,CAAC,KAAU,EAAE,GAAQ;QAC9C,MAAM,IAAI,GAAG,oBAAoB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC9C,OAAO;YACL,YAAY,EAAE,KAAK;YACnB,KAAK,EAAE,CAAC;YACR,WAAW,EAAE,IAAI;SAClB,CAAC;IACJ,CAAC;IAED;IACA;IACA;IAEA,SAAS,uBAAuB,CAAC,GAAQ,EAAE,QAAa;QACtD,MAAM,MAAM,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;QACvC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,SAAS,kBAAkB,CAAC,GAAQ;;QAElC,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;;QAEnC,MAAM,SAAS,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,MAAM,GAAG,GAAG,CAAC,EACX,GAAG,GAAG,CAAC,EACP,GAAG,GAAG,CAAC,EACP,GAAG,GAAG,CAAC,CAAC;QACV,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,EACrB,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC,GAAG,CAAI,CAAC,EAAE,GAAG,EAAG,GAAG,EAAG,CAAC,EAClB,GAAG,EAAI,CAAC,EAAG,GAAG,EAAG,CAAC,EAClB,GAAG,EAAE,GAAG,EAAK,CAAC,EAAG,CAAC,EAChB,CAAC,EAAI,CAAC,EAAK,CAAC,EAAG,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,SAAS,oBAAoB,CAAC,KAAU,EAAE,GAAQ;;QAEhD,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;QAEtC,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEnD,OAAO,IAAI,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC;;ICjGA,SAAS,4BAA4B,CAAC,QAAa,EAAE,OAAY;QAC/D,wBAAwB,CAAC,QAAQ,CAAC,CAAC;QACnC,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC;QAC9C,MAAM,MAAM,GAAG,oBAAoB,CAAC,QAAQ,CAAC,CAAC;;QAE9C,MAAM,QAAQ,GAAG,wBAAwB,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;QACtF,yBAAyB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC9C,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,SAAS,oBAAoB,CAAC,QAAa;QACzC,MAAM,SAAS,GAAG,QAAQ,CAACA,UAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvC,MAAM,UAAU,GAAG,QAAQ,CAACA,UAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxC,OAAO;YACL,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC;YACxB,CAAC,SAAS,EAAE,UAAU,CAAC;YACvB,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;YACxB,CAAC,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;SAC1B,CAAC;IACJ,CAAC;IAED,SAAS,wBAAwB,CAAC,QAAa;QAC7C,QAAQ,CAACA,UAAC,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,OAAO,CAACA,UAAC,CAAC,IAAI,CAAC,CAAC;QAC5C,QAAQ,CAACA,UAAC,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,OAAO,CAACA,UAAC,CAAC,IAAI,CAAC,CAAC;IAC9C;;ICxBA,SAAS,4BAA4B,CAAC,KAAU;QAC9C,OAAO,2BAA2B,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,SAAS,qCAAqC,CAAC,KAAU;QACrD,KAAK,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;QACnC,OAAO,2BAA2B,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAED,SAAS,aAAa,CAAC,KAAU;QAC/B,MAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,MAAM,cAAc,GAAG,KAAK,CAAC,OAAO,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC;QACpD,cAAc,CAAC,OAAO,CAAC,CAAC,QAAa;YACnC,MAAM,aAAa,GAAG,QAAQ,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;YACzD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;SAChE,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,2BAA2B,CAAC,KAAU;QAC7C,MAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAACA,UAAC,CAAC,UAAU,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;QAC5E,OAAO,kBAAkB,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM,kBAAkB,GAAG;QACzB,CAACC,QAAC,CAAC,WAAW,GAAG,EAAE,SAAS,EAAE,oBAAoB,EAAE,KAAK,EAAE,gBAAgB,EAAE;QAC7E,CAACA,QAAC,CAAC,iBAAiB,GAAG,EAAE,SAAS,EAAE,0BAA0B,EAAE,KAAK,EAAE,sBAAsB,EAAE;KAChG,CAAC;IAEF,SAAS,gBAAgB,CAAC,mBAAwB;QAChD,MAAM,MAAM,GAAG,cAAc,CAAC,mBAAmB,CAACD,UAAC,CAAC,MAAM,CAAC,CAAC,CAAC;;QAE7D,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;QAChC,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,OAAO,CAAC,CAAC,KAAU,KAAK,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QACvD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,cAAc,CAAC,oBAAyB;QAC/C,OAAO,oBAAoB,CAAC,GAAG,CAAC,CAAC,KAAU;YACzC,MAAM,MAAM,GAAG,KAAK,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC;YACpC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,oBAAoB,CAAC,KAAU;QACtC,MAAM,qBAAqB,GAAG,KAAK,CAAC,OAAO,CAAC;QAC5C,MAAM,oBAAoB,GAAG,qBAAqB,CAACA,UAAC,CAAC,UAAU,CAAC,CAACA,UAAC,CAAC,MAAM,CAAC,CAAC;QAC3E,MAAM,MAAM,GAAG,kBAAkB,CAAC,oBAAoB,CAAC,CAAC;QACxD,OAAO,wBAAwB,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IACrF,CAAC;IAED,SAAS,sBAAsB,CAAC,mBAAwB;;QAEtD,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;QAChC,MAAM,sBAAsB,GAAG,mBAAmB,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC;QAC/D,sBAAsB,CAAC,OAAO,CAAC,CAAC,KAAU,KAAK,wBAAwB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QACvF,wBAAwB,EAAE,CAAC;QAC3B,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,0BAA0B,CAAC,KAAU;;QAE5C,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;QAChC,MAAM,sBAAsB,GAAG,KAAK,CAAC,OAAO,CAACA,UAAC,CAAC,UAAU,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC;QACvE,sBAAsB,CAAC,OAAO,CAAC,CAAC,KAAU,KAAK,wBAAwB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QACvF,wBAAwB,EAAE,CAAC;QAC3B,IAAI,KAAK,CAAC,KAAK;YAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS,KAAK,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5E,MAAM,SAAS,GAAG,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;QACvE,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACpC,SAAS,CAAC,YAAY,EAAE,CAAC;QACzB,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,SAAS,wBAAwB,CAAC,KAAU,EAAE,qBAA0B;QACtE,MAAM,KAAK,GAAG,qBAAqB,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC;QACnD,MAAM,WAAW,GAAG,KAAK,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;QACpD,kBAAkB,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,MAAM,kBAAkB,GAAG;QACzB,CAACC,QAAC,CAAC,WAAW,GAAG,kBAAkB;QACnC,CAACA,QAAC,CAAC,eAAe,GAAG,sBAAsB;KAC5C,CAAC;IAEF,SAAS,kBAAkB,CAAC,KAAU,EAAE,KAAU;QAChD,MAAM,MAAM,GAAG,KAAK,CAACD,UAAC,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAI,8BAA8B,EAAE;YAClC,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,8BAA8B,GAAG,KAAK,CAAC;SACxC;QACD,MAAM,CAAC,OAAO,CAAC,CAAC,KAAU,KAAK,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,SAAS,sBAAsB,CAAC,KAAU,EAAE,KAAU;QACpD,MAAM,kBAAkB,GAAG,KAAK,CAACA,UAAC,CAAC,UAAU,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;QACzE,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,gBAAgB,GAAG;QACvB,CAACC,QAAC,CAAC,SAAS,GAAG,qBAAqB;KACrC,CAAC;IAEF;IACA;IACA;IACA;IACA;IAEA,SAAS,qBAAqB,CAAC,KAAU,EAAE,KAAU;QACnD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3D,MAAM,YAAY,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAClE,MAAM,qBAAqB,GAAG,wBAAwB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAC3E,qBAAqB,CAAC,CAAC,CAAC,GAAG,qBAAqB,CAAC,CAAC,CAAC;cAC/C,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;cACrD,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,SAAS,wBAAwB,CAAC,YAAiB,EAAE,IAAS;QAC5D,OAAO;YACL,wBAAwB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/C,wBAAwB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;SAChD,CAAC;IACJ,CAAC;IAED,SAAS,aAAa,CAAC,KAAU;QAC/B,MAAM,QAAQ,GAAG,KAAK,CAACD,UAAC,CAAC,UAAU,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC;QAC5E,MAAM,MAAM,GAAG,KAAK,CAACA,UAAC,CAAC,UAAU,CAAC,CAACA,UAAC,CAAC,MAAM,CAAC,CAAC;QAC7C,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,KAAK,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAC3C,MAAM,IAAI,GAAG,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACvD,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;IACvC,CAAC;IAED,SAAS,qBAAqB,CAAC,KAAU;QACvC,OAAO,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAACA,UAAC,CAAC,KAAK,CAAC,CAAC,EAAE,oBAAoB,CAAC,KAAK,EAAE,CAACA,UAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1F,CAAC;IAED,SAAS,oBAAoB,CAAC,KAAU,EAAE,IAAS;QACjD,MAAM,QAAQ,GAAG,KAAK,CAACA,UAAC,CAAC,UAAU,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,CAACA,UAAC,CAAC,YAAY,CAAC,CAACA,UAAC,CAAC,SAAS,CAAC,CAAC;QAC9E,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACM,aAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,GAAG,GAAG,WAAW,CAAC;IACjE,CAAC;IAED,SAAS,oBAAoB,CAAC,CAAM,EAAE,CAAM,EAAE,MAAW,EAAE,KAAU;QACnE,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1F,CAAC;IAED,SAAS,cAAc,CAAC,CAAM,EAAE,CAAM,EAAE,MAAW,EAAE,KAAU;QAC7D,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,SAAS,wBAAwB,CAAC,MAAW,EAAE,MAAW;QACxD,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,SAAS,kBAAkB,CAAC,oBAAyB;QACnD,OAAO,oBAAoB,CAAC,GAAG,CAAC,CAAC,KAAU;YACzC,MAAM,MAAM,GAAG,KAAK,CAACN,UAAC,CAAC,WAAW,CAAC,CAAC;YACpC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC,CAAC,CAAC;IACL,CAAC;IAED;IAEA,IAAI,8BAA8B,GAAG,IAAI,CAAC;IAE1C,SAAS,wBAAwB;QAC/B,8BAA8B,GAAG,IAAI,CAAC;IACxC;;IC9KA,SAAS,yBAAyB,CAAC,QAAa;QAC9C,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;;QAErD,MAAM,QAAQ,GAAG,uBAAuB,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;QACjE,yBAAyB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC9C,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,SAAS,+BAA+B,CAAC,QAAa;QACpD,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChE,MAAM,IAAI,GAAG,sBAAsB,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3F,yBAAyB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,aAAa,CAAC,QAAa;QAClC,OAAO;YACL,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC;YACtC,MAAM,EAAE,QAAQ,CAAC,OAAO,CAACA,UAAC,CAAC,MAAM,CAAC;YAClC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAACA,UAAC,CAAC,aAAa,CAAC;SAC7C,CAAC;IACJ;;ICjBA,SAAS,aAAa,CAAC,KAAU,EAAE,OAAY;QAC7C,MAAM,KAAK,GAAQ,EAAE,CAAC;QACtB,KAAK,CAACA,UAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,QAAa,KAAK,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QAC/F,OAAO,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,SAAS,iBAAiB,CAAC,KAAU;;QAEnC,IAAI,cAAc,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC1C,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS;YACtB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACjD,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACzB,CAAC,CAAA;;QAEF,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9C,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,oBAAoB,CAAC,QAAa,EAAE,OAAY;QACvD,MAAM,aAAa,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAClD,MAAM,KAAK,GAAG,kBAAkB,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QACzD,MAAM,QAAQ,GAAG,QAAQ,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC;QACtC,yBAAyB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3C,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,iBAAiB,CAAC,QAAa;QACtC,OAAO;YACL,OAAO,EAAE,QAAQ,CAACA,UAAC,CAAC,SAAS,CAAC;YAC9B,QAAQ,EAAE,QAAQ,CAACA,UAAC,CAAC,SAAS,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC;YAC3C,KAAK,EAAE,QAAQ,CAACA,UAAC,CAAC,KAAK,CAAC;YACxB,SAAS,EAAE,QAAQ,CAACA,UAAC,CAAC,YAAY,CAAC,CAACA,UAAC,CAAC,SAAS,CAAC;SACjD,CAAC;IACJ,CAAC;IAED,MAAM,cAAc,GAAG;QACrB,CAACC,QAAC,CAAC,sBAAsB,GAAG,4BAA4B;QACxD,CAACA,QAAC,CAAC,mBAAmB,GAAG,yBAAyB;QAClD,CAACA,QAAC,CAAC,yBAAyB,GAAG,+BAA+B;QAC9D,CAACA,QAAC,CAAC,4BAA4B,GAAG,4BAA4B;QAC9D,CAACA,QAAC,CAAC,+BAA+B,GAAG,qCAAqC;KAC3E,CAAC;IAEF,SAAS,kBAAkB,CAAC,QAAa,EAAE,OAAY;QACrD,OAAO,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC5E;;IClDA;IACA,SAAS,uBAAuB,CAAC,KAAU,EAAE,OAAY;QACvD,MAAM,cAAc,GAAG,KAAK,CAACD,UAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,gBAAgB,CAAC,cAAc,CAAC,CAAC;;QAEhD,MAAM,MAAM,GAAG,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QACzD,yBAAyB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC1C,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;IACA;IACA;IAEA,MAAM,cAAc,GAAG,EAAE,CAAC;IAE1B;IACA,SAAS,gBAAgB,CAAC,OAAY,EAAE,cAAmB;QACzD,MAAM,MAAM,GAAG,cAAc,CAACA,UAAC,CAAC,aAAa,CAAC,CAAC;QAC/C,MAAM,MAAM,GAAG,MAAM,CAACA,UAAC,CAAC,aAAa,CAAC,CAAC;;QAEvC,MAAM,QAAQ,GAAG,mBAAmB,CAAC,MAAM,CAAC;cACxC,oBAAoB,CAAC,MAAM,CAAC;cAC5B,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtC,yBAAyB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC5C,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;IACA,SAAS,gBAAgB,CAAC,MAAW,EAAE,OAAY;QACjD,MAAM,cAAc,GAAG,MAAM,CAACA,UAAC,CAAC,oBAAoB,CAAC,CAAC;;QAEtD,MAAM,QAAQ,GAAG,iBAAiB,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;;QAE5D,cAAc,CAAC,MAAM,CAACA,UAAC,CAAC,SAAS,CAAC,CAAC,GAAG,QAAQ,CAAC;QAC/C,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC5B,OAAO,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,SAAS,mBAAmB,CAAC,MAAW;;QAEtC,OAAO,cAAc,CAAC,MAAM,CAACA,UAAC,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;IAC5D,CAAC;IAED,SAAS,oBAAoB,CAAC,MAAW;;QAEvC,OAAO,cAAc,CAAC,MAAM,CAACA,UAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IACrD,CAAC;IAED;IACA;IACA;IACA;IAEA,SAAS,gBAAgB,CAAC,cAAmB;QAC3C,MAAM,MAAM,GAAG,cAAc,CAACA,UAAC,CAAC,aAAa,CAAC,CAAC;QAC/C,OAAO;YACL,CAACA,UAAC,CAAC,QAAQ,GAAG,EAAE,CAACA,UAAC,CAAC,WAAW,GAAG,eAAe,CAAC,MAAM,CAAC,EAAE;YAC1D,CAACA,UAAC,CAAC,YAAY,GAAG,EAAE,CAACA,UAAC,CAAC,SAAS,GAAG,OAAO,CAAC,MAAM,EAAEA,UAAC,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;YACxE,CAACA,UAAC,CAAC,IAAI,GAAG,EAAE,CAACA,UAAC,CAAC,SAAS,GAAG,OAAO,CAAC,MAAM,EAAEA,UAAC,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;YAChE,CAACA,UAAC,CAAC,KAAK,GAAG,MAAM,CAACA,UAAC,CAAC,KAAK,CAAC;SAC3B,CAAC;IACJ,CAAC;IAED,SAAS,eAAe,CAAC,MAAW;QAClC,OAAO,MAAM,CAACA,UAAC,CAAC,WAAW,CAAC,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;IAED,SAAS,OAAO,CAAC,MAAW,EAAE,IAAS,EAAE,GAAQ;QAC/C,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,KAAK,KAAK,YAAY,GAAG,GAAG,GAAG,KAAK,CAAC;IAC9C;;IC5EA;IACA;IAEA,SAAS,UAAU,CAAC,cAAmB;QACrC,MAAM,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACzD,IAAI,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,EAAE,eAAe,EAAE,UAAU,EAAE,GAAG,+BAA+B,CAAC,WAAW,CAAC,CAAC;;QAEnF,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QACpD,MAAM,SAAS,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;QACnC,IAAI,QAAQ,CAAC,cAAc,CAAC;YAAE,UAAU,CAAC,cAAc,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5F,OAAO,cAAc,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;IAC/C,CAAC;IAED,SAAS,cAAc,CAAC,UAAe,EAAE,SAAc;;QAErD,MAAM,SAAS,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;;QAE1D,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,SAAS,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;QACnC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,SAAS,CAAC,WAAgB;;QAEjC,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,CAAM,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,SAAS,aAAa,CAAC,MAAW,EAAE,UAAe;QACjD,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,CAAM,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC;IACvE,CAAC;IAED,SAAS,QAAQ,CAAC,cAAmB;QACnC,OAAO,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IACtD,CAAC;IAED,SAAS,UAAU,CAAC,cAAmB,EAAE,UAAe,EAAE,SAAc,EAAE,UAAe;QACvF,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAU;YACnD,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;YACrC,MAAM,eAAe,GAAG,aAAa,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;;YAE/D,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACnD,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAClC,SAAS,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED;IACA;IACA;IACA;IACA;IAEA,SAAS,+BAA+B,CAAC,MAAW;QAClD,MAAM,SAAS,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;QAC1C,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAC/B,OAAO,gBAAgB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED,SAAS,eAAe,CAAC,MAAW;QAClC,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE;YAC5B,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC1D,IAAI,aAAa,CAAC,MAAM,CAAC;gBAAE,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;YAClF,CAAC,EAAE,CAAC;SACL;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,SAAS,iBAAiB,CAAC,MAAW,EAAE,CAAM;;QAE5C,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEzE,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;QACnC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC3B,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAED,SAAS,mBAAmB,CAAC,SAAc;QACzC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;IACjG,CAAC;IAED,SAAS,aAAa,CAAC,MAAW;QAChC,OAAO,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,SAAS,gBAAgB,CAAC,SAAc,EAAE,MAAW;QACnD,MAAM,KAAK,GAAG,oBAAoB,EAAE,CAAC;QACrC,OAAO,KAAK,CAAC,WAAW,KAAK,KAAK;YAAE,qBAAqB,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QACpF,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,eAAe,EAAE,UAAU,EAAE,KAAK,CAAC,UAAU,EAAE,CAAC;IAClF,CAAC;IAED,SAAS,qBAAqB,CAAC,KAAU,EAAE,MAAW,EAAE,SAAc;QACpE,MAAM,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC9C,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;QAErC,KAAK,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,UAAU,EAAE,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;QAC7F,KAAK,CAAC,eAAe,GAAG,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;;QAEhE,MAAM,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,KAAU,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEjG,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC5D,KAAK,CAAC,gBAAgB,EAAE,CAAC;IAC3B,CAAC;IAED,SAAS,oBAAoB;QAC3B,OAAO;;YAEL,UAAU,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;YAEtC,MAAM,EAAE,IAAI,KAAK,CAAC,OAAO,EAAE;YAC3B,gBAAgB,EAAE,CAAC;YACnB,eAAe,EAAE,EAAE;YACnB,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,KAAK;SACnB,CAAC;IACJ;;ICnHA,SAAS,OAAO,CAAC,KAAU;QACzB,MAAM,eAAe,GAAG,KAAK,CAACA,UAAC,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,eAAe,CAAC,OAAO,CAAC,CAAC,CAAM,KAAK,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC,CAACA,UAAC,CAAC,KAAK,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9F,OAAO,kBAAkB,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,SAAS,eAAe,CAAC,KAAU;QACjC,MAAM,QAAQ,GAAG,KAAK,CAACA,UAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACA,UAAC,CAAC,SAAS,CAAC,CAAC;QAChD,MAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAY,KAAK,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1F,OAAO,kBAAkB,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,SAAS,kBAAkB,CAAC,WAAgB;QAC1C,MAAM,KAAK,GAAQ,EAAE,CAAC;QACtB,WAAW,CAAC,OAAO,CAAC,CAAC,UAAe,KAAK,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC7E,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS,YAAY,CAAC,KAAU;;QAE9B,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;QACpC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS,KAAK,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;QAEvE,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;;QAE1D,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;QACnC,IAAI,CAACA,UAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QACtB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,WAAW,CAAC,OAAY;QAC/B,MAAM,KAAK,GAAQ,EAAE,CAAC;QACtB,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS,KAAK,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/D,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,YAAY,CAAC,IAAS;QAC7B,MAAM,eAAe,GAAG,YAAY,CAAC,IAAI,EAAEC,QAAC,CAAC,iBAAiB,CAAC,CAAC;QAChE,MAAM,eAAe,GAAG,YAAY,CAAC,IAAI,EAAEA,QAAC,CAAC,YAAY,CAAC,CAAC;QAC3D,MAAM,WAAW,GAAG,SAAS,CAAC,eAAe,CAAC,CAAC;QAC/C,MAAM,WAAW,GAAG,eAAe,GAAG,SAAS,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;QACtE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;IACtC,CAAC;IAED,SAAS,SAAS,CAAC,SAAc;QAC/B,MAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,MAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,SAAS,CAAC,OAAO,CAAC,CAAC,KAAU;YAC3B,MAAM,CAAC,IAAI,CAACW,WAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9B,WAAW,CAAC,IAAI,CAAC,KAAK,CAACZ,UAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACxC,CAAC,CAAC;QACH,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC;IACjC,CAAC;IAED,SAASY,WAAS,CAAC,KAAU;QAC3B,MAAM,MAAM,GAAG,KAAK,CAACZ,UAAC,CAAC,KAAK,CAAC,CAACA,UAAC,CAAC,OAAO,CAAC,CAAC;QACzC,MAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,MAAM,CAAC,OAAO,CAAC,CAAC,KAAU;YACxB,MAAM,KAAK,GAAG,KAAK,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC;YACnC,IAAI,KAAK;gBAAE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpC,CAAC,CAAC;QACH,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,SAAS,YAAY,CAAC,IAAS,EAAE,IAAS;QACxC,OAAO,IAAI,CAACA,UAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAM,KAAK,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5E;;ICzEA,SAAS,eAAe,CAAC,KAAU;QACjC,MAAM,MAAM,GAAG,KAAK,CAACA,UAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC;;QAE7C,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;QACpC,MAAM,CAAC,QAAQ,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,OAAO,MAAM,CAAC;IAChB;;ICTA,SAAS,iBAAiB,CAAC,WAAgB;;QAEzC,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;QAErE,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtC,MAAM,SAAS,GAAG,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAK,GAAG,SAAS,CAAC;QACrC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC;IACd;;ICPA;IACA;IACA;IACA;AACA;AACA;IACA;IACA;IACA;AACA;IACA,MAAM,GAAG,CAAC;IACV,IAAI,WAAW,GAAG;IAClB,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IAC3B,KAAK;IACL,IAAI,KAAK,GAAG;IACZ,QAAQ,IAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;IAC5B,QAAQ,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IACrD,YAAY,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7B,SAAS,CAAC,CAAC;IACX,QAAQ,OAAO,GAAG,CAAC;IACnB,KAAK;AACL;IACA,IAAI,UAAU,GAAG;IACjB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC;IAC7B,KAAK;AACL;IACA,IAAI,KAAK,CAAC,GAAG,EAAE;IACf,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC;IAChD,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC;IAC/C,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpB,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;IACnB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpB,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;IACnB,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IACjC,QAAQ,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IACjD,KAAK;AACL;IACA,IAAI,QAAQ,CAAC,GAAG,EAAE;IAClB,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC;IAChD,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC;IAC/C,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;IACnB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpB,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;IACnB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpB,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;IACnB,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IACjC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;IACnB,QAAQ,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IACjD,KAAK;AACL;IACA,IAAI,SAAS,CAAC,GAAG,EAAE;IACnB,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC;IAChD,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC;IAC/C,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;IACnB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpB,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;IACnB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpB,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IACjC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;IACnB,QAAQ,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IACjD,KAAK;AACL;IACA;IACA;IACA,IAAI,OAAO,GAAG;IACd,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IAC/B,QAAQ,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IACrC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;IACrB,SAAS,CAAC,CAAC;IACX,QAAQ,OAAO,GAAG,CAAC;IACnB,KAAK;IACL,CAAC;AACD;IACA;IACA,GAAG,CAAC,YAAY,CAAC,SAAS,QAAQ,EAAE;IACpC,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;IACxB,IAAI,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC5B,IAAI,OAAO,GAAG,CAAC;IACf,EAAC;AACD;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,MAAM,MAAM,SAAS,KAAK,CAAC,OAAO,CAAC;IACnC,IAAI,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACzB,QAAQ,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC;IACjC,YAAY,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;IAC1B,aAAa,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IACjC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC;IACnC,aAAa,IAAI,OAAO,CAAC,IAAI,QAAQ;IACrC,YAAY,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC;IAC3B;IACA,YAAY,MAAM,+BAA+B;IACjD,KAAK;AACL;IACA,IAAI,KAAK,GAAG;IACZ,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC;IAC/B,KAAK;IACL,IAAI,OAAO,GAAG;IACd,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IAC9C,KAAK;IACL,IAAI,IAAI,CAAC,CAAC,EAAE;IACZ,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnC,KAAK;IACL,IAAI,KAAK,CAAC,CAAC,EAAE;IACb,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAClC,KAAK;IACL,IAAI,KAAK,CAAC,CAAC,EAAE;IACb,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;IAC7C,KAAK;IACL,IAAI,SAAS,CAAC,CAAC,EAAE;IACjB,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,KAAK;IACL,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;IACf,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChD,KAAK;IACL,IAAI,IAAI,GAAG;IACX,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IAC5C,KAAK;IACL,IAAI,KAAK,CAAC,CAAC,EAAE;IACb,QAAQ,OAAO,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAClE,KAAK;IACL,CAAC;AACD;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,MAAM,MAAM,CAAC;AACb;IACA,IAAI,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE;IACjC,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;IACnC,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;IACzC,QAAQ,IAAI,CAAC,EAAE,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;IACjC,KAAK;AACL;IACA,IAAI,KAAK,GAAG;IACZ,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAChF,KAAK;AACL;IACA;IACA;IACA,IAAI,IAAI,GAAG;IACX,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC5C,KAAK;AACL;IACA;IACA;IACA;IACA,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE;IAC1B,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAClH,KAAK;IACL,CAAC;IAED;AACA;IACA;AACA;IACA,MAAM,KAAK,CAAC;IACZ,IAAI,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE;IAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7B,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACnB,KAAK;AACL;IACA,IAAI,KAAK,GAAG;IACZ,QAAQ,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,KAAK;AACL;IACA,IAAI,IAAI,GAAG;IACX,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC5C,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,YAAY,CAAC,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE;IACpE,QAAQ,IAAI,QAAQ,GAAG,CAAC,CAAC;IACzB,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;IACtB,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC;IACrB,QAAQ,IAAI,QAAQ,GAAG,CAAC,CAAC;AACzB;IACA;IACA;IACA,QAAQ,IAAI,WAAW,GAAG,CAAC,CAAC;IAC5B,QAAQ,IAAI,KAAK,GAAG,EAAE,CAAC;IACvB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC1D,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACtE,YAAY,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,GAAG,QAAQ,CAAC;IAC5F,YAAY,WAAW,IAAI,IAAI,CAAC;IAChC,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,SAAS;AACT;IACA;IACA,QAAQ,QAAQ,WAAW;IAC3B,QAAQ,KAAK,QAAQ;IACrB,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,aAAa,GAAG,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACrG,YAAY,MAAM;IAClB,QAAQ,KAAK,KAAK;IAClB,YAAY,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,YAAY,MAAM;IAClB,QAAQ,KAAK,IAAI;IACjB,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,YAAY,MAAM;IAClB,QAAQ,KAAK,QAAQ;IACrB,YAAY,IAAI,CAAC,GAAG,EAAE;IACtB,gBAAgB,CAAC,GAAG,EAAE,CAAC;IACvB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC9D,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC1D,gBAAgB,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;IACjC,oBAAoB,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,gBAAgB,IAAI,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5C,oBAAoB,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC7C,gBAAgB,IAAI,EAAE,IAAI,IAAI;IAC9B,oBAAoB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC/B,gBAAgB,IAAI,EAAE,IAAI,KAAK;IAC/B,oBAAoB,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IACzD,gBAAgB,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,QAAQ,EAAE;IAC3C,oBAAoB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACvG,oBAAoB,IAAI,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAClD,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACtC,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC;IAC7B,gBAAgB,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1D,YAAY,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC;IAC7B,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,YAAY,MAAM;IAClB,SAAS;IACT,KAAK;AACL;IACA,CAAC;AACD;IACA;IACA;IACA,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;AACrB;IACA,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACrC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAChD,IAAI,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,EAAC;AACD;AACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,MAAM,OAAO,CAAC;AACd;IACA,IAAI,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE;IAClC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACjC,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACzF,KAAK;AACL;IACA,IAAI,KAAK,GAAG;IACZ,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IACrD,YAAY,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7B,SAAS,CAAC,CAAC;IACX,QAAQ,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjD,KAAK;IACL,IAAI,IAAI,GAAG;IACX,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IAChD,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;IACrB,SAAS,CAAC,CAAC;IACX,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAC1B,KAAK;IACL,CAAC;AACD;IACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,MAAM,IAAI,CAAC;IACX,IAAI,WAAW,CAAC,QAAQ,EAAE;IAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IAC3B,QAAQ,IAAI,QAAQ;IACpB,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjC,KAAK;IACL,IAAI,KAAK,GAAG;IACZ,QAAQ,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IAC9B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACtD,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACtD,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACnD,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IACtD,YAAY,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7B,SAAS,CAAC,CAAC;IACX,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;IACA,IAAI,MAAM,GAAG;IACb,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;IACrD,YAAY,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IACpC;IACA,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAC1B,QAAQ,IAAI,IAAI,CAAC,KAAK;IACtB,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IAChC,QAAQ,IAAI,IAAI,CAAC,IAAI;IACrB,YAAY,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IAC/B,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IAC9B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;IAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,KAAK;AACL;IACA;IACA;IACA,IAAI,YAAY,CAAC,QAAQ,EAAE;IAC3B,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK;IACvB,YAAY,OAAO,QAAQ,CAAC,KAAK,EAAE,CAAC;IACpC,QAAQ,IAAI,KAAK,GAAG,EAAE;IACtB,YAAY,IAAI,GAAG,EAAE,CAAC;IACtB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAClD,YAAY,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAC3E,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,KAAK;IACtB,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACnD,QAAQ,IAAI,IAAI,CAAC,IAAI;IACrB,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAChD;IACA,YAAY,IAAI,GAAG,EAAE,CAAC;IACtB,QAAQ,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAClC,KAAK;AACL;IACA;IACA;IACA,IAAI,MAAM,CAAC,GAAG,EAAE;IAChB,QAAQ,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxD,QAAQ,IAAI,IAAI,CAAC,KAAK;IACtB,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACnC,QAAQ,IAAI,IAAI,CAAC,IAAI;IACrB,YAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAClC,KAAK;AACL;IACA;IACA,IAAI,WAAW,GAAG;IAClB,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC7C,QAAQ,IAAI,IAAI,CAAC,KAAK;IACtB,YAAY,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;IACjE,QAAQ,IAAI,IAAI,CAAC,IAAI;IACrB,YAAY,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,QAAQ,OAAO,QAAQ,CAAC;IACxB,KAAK;AACL;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,EAAE;IACpB,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM;IAC5B,YAAY,OAAO;IACnB,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK;IACvB,YAAY,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACnD,QAAQ,IAAI,KAAK,GAAG,EAAE;IACtB,YAAY,IAAI,GAAG,EAAE,CAAC;IACtB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAClD,YAAY,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAC5F,SAAS;IACT,QAAQ,IAAI,KAAK,CAAC,MAAM,EAAE;IAC1B,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK;IAC3B,gBAAgB,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;IACxC,YAAY,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACpC,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;IACzB,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI;IAC1B,gBAAgB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IACvC,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAClC,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA,GAAG,CAAC,YAAY,CAAC,SAAS,IAAI,CAAC;IAC/B,IAAI,GAAG,IAAI,CAAC,gBAAgB;IAC5B,QAAQ,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,kBAAkB,CAAC,IAAI,EAAC;IAC5D,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;IACxB,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC3B,IAAI,IAAI,KAAK,CAAC,GAAE;IAChB,IAAI,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAC;IACxB,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;IAChC,QAAQ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtB,QAAQ,IAAI,QAAQ,CAAC,GAAE;IACvB,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;IACnH,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAC;IACzC,KAAK;IACL,IAAI,OAAO,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC;IAClC,EAAC;IACD,GAAG,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;IACjC,GAAG,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC;AAC3B;IACA,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAC;IAC7C,IAAI,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;IAC1C,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAC;IAC/B,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;IAC5C,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAC;IAC/B,YAAY,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,YAAY,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC9C,SAAS;IACT,KAAK;IACL,IAAI,OAAO,GAAG,CAAC;IACf,EAAC;AACD;IACA,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,QAAQ,CAAC;IACjC,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;IACpC,IAAI,IAAI,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC;IAC1B,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC3B,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAAC;IACpC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;IAChC,QAAQ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAC;IACrB,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC;IAC3B,QAAQ,IAAI,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC;IACzB,QAAQ,IAAI,KAAK,CAAC,GAAG,CAAC,OAAM;IAC5B;IACA,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;IAC/B,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC;AACzD;AACA;IACA,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC;IACjC,YAAY,IAAI,EAAE,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;IACvC,YAAY,IAAI,GAAG,GAAG,GAAE;IACxB,YAAY,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC;IAC1B,YAAY,IAAI,IAAI,GAAG,EAAE,CAAC,aAAa,CAAC;IACxC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IACpB,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB;IACA,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC;IAC9D,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC;IAChE,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC;IAChE,YAAY,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAC;IACzD,YAAY,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAC;IAC3D,YAAY,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAC;AAC3D;IACA,YAAY,EAAE,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAC;IAChE,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAC;IAC/B,SAAS;IACT,KAAK;IACL,IAAI,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACvD,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAC3B,IAAI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IACtF,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjC,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,IAAI,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5B,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAC;IACrD,IAAI,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAC1B,IAAI,OAAO,CAAC;IACZ,EAAC;AACD;AACA;IACA,GAAG,CAAC,KAAK,CAAC,SAAS,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,GAAG,OAAO,MAAM,KAAK,QAAQ;IACjC,QAAQ,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC;IAC7B,SAAS,GAAG,MAAM,YAAY,KAAK,CAAC;IACpC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,KAAK,KAAK,GAAG,OAAO,MAAM,GAAG,QAAQ,CAAC;IACtC,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC;IAC7B,QAAQ,MAAM,CAAC,YAAY,EAAE,CAAC;IAC9B,QAAQ,MAAM,CAAC,iBAAiB,EAAE,CAAC;IACnC,QAAQ,GAAG,CAAC,GAAG,CAAC,UAAU;IAC1B,YAAY,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC;IACrE,aAAY;IACZ,YAAY,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAChD,YAAY,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChE,SAAS;IACT,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACrD,KAAK;IACL,EAAC;AACD;IACA,GAAG,CAAC,IAAI,CAAC,SAAS,MAAM,CAAC,QAAQ,CAAC;IAClC,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;IACvB,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;IACxB,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAC1B,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,EAAC;IACrB,IAAI,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;IACtE,IAAI,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC;IAC9C,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC;IACrD,IAAI,OAAO,MAAM,CAAC;IAClB,EAAC;IAGD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IC7iBA;IAGA,SAAS,oBAAoB,CAAC,QAAa,EAAE,UAAe;QAC1D,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,MAAM,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAC/B,QAAQ,CAAC,YAAY,EAAE,CAAC;YACxB,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACxC,QAAQ,GAAG,cAAc,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;SACnE;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;IACA,SAAS,uBAAuB,CAAC,QAAa;QAC5C,MAAM,MAAM,GAAG,OAAO,CAAC;QACvB,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC;QAC3B,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC;QAC3B,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC;QAC3B,QAAQ,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED;IACA;IACA,SAAS,cAAc,CAAC,QAAa,EAAE,QAAa,EAAE,QAAa,EAAE,YAAiB;QACpF,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;;QAEvD,MAAM,YAAY,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;;QAEhE,MAAM,YAAY,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAClE,IAAI,qBAAqB,CAAC,YAAY,EAAE,YAAY,CAAC;YAAE,OAAO,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC3F,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,qBAAqB,CAAC,YAAiB,EAAE,YAAiB;QACjE,QACE,YAAY,CAAC,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC;YACnD,YAAY,CAAC,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,EACnD;IACJ,CAAC;IAED,SAAS,YAAY,CAAC,MAAW,EAAE,MAAW,EAAE,UAAe;QAC7D,QACE,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;YAC5D,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;YAC5D,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAC5D;IACJ;;ICvCA;IACA,SAAS,WAAW,CAAC,KAAU,EAAE,OAAY;QAC3C,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,0BAA0B,CAAC,KAAK,CAAC,CAAC;;QAEpE,MAAM,YAAY,GAAG,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACzD,MAAM,kBAAkB,GAAG,qBAAqB,CAAC,YAAY,CAAC,CAAC;QAC/D,MAAM,aAAa,GAAG,oBAAoB,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;QAC7E,OAAO,kBAAkB,CAAC,aAAa,EAAE,YAAY,EAAE,kBAAkB,CAAC,CAAC;IAC7E,CAAC;IAED,SAAS,kBAAkB,CAAC,aAAkB,EAAE,YAAiB,EAAE,kBAAuB;QACxF,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;;QAE9D,MAAM,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;QAE3E,MAAM,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAChD,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAChC,kBAAkB,CAAC,OAAO,CAAC,CAAC,WAAgB,KAAK,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;QACjF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,0BAA0B,CAAC,KAAU;QAC5C,MAAM,YAAY,GAAG,EAAE,CAAC;QACxB,IAAI,OAAO,GAAG,KAAK,CAACA,UAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,OAAO,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,IAAI,0BAA0B,EAAE;YACxD,YAAY,CAAC,IAAI,CAAC,OAAO,CAACA,UAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5C,OAAO,GAAG,OAAO,CAACA,UAAC,CAAC,YAAY,CAAC,CAAC;SACnC;QACD,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC;IACnC,CAAC;IAED,SAAS,qBAAqB,CAAC,uBAA4B;QACzD,MAAM,kBAAkB,GAAQ,EAAE,CAAC;QACnC,uBAAuB,CAAC,OAAO,CAAC,CAAC,WAAgB,KAAK,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC,CAC/G,CAAC;QACF,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAED,SAAS,oBAAoB,CAAC,WAAgB;QAC5C,IAAI,WAAW,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,iBAAiB;YACtE,OAAO,oBAAoB,CAAC,WAAW,CAAC,CAAC;QAC3C,OAAO,+BAA+B,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IAED,SAAS,oBAAoB,CAAC,WAAgB;QAC5C,IAAI,WAAW,GAAG,WAAW,CAACA,UAAC,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAI,OAAO,WAAW,IAAI,SAAS;YAAE,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC;QACrE,MAAM,YAAY,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;QACpD,MAAM,QAAQ,GAAG,WAAW,CAACA,UAAC,CAAC,WAAW,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC;QACxD,yBAAyB,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QAClD,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,SAAS,+BAA+B,CAAC,WAAgB;QACvD,MAAM,YAAY,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;QACvD,MAAM,YAAY,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC;QACtD,MAAM,MAAM,GAAG,uBAAuB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;;QAEnE,MAAM,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;QAE3E,MAAM,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAChD,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAChC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAChC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACzB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,uBAAuB,CAAC,YAAiB,EAAE,YAAiB;QACnE,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACtC,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACtC,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACtC,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;IACrD,CAAC;IAED,SAAS,mBAAmB,CAAC,WAAgB;QAC3C,MAAM,MAAM,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;;QAE9C,MAAM,YAAY,GAAG,wBAAwB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC/D,MAAM,aAAa,GAAG,WAAW,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC;QAC9C,yBAAyB,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;QACvD,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,MAAM,CAAC;QAClC,YAAY,CAAC,YAAY,EAAE,CAAC;QAC5B,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,SAAS,iBAAiB,CAAC,WAAgB;QACzC,OAAO,WAAW,CAACA,UAAC,CAAC,iBAAiB,CAAC,CAACA,UAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,KAAU;YAC/D,MAAM,MAAM,GAAG,KAAK,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC;YACpC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC,CAAC,CAAC;IACL;;ICnGA,SAAS,cAAc,CAAC,KAAU;QAChC,MAAM,cAAc,GAAG,KAAK,CAACA,UAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,IAAI,GAAG,wBAAwB,CAAC,cAAc,CAAC,CAAC;;QAEtD,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;QAElE,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACzC,sBAAsB,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC;;QAEnD,OAAO,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAED,SAAS,sBAAsB,CAAC,IAAS,EAAE,cAAmB,EAAE,IAAS;QACvE,MAAM,gBAAgB,GAAG,cAAc,CAACA,UAAC,CAAC,MAAM,CAAC,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC;QACjE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,SAAS,wBAAwB,CAAC,cAAmB;QACnD,OAAO;YACL,CAAC,EAAE,cAAc,CAACA,UAAC,CAAC,IAAI,CAAC;YACzB,CAAC,EAAE,cAAc,CAACA,UAAC,CAAC,IAAI,CAAC;YACzB,CAAC,EAAE,cAAc,CAACA,UAAC,CAAC,IAAI,CAAC;SAC1B,CAAC;IACJ;;IC1BA,SAAS,aAAa,CAAC,KAAU;;QAE/B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;QAE5B,OAAO,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC9B;;ICGA,SAAS,mBAAmB,CAAC,UAAe;QAC1C,UAAU,CAACO,cAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,OAAY,KAAK,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7E,UAAU,CAACA,cAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAU,KAAK,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,SAAS,iBAAiB,CAAC,IAAS;QAClC,IAAI;YACF,kBAAkB,CAAC,IAAI,CAAC,CAAC;YACzB,kBAAkB,CAAC,IAAI,CAAC,CAAC;SAC1B;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;IACH,CAAC;IAED,SAAS,kBAAkB,CAAC,OAAY;QACtC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QAChC,uBAAuB,CAAC,OAAO,CAACP,UAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QAChD,uBAAuB,CAAC,OAAO,CAACA,UAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,SAAS,uBAAuB,CAAC,KAAU;QACzC,IAAI,KAAK;YAAE,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS,KAAK,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,SAAS,sBAAsB,CAAC,OAAY;QAC1C,IAAI;YACF,MAAM,eAAe,GAAG,OAAO,CAACA,UAAC,CAAC,cAAc,CAAC,CAACA,UAAC,CAAC,eAAe,CAAC,CAAC;YACrE,OAAO,CAACA,UAAC,CAAC,mBAAmB,CAAC,GAAG,eAAe,GAAG,eAAe,GAAG,EAAE,CAAC;SACzE;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;IACH,CAAC;IAED,SAAS,kBAAkB,CAAC,OAAY;QACtC,yBAAyB,CAAC,OAAO,CAAC,CAAC;QACnC,yBAAyB,CAAC,OAAO,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QAClD,yBAAyB,CAAC,OAAO,CAACA,UAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,SAAS,yBAAyB,CAAC,KAAU;QAC3C,IAAI,KAAK;YAAE,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS,KAAK,yBAAyB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,SAAS,yBAAyB,CAAC,OAAY;QAC7C,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;QACzB,OAAO,CAACA,UAAC,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,CAAC,cAAmB;YACzD,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;YACrE,iBAAiB,CAAC,KAAK,GAAG,OAAO,CAAC;YAClC,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAC7C,CACA,CAAC;IACJ,CAAC;IAED;IACA,MAAM,WAAW,GAAG;QAClB,CAACa,aAAC,CAAC,OAAO,GAAG,UAAU;QACvB,CAACA,aAAC,CAAC,UAAU,GAAG,aAAa;QAC7B,CAACA,aAAC,CAAC,oBAAoB,GAAG,uBAAuB;QACjD,CAACA,aAAC,CAAC,IAAI,GAAG,OAAO;QACjB,CAACA,aAAC,CAAC,YAAY,GAAG,eAAe;QACjC,CAACA,aAAC,CAAC,QAAQ,GAAG,WAAW;QACzB,CAACA,aAAC,CAAC,iBAAiB,GAAG,oBAAoB;QAC3C,CAACA,aAAC,CAAC,YAAY,GAAG,eAAe;QACjC,CAACA,aAAC,CAAC,WAAW,GAAG,cAAc;QAC/B,CAACA,aAAC,CAAC,YAAY,GAAG,aAAa;KAChC,CAAC;IAEF;IACA,SAAS,iBAAiB,CAAC,cAAmB,EAAE,OAAY;QAC1D,MAAM,IAAI,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;QACrC,IAAI;YACF,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;SACnD;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,IAAI,CAAC,mBAAmB,OAAO,CAACb,UAAC,CAAC,QAAQ,CAAC,YAAY,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;SAC9E;IACH,CAAC;IAED,SAAS,OAAO,CAAC,cAAmB;QAClC,MAAM,IAAI,GAAG,cAAc,CAACA,UAAC,CAAC,kBAAkB,CAAC,CAAC;QAClD,OAAO,IAAI,GAAG,IAAI,GAAG,cAAc,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC;IAClD;;ICpFA,SAAS,gBAAgB,CAAC,UAAe;QACvC,UAAU,CAACO,cAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,OAAY;YAC1C,IAAI;gBACF,IAAI,OAAO,CAACP,UAAC,CAAC,WAAW,CAAC;oBAAE,qBAAqB,CAAC,OAAO,CAAC,CAAC;aAC5D;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,CAAC,IAAI,CAAC,kCAAkC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;aAC9D;SACF,CAAC,CAAC;IACL,CAAC;IAED,SAAS,qBAAqB,CAAC,OAAY;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnD,MAAM,YAAY,GAAG,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,YAAY,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,YAAY,CAACA,UAAC,CAAC,MAAM,CAAC;gBACzD,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,2BAA2B,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;SAC/E;IACH,CAAC;IAED,SAAS,2BAA2B,CAAC,OAAY,EAAE,QAAa;QAC9D,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;QACtC,MAAM,UAAU,GAAG,oBAAoB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC5D,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;;QAEvD,MAAM,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;QAE3E,MAAM,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAChD,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC7C,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,gBAAgB,CAAC,YAAiB,EAAE,QAAa,EAAE,MAAW;QACrE,MAAM,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;QAClC,MAAM,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC;QAC3B,MAAM,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;QACxC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvB,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAED,SAAS,WAAW,CAAC,OAAY;QAC/B,MAAM,YAAY,GAAG,OAAO,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE;YAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5F,OAAO,QAAQ,CAAC;IAClB;;IC9CA,SAAS,WAAW,CAAC,OAAY;QAC/B,IAAI;;YAEF,OAAO,YAAY,CAACC,QAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;SAC1C;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,IAAI,CAAC,YAAY,OAAO,uCAAuC,CAAC,CAAC;SAC1E;IACH,CAAC;IAED,SAAS,YAAY,CAAC,OAAY;QAChC,IAAG;;YAED,OAAO,YAAY,CAACA,QAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC;SAC3C;QAAC,WAAM;YACN,OAAO,YAAY,CAACA,QAAC,CAAC,OAAO,CAAC,CAAC;SAChC;IACH,CAAC;IAED,SAAS,aAAa,CAAC,KAAU;;QAE/B,OAAO,IAAI,KAAK,CAAC,mBAAmB,CAAC;YACnC,GAAG,eAAe,CAAC,KAAK,CAAC;SAC1B,CAAC,CAAC;IACL,CAAC;IASD,SAAS,iBAAiB,CAAC,KAAU,EAAE,OAAO,GAAG,GAAG;;QAElD,OAAO,IAAI,KAAK,CAAC,iBAAiB,CAAC;YACjC,GAAG,eAAe,CAAC,KAAK,CAAC;YACzB,OAAO,EAAE,OAAO;YAChB,WAAW,EAAE,IAAI;YACjB,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;IACL,CAAC;IAED,SAAS,eAAe,CAAC,KAAU;QACjC,OAAO;YACL,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,CAAC;YACP,aAAa,EAAE,IAAI;YACnB,mBAAmB,EAAE,CAAC;YACtB,kBAAkB,EAAE,CAAC;SACtB,CAAC;IACJ,CAAC;IAED,MAAM,MAAM,GAAG;QACb,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,QAAQ;QACf,GAAG,EAAE,QAAQ;QACb,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,QAAQ;QACnB,QAAQ,EAAE,QAAQ;QAClB,SAAS,EAAE,QAAQ;QACnB,KAAK,EAAE,QAAQ;KAChB,CAAC;IAEF,MAAM,YAAY,GAAG;QACnB,CAACA,QAAC,CAAC,OAAO,GAAG;YACX,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,IAAI;SACvB;QACD,CAACA,QAAC,CAAC,mBAAmB,GAAG;YACvB,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,IAAI;SACvB;QACD,CAACA,QAAC,CAAC,OAAO,GAAG;YACX,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,IAAI;SACvB;QACD,CAACA,QAAC,CAAC,OAAO,GAAG;YACX,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,IAAI;SACvB;QACD,CAACA,QAAC,CAAC,WAAW,GAAG;YACf,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,IAAI;SACvB;QACD,CAACA,QAAC,CAAC,OAAO,GAAG;YACX,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,IAAI;SACvB;QACD,CAACA,QAAC,CAAC,mBAAmB,GAAG;YACvB,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,IAAI;SACvB;QACD,CAACA,QAAC,CAAC,oBAAoB,GAAG;;YAExB,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAQ,CAAC;YACxC,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B;QACD,CAACA,QAAC,CAAC,OAAO,GAAG;YACX,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B;QACD,CAACA,QAAC,CAAC,UAAU,GAAG;YACd,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B;QACD,CAACA,QAAC,CAAC,SAAS,GAAG;YACb,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B;QACD,CAACA,QAAC,CAAC,QAAQ,GAAG;YACZ,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B;QACD,CAACA,QAAC,CAAC,cAAc,GAAG;YAClB,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B;QACD,CAACA,QAAC,CAAC,QAAQ,GAAG;YACZ,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC;YAClD,SAAS,EAAE,MAAM,CAAC,QAAQ;SAC3B;QACD,CAACA,QAAC,CAAC,SAAS,GAAG;YACb,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B;QACD,CAACA,QAAC,CAAC,eAAe,GAAG;YACnB,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,IAAI;SACvB;QACD,CAACA,QAAC,CAAC,SAAS,GAAG;YACb,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC;YAClD,SAAS,EAAE,MAAM,CAAC,QAAQ;SAC3B;QACD,CAACA,QAAC,CAAC,QAAQ,GAAG;YACZ,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;YAChD,SAAS,EAAE,MAAM,CAAC,KAAK;SACxB;QACD,CAACA,QAAC,CAAC,iBAAiB,GAAG;YACrB,QAAQ,EAAE,iBAAiB,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;YAChD,SAAS,EAAE,MAAM,CAAC,KAAK;SACxB;QACD,CAACA,QAAC,CAAC,uBAAuB,GAAG;YAC3B,QAAQ,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YACrC,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B;KACF;;ICjJD,SAAS,cAAc,CAAC,UAAe;QACrC,qBAAqB,CAAC,UAAU,CAAC,CAAC;QAClC,UAAU,CAACM,cAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,OAAY;YAC1C,mBAAmB,CAAC,OAAO,CAAC,CAAC;YAC7B,uBAAuB,CAAC,OAAO,CAAC,CAAC;YACjC,0BAA0B,CAAC,OAAO,CAAC,CAAC;SACrC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,qBAAqB,CAAC,UAAe;QAC5C,UAAU,CAACA,cAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,KAAU,KAAK,KAAK,CAACP,UAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,IAAS,KAAK,eAAe,CAAC,IAAI,EAAE,KAAK,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAC9H,CAAC;IACJ,CAAC;IAED,SAAS,mBAAmB,CAAC,OAAY;QACvC,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,IAAS;YAClC,eAAe,CAAC,IAAI,EAAE,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC9C,CAAC,CAAC;IACL,CAAC;IAED,SAAS,uBAAuB,CAAC,OAAY;QAC3C,mBAAmB,CAAC,OAAO,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,SAAS,0BAA0B,CAAC,OAAY;QAC9C,mBAAmB,CAAC,OAAO,CAACA,UAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,SAAS,eAAe,CAAC,IAAS,EAAE,OAAY;QAC9C,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM;YAAE,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;QAC/D,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI;YAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IAChF,CAAC;IAED,SAAS,mBAAmB,CAAC,KAAU;QACrC,IAAI,KAAK;YACP,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS;gBACtB,MAAM,IAAI,GAAG,IAAI,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,IAAI,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC/C,CAAC,CAAC;IACP;;ICvCA,SAAS,SAAS,CAAC,UAAe;QAChC,UAAU,CAACO,cAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,OAAY;YAC1C,sBAAsB,CAAC,OAAO,CAAC,CAAC;YAChC,oBAAoB,CAAC,OAAO,CAACP,UAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAC5C,oBAAoB,CAAC,OAAO,CAACA,UAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SAC9C,CAAC,CAAC;IACL,CAAC;IAED,SAAS,sBAAsB,CAAC,OAAY;QAC1C,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,IAAS;YACpC,MAAM,QAAQ,GAAG,OAAO,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC;YACrC,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,IAAI,QAAQ;gBAAE,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SACzE,CAAC,CAAC;IACL,CAAC;IAED,SAAS,oBAAoB,CAAC,KAAU;QACtC,IAAI,KAAK;YACP,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS,KAAK,IAAI,CAACA,UAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,QAAa,KAAK,iBAAiB,CAAC,IAAI,CAACA,UAAC,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC,CACtH,CAAC;IACN,CAAC;IAED,SAAS,iBAAiB,CAAC,QAAa,EAAE,IAAS;QACjD,MAAM,SAAS,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;;QAEzC,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;QAExD,MAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;;QAEnE,MAAM,SAAS,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACtB;;IC9BA,SAAS,UAAU,CAAC,UAAe;QACjC,MAAM,KAAK,GAAG,UAAU,CAACO,cAAC,CAAC,KAAK,CAAC,CAACP,UAAC,CAAC,KAAK,CAAC,CAAC;QAC3C,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,KAAK,KAAK,CAAC;YAAE,OAAO;QACxB,iBAAiB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;IACvC,CAAC;IAED,SAAS,iBAAiB,CAAC,KAAU,EAAE,UAAe;;QAEpD,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;QAClC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrB,MAAM,UAAU,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;;QAEhD,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YACpC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACzB,CAAC,CAAC;IACL,CAAC;IAED,SAAS,gBAAgB,CAAC,UAAe;QACvC,MAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,UAAU,CAACO,cAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,OAAY,KAAKO,aAAW,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;QACpF,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,SAASA,aAAW,CAAC,OAAY,EAAE,WAAgB;QACjD,WAAW,CAAC,IAAI,CAAC,GAAG,OAAO,CAACd,UAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzC,IAAI,OAAO,CAACA,UAAC,CAAC,UAAU,CAAC;YACvB,OAAO,CAACA,UAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,OAAY,KAAKc,aAAW,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,SAAS,YAAY,CAAC,KAAU;QAC9B,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,QAAa;YAC5C,OAAO,QAAQ,CAACd,UAAC,CAAC,QAAQ,CAAC,KAAK,YAAY,CAAC;SAC9C,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,MAAM,MAAM,GAAG,UAAU,CAACA,UAAC,CAAC,MAAM,CAAC,CAAC;;QAEpC,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IAED,MAAM,OAAO,GAAG;QACd,GAAG,EAAI,SAAS;QAChB,IAAI,EAAG,QAAQ;QACf,IAAI,EAAG,OAAO;QACd,IAAI,EAAG,MAAM;QACb,IAAI,EAAG,KAAK;QACZ,IAAI,EAAG,IAAI;QACX,KAAK,EAAE,GAAG;QACV,IAAI,EAAG,EAAE;QACT,CAAC,EAAM,CAAC;QACR,IAAI,EAAG,GAAG;QACV,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,MAAM;QACb,IAAI,EAAG,OAAO;QACd,IAAI,EAAG,QAAQ;QACf,KAAK,EAAE,SAAS;QAChB,IAAI,EAAG,UAAU;KAClB;;ICxDD,SAAS,aAAa,CAAC,UAAe;QACpC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,mBAAmB,CAAC,UAAU,CAAC,CAAC;QAChC,oBAAoB,CAAC,UAAU,CAAC,CAAC;QACjC,SAAS,CAAC,UAAU,CAAC,CAAC;QACtB,gBAAgB,CAAC,UAAU,CAAC,CAAC;QAC7B,cAAc,CAAC,UAAU,CAAC,CAAC;QAC3B,UAAU,CAAC,UAAU,CAAC,CAAC;QACvB,OAAO,UAAU,CAAC;IACpB;;ICZA,SAAS,OAAO,CAAC,OAAY;QAC3B,MAAM,MAAM,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACzC,MAAM,UAAU,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC5C,OAAO,aAAa,CAAC,UAAU,CAAC,CAAC;IACnC;;;;;;;;;;;;"}